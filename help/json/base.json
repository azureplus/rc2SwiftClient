{
   "help" : [
      {
         "package" : "base",
         "desc" : " Abbreviate strings to at least minlength characters, such that they remain unique (if they were), unless strict = TRUE. ",
         "name" : "abbreviate",
         "aliases" : "",
         "title" : "Abbreviate Strings"
      },
      {
         "package" : "base",
         "name" : "agrep",
         "desc" : " Searches for approximate matches to pattern (the first argument) within each element of the string x (the second argument) using the generalized Levenshtein edit distance (the minimal possibly weighted number of insertions, deletions and substitutions needed to transform one string into another). ",
         "aliases" : "agrepl:fuzzy:matching:.amatch_bounds:.amatch_costs",
         "title" : "Approximate String Matching (Fuzzy Matching)"
      },
      {
         "title" : "Test if Two Objects are (Nearly) Equal",
         "aliases" : "all.equal.default:all.equal.numeric:all.equal.character:all.equal.environment:all.equal.envRefClass:all.equal.factor:all.equal.formula:all.equal.list:all.equal.language:all.equal.POSIXt:all.equal.raw:attr.all.equal",
         "name" : "all.equal",
         "desc" : " all.equal(x, y) is a utility to compare objects x and y testing near equality. If they are different, comparison is still made to some extent, and a report of the differences is returned. Do not use all.equal directly in if expressions---either use isTRUE(all.equal(....)) or identical if appropriate. ",
         "package" : "base"
      },
      {
         "desc" : " Given a set of logical vectors, are all of the values true? ",
         "name" : "all",
         "package" : "base",
         "title" : "Are All Values True?",
         "aliases" : ""
      },
      {
         "aliases" : "all.vars",
         "title" : "Find All Names in an Expression",
         "package" : "base",
         "desc" : " Return a character vector containing all the names which occur in an expression or call. ",
         "name" : "all.names"
      },
      {
         "title" : "Are Some Values True?",
         "aliases" : "",
         "name" : "any",
         "desc" : " Given a set of logical vectors, is at least one of the values true? ",
         "package" : "base"
      },
      {
         "desc" : " Transpose an array by permuting its dimensions and optionally resizing it. ",
         "name" : "aperm",
         "package" : "base",
         "title" : "Array Transposition",
         "aliases" : "aperm.default:aperm.table"
      },
      {
         "name" : "append",
         "desc" : " Add elements to a vector. ",
         "package" : "base",
         "title" : "Vector Merging",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Apply Functions Over Array Margins",
         "package" : "base",
         "name" : "apply",
         "desc" : " Returns a vector or array or list of values obtained by applying a function to margins of an array or matrix. "
      },
      {
         "aliases" : "",
         "title" : "Argument List of a Function",
         "package" : "base",
         "desc" : " Displays the argument names and corresponding default values of a function or primitive. ",
         "name" : "args"
      },
      {
         "title" : "Arithmetic Operators",
         "aliases" : "-:*:**:/:^:%%:%/%:Arithmetic",
         "name" : "Arithmetic",
         "desc" : " These unary and binary operators perform arithmetic on numeric or complex vectors (or objects which can be coerced to them). ",
         "package" : "base"
      },
      {
         "aliases" : "as.array:as.array.default:is.array",
         "title" : "Multi-way Arrays",
         "package" : "base",
         "name" : "array",
         "desc" : " Creates or tests for arrays. "
      },
      {
         "package" : "base",
         "desc" : " Functions to check if an object is a data frame, or coerce it if possible. ",
         "name" : "as.data.frame",
         "aliases" : "is.data.frame:as.data.frame.AsIs:as.data.frame.character:as.data.frame.complex:as.data.frame.data.frame:as.data.frame.default:as.data.frame.factor:as.data.frame.integer:as.data.frame.list:as.data.frame.logical:as.data.frame.raw:as.data.frame.matrix:as.data.frame.model.matrix:as.data.frame.noquote:as.data.frame.numeric:as.data.frame.ordered:as.data.frame.ts:as.data.frame.vector:as.data.frame.array:as.data.frame.difftime",
         "title" : " Coerce to a Data Frame "
      },
      {
         "package" : "base",
         "desc" : " Functions to convert between character representations and objects of class \"Date\" representing calendar dates. ",
         "name" : "as.Date",
         "aliases" : "as.character.Date:as.Date:as.Date.character:as.Date.default:as.Date.factor:as.Date.POSIXct:as.Date.POSIXlt:as.Date.date:as.Date.dates:as.Date.numeric",
         "title" : "Date Conversion Functions to and from Character"
      },
      {
         "aliases" : "",
         "title" : " Coerce to an Environment Object ",
         "package" : "base",
         "name" : "as.environment",
         "desc" : " A generic function coercing an object to an environment. A number or a character string is converted to the corresponding environment on the search path. "
      },
      {
         "desc" : " as.function is a generic function which is used to convert objects to functions. as.function.default works on a list x, which should contain the concatenation of a formal argument list and an expression or an object of mode \"call\" which will become the function body. The function will be defined in a specified environment, by default that of the caller. ",
         "name" : "as.function",
         "package" : "base",
         "title" : "Convert Object to Function",
         "aliases" : "as.function.default"
      },
      {
         "aliases" : "as.POSIXct.default:as.POSIXct.POSIXlt:as.POSIXct.date:as.POSIXct.dates:as.POSIXct.Date:as.POSIXct.numeric:as.POSIXlt:as.POSIXlt.Date:as.POSIXlt.date:as.POSIXlt.dates:as.POSIXlt.POSIXct:as.POSIXlt.factor:as.POSIXlt.character:as.POSIXlt.default:as.POSIXlt.numeric:as.double.POSIXlt",
         "title" : "Date-time Conversion Functions",
         "package" : "base",
         "desc" : " Functions to manipulate objects of classes \"POSIXlt\" and \"POSIXct\" representing calendar dates and times. ",
         "name" : "as.POSIX*"
      },
      {
         "title" : "Inhibit Interpretation/Conversion of Objects",
         "aliases" : "AsIs:print.AsIs:[.AsIs",
         "desc" : " Change the class of an object to indicate that it should be treated as is. ",
         "name" : "AsIs",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " Assign a value to a name in an environment. ",
         "name" : "assign",
         "aliases" : "",
         "title" : "Assign a Value to a Name"
      },
      {
         "name" : "assignOps",
         "desc" : " Assign a value to a name. ",
         "package" : "base",
         "title" : "Assignment Operators",
         "aliases" : "=:<<-:->:->>:assignOps"
      },
      {
         "aliases" : ".conflicts.OK",
         "title" : "Attach Set of R Objects to Search Path",
         "package" : "base",
         "desc" : " The database is attached to the search path. This means that the database is searched by when evaluating a variable, so objects in the database can be accessed by simply giving their names. ",
         "name" : "attach"
      },
      {
         "title" : "Object Attributes",
         "aliases" : "attr<-",
         "name" : "attr",
         "desc" : " Get or set specific attributes of an object. ",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "attributes",
         "desc" : " These functions access an object's attributes. The first form below returns the object's attribute list. The replacement forms uses the list on the right-hand side of the assignment as the object's attributes (if appropriate). ",
         "aliases" : "attributes<-:mostattributes<-",
         "title" : "Object Attribute Lists"
      },
      {
         "package" : "base",
         "name" : "autoload",
         "desc" : " autoload creates a promise-to-evaluate autoloader and stores it with name name in .AutoloadEnv environment. When attempts to evaluate name, autoloader is run, the package is loaded and name is re-evaluated in the new package's environment. The result is that behaves as if file was loaded but it does not occupy memory. .Autoloaded contains the names of the packages for which autoloading has been promised. ",
         "aliases" : "autoloader:.AutoloadEnv:.Autoloaded:Autoloads",
         "title" : "On-demand Loading of Packages"
      },
      {
         "title" : "Solve an Upper or Lower Triangular System",
         "aliases" : "forwardsolve",
         "desc" : " Solves a triangular system of linear equations. ",
         "name" : "backsolve",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " The functions or variables listed here are no longer part of as they are no longer needed. ",
         "name" : "base-defunct",
         "aliases" : "Version:provide:.Provided:category:print.anova.glm:print.anova.lm:print.tabular:print.plot:save.plot:system.test:getenv:read.table.url:scan.url:source.url:httpclient:parse.dcf:.Alias:print.ordered:.Dyn.libs:.lib.loc:machine:Platform:Machine:restart:printNoClass:codes:codes.factor:codes.ordered:codes<-:print.atomic:La.eigen:tetragamma:pentagamma:package.description:loadURL:delay:write.table0:format.char:La.chol:La.chol2inv:symbol.C:symbol.For:unix:gammaCody:manglePackageName:.Import:.ImportFrom:.Export:.S3method:.First.lib:mem.limits:.readRDS:.saveRDS:Sys.putenv:real:as.real:is.real:.find.package:.path.package",
         "title" : "Defunct Functions in Package base"
      },
      {
         "package" : "base",
         "name" : "base-deprecated",
         "desc" : " These functions are provided for compatibility with older versions of only, and may be defunct as soon as the next release. ",
         "aliases" : "",
         "title" : "Deprecated Functions in Package base"
      },
      {
         "title" : "Internal Objects in Package base",
         "aliases" : ".subset2:.getRequiredPackages:.getRequiredPackages2:testPlatformEquivalence:.isMethodsDispatchOn:sys.save.image:sys.load.image:.row_names_info:.set_row_names:.ArgsEnv:.GenericArgsEnv:findPackageEnv:lazyLoadDBfetch:.TAOCP1997init:.gt:.gtn:.primTrace:.primUntrace:.POSIXct:.POSIXlt:.difftime:.cache_class:.Firstlib_as_onLoad:.methodsNamespace:.popath:.mapply:.detach:.maskedMsg:.C_R_addTaskCallback:.C_R_getTaskCallbackNames:.C_R_removeTaskCallback:.F_dchdc:.F_dqrcf:.F_dqrdc2:.F_dqrqty:.F_dqrqy:.F_dqrrsd:.F_dqrxb:.F_dtrco:.C_R_getbcprofcounts:.C_R_startbcprof:.C_R_stopbcprof",
         "name" : "base-internal",
         "desc" : " Internal objects in the base package which are only user-visible because of the special nature of the base namespace. ",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "base-package",
         "desc" : " Base R functions ",
         "aliases" : "base",
         "title" : " The R Base Package "
      },
      {
         "desc" : " basename removes all of the path up to and including the last path separator (if any). dirname returns the part of the path up to but excluding the last path separator, or \".\" if there is no path separator. ",
         "name" : "basename",
         "package" : "base",
         "title" : "Manipulate File Paths",
         "aliases" : "dirname"
      },
      {
         "title" : "Bessel Functions",
         "aliases" : "Bessel:besselI:besselJ:besselK:besselY",
         "name" : "Bessel",
         "desc" : " Bessel Functions of integer and fractional order, of first and second kind, J_{\\ u}J(nu) and Y_{\\ u}Y(nu), and Modified Bessel functions (of first and third kind), I_{\\ u}I(nu) and K_{\\ u}K(nu). ",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " Bin a numeric vector and return integer codes for the binning. ",
         "name" : ".bincode",
         "aliases" : "",
         "title" : "Bin a Numeric Vector"
      },
      {
         "name" : "bindenv",
         "desc" : " These functions represent an experimental interface for adjustments to environments and bindings within environments. They allow for locking environments as well as individual bindings, and for linking a variable to a function. ",
         "package" : "base",
         "title" : "Binding and Environment Locking, Active Bindings",
         "aliases" : "lockEnvironment:environmentIsLocked:lockBinding:unlockBinding:makeActiveBinding:bindingIsLocked:bindingIsActive"
      },
      {
         "title" : "Bitwise Logical Operations",
         "aliases" : "bitwAnd:bitwOr:bitwXor:bitwShiftL:bitwShiftR",
         "name" : "bitwise",
         "desc" : " Logical operations on integer vectors with elements viewed as sets of bits. ",
         "package" : "base"
      },
      {
         "title" : "Access to and Manipulation of the Body of a Function",
         "aliases" : "body<-",
         "name" : "body",
         "desc" : " Get or set the body of a function. ",
         "package" : "base"
      },
      {
         "aliases" : "",
         "title" : "Partial substitution in expressions",
         "package" : "base",
         "name" : "bquote",
         "desc" : " An analogue of the LISP backquote macro. bquote quotes its argument except that terms wrapped in .() are evaluated in the specified where environment. "
      },
      {
         "aliases" : "",
         "title" : "Environment Browser",
         "package" : "base",
         "desc" : " Interrupt the execution of an expression and allow the inspection of the environment where browser was called from. ",
         "name" : "browser"
      },
      {
         "title" : " Functions to Retrieve Values Supplied by Calls to the Browser ",
         "aliases" : "browserCondition:browserSetDebug",
         "name" : "browserText",
         "desc" : " A call to browser can provide context by supplying either a text argument or a condition argument. These functions can be used to retrieve either of these arguments. ",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "builtins",
         "desc" : " Return the names of all the built-in objects. These are fetched directly from the symbol table of the interpreter. ",
         "aliases" : "",
         "title" : "Returns the Names of All Built-in Objects"
      },
      {
         "title" : "Apply a Function to a Data Frame Split by Factors",
         "aliases" : "by.default:by.data.frame:print.by",
         "desc" : " Function by is an object-oriented wrapper for tapply applied to data frames. ",
         "name" : "by",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "c",
         "desc" : " This is a generic function which combines its arguments. The default method combines its arguments to form a vector. All arguments are coerced to a common type which is the type of the returned value, and all attributes except names are removed. ",
         "aliases" : "",
         "title" : "Combine Values into a Vector or List"
      },
      {
         "aliases" : "is.call:as.call",
         "title" : "Function Calls",
         "package" : "base",
         "desc" : " Create or test for objects of mode \"call\". ",
         "name" : "call"
      },
      {
         "package" : "base",
         "desc" : " A downward-only version of Scheme's call with current continuation. ",
         "name" : "callCC",
         "aliases" : "",
         "title" : "Call With Current Continuation"
      },
      {
         "aliases" : ".External",
         "title" : "Modern Interfaces to C/C++ code",
         "package" : "base",
         "desc" : " Functions to pass objects to compiled C/C++ code that has been loaded into . ",
         "name" : "CallExternal"
      },
      {
         "aliases" : "",
         "title" : "Report Capabilities of this Build of R",
         "package" : "base",
         "name" : "capabilities",
         "desc" : " Report on the optional features which have been compiled into this build of . "
      },
      {
         "package" : "base",
         "name" : "cat",
         "desc" : " Outputs the objects, concatenating the representations. cat performs much less conversion than print. ",
         "aliases" : "",
         "title" : "Concatenate and Print"
      },
      {
         "aliases" : "rbind:cbind.data.frame:rbind.data.frame:.__H__.cbind:.__H__.rbind",
         "title" : "Combine R Objects by Rows or Columns",
         "package" : "base",
         "name" : "cbind",
         "desc" : " Take a sequence of vector, matrix or data-frame arguments and combine by columns or rows, respectively. These are generic functions with methods for other classes. "
      },
      {
         "aliases" : "",
         "title" : "Expand a String with Respect to a Target Table",
         "package" : "base",
         "desc" : " Seeks a unique match of its first argument among the elements of its second. If successful, it returns this element; otherwise, it performs an action specified by the third argument. ",
         "name" : "char.expand"
      },
      {
         "name" : "character",
         "desc" : " Create or test for objects of type \"character\". ",
         "package" : "base",
         "title" : "Character Vectors",
         "aliases" : "as.character:as.character.default:as.character.factor:is.character"
      },
      {
         "package" : "base",
         "name" : "charmatch",
         "desc" : " charmatch seeks matches for the elements of its first argument among those of its second. ",
         "aliases" : "",
         "title" : "Partial String Matching"
      },
      {
         "title" : "Character Translation and Casefolding",
         "aliases" : "tolower:toupper:casefold",
         "desc" : " Translate characters in character vectors, in particular from upper to lower case or vice versa. ",
         "name" : "chartr",
         "package" : "base"
      },
      {
         "aliases" : "chol.default",
         "title" : "The Choleski Decomposition",
         "package" : "base",
         "name" : "chol",
         "desc" : " Compute the Choleski factorization of a real symmetric positive-definite square matrix. "
      },
      {
         "title" : "Inverse from Choleski (or QR) Decomposition",
         "aliases" : "",
         "desc" : " Invert a symmetric, positive definite square matrix from its Choleski decomposition. Equivalently, compute (X'X)^{-1}(X'X)^(-1) from the (R part) of the QR decomposition of X. ",
         "name" : "chol2inv",
         "package" : "base"
      },
      {
         "title" : "Object Classes",
         "aliases" : "class<-:oldClass:oldClass<-:unclass:inherits",
         "desc" : " possesses a simple generic function mechanism which can be used for an object-oriented style of programming. Method dispatch takes place based on the class of the first argument to the generic function. ",
         "name" : "class",
         "package" : "base"
      },
      {
         "desc" : " Returns a matrix of integers indicating their column number in a matrix-like object, or a factor of column labels. ",
         "name" : "col",
         "package" : "base",
         "title" : "Column Indexes",
         "aliases" : ""
      },
      {
         "desc" : " Retrieve or set the row or column names of a matrix-like object. ",
         "name" : "row+colnames",
         "package" : "base",
         "title" : "Row and Column Names",
         "aliases" : "rownames<-:colnames:colnames<-"
      },
      {
         "package" : "base",
         "desc" : " Generate regular sequences. ",
         "name" : "Colon",
         "aliases" : "colon",
         "title" : "Colon Operator"
      },
      {
         "name" : "colSums",
         "desc" : " Form row and column sums and means for numeric arrays. ",
         "package" : "base",
         "title" : "Form Row and Column Sums and Means",
         "aliases" : "rowSums:colMeans:rowMeans:.colSums:.rowSums:.colMeans:.rowMeans"
      },
      {
         "name" : "commandArgs",
         "desc" : " Provides access to a copy of the command line arguments supplied when this session was invoked. ",
         "package" : "base",
         "title" : "Extract Command Line Arguments",
         "aliases" : ""
      },
      {
         "title" : "Query or Set a \"comment\" Attribute",
         "aliases" : "comment<-",
         "name" : "comment",
         "desc" : " These functions set and query a comment attribute for any objects. This is typically useful for data.frames or model fits. Contrary to other attributes, the comment is not printed (by print or print.default). Assigning NULL or a zero-length character vector removes the comment. ",
         "package" : "base"
      },
      {
         "title" : "Relational Operators",
         "aliases" : "<=:==:!=:>=:>:Comparison:collation",
         "desc" : " Binary operators which allow the comparison of values in atomic vectors. ",
         "name" : "Comparison",
         "package" : "base"
      },
      {
         "name" : "complex",
         "desc" : " Basic functions which support complex arithmetic in R. ",
         "package" : "base",
         "title" : "Complex Vectors",
         "aliases" : "as.complex:is.complex:Re:Im:Mod:Arg:Conj"
      },
      {
         "title" : "Condition Handling and Recovery",
         "aliases" : "condition:computeRestarts:conditionCall:conditionMessage:findRestart:invokeRestart:invokeRestartInteractively:isRestart:restartDescription:restartFormals:signalCondition:simpleCondition:simpleError:simpleWarning:simpleMessage:tryCatch:withCallingHandlers:withRestarts:.signalSimpleWarning:.handleSimpleError:as.character.condition:as.character.error:conditionCall.condition:conditionMessage.condition:print.condition:print.restart",
         "name" : "conditions",
         "desc" : " These functions provide a mechanism for handling unusual conditions, including errors and warnings. ",
         "package" : "base"
      },
      {
         "title" : "Search for Masked Objects on the Search Path",
         "aliases" : "",
         "desc" : " conflicts reports on objects that exist with the same name in two or more places on the search path, usually because an object in the user's workspace or a package is masking a system object of the same name. This helps discover unintentional masking. ",
         "name" : "conflicts",
         "package" : "base"
      },
      {
         "desc" : " Functions to create, open and close connections. ",
         "name" : "connections",
         "package" : "base",
         "title" : "Functions to Manipulate Connections",
         "aliases" : "connection:file:clipboard:pipe:fifo:gzfile:unz:bzfile:xzfile:url:socketConnection:open:open.connection:isOpen:isIncomplete:close:close.connection:flush:flush.connection:print.connection:summary.connection"
      },
      {
         "package" : "base",
         "desc" : " Constants built into . ",
         "name" : "Constants",
         "aliases" : "LETTERS:letters:month.abb:month.name:pi",
         "title" : "Built-in Constants"
      },
      {
         "desc" : " The Who-is-who, describing who made significant contributions to the development of . ",
         "name" : "contributors",
         "package" : "base",
         "title" : "R Project Contributors",
         "aliases" : ""
      },
      {
         "aliases" : "if:else:for:in:while:repeat:break:next",
         "title" : "Control Flow",
         "package" : "base",
         "desc" : " These are the basic control-flow constructs of the language. They function in much the same way as control statements in any Algol-like language. They are all reserved words. ",
         "name" : "Control"
      },
      {
         "aliases" : "copyrights",
         "title" : "Copyrights of Files Used to Build R",
         "package" : "base",
         "desc" : " is released under the GNU Public License: see license for details. The license describes your right to use . Copyright is concerned with ownership of intellectual rights, and some of the software used has conditions that the copyright must be explicitly stated: see the Details section. We are grateful to these people and other contributors (see contributors) for the ability to use their work. ",
         "name" : "copyright"
      },
      {
         "desc" : " Given matrices x and y as arguments, return a matrix cross-product. This is formally equivalent to (but usually slightly faster than) the call t(x) %*% y (crossprod) or x %*% t(y) (tcrossprod). ",
         "name" : "crossprod",
         "package" : "base",
         "title" : "Matrix Crossproduct",
         "aliases" : "tcrossprod"
      },
      {
         "aliases" : "",
         "title" : "Report Information on C Stack Size and Usage",
         "package" : "base",
         "name" : "Cstack_info",
         "desc" : " Report information on the C stack size and usage (if available). "
      },
      {
         "aliases" : "cumprod:cummin:cummax",
         "title" : "Cumulative Sums, Products, and Extremes",
         "package" : "base",
         "name" : "cumsum",
         "desc" : " Returns a vector whose elements are the cumulative sums, products, minima or maxima of the elements of the argument. "
      },
      {
         "aliases" : "",
         "title" : " Retrieve Headers from URLs ",
         "package" : "base",
         "name" : "curlGetHeaders",
         "desc" : " Retrieve the headers for a URL for a supported protocol such as http://, ftp://, https:// and ftps://. An optional function not supported on all platforms. "
      },
      {
         "title" : " Report Version of libcurl ",
         "aliases" : "",
         "desc" : " Report version of libcurl in use. ",
         "name" : "libcurlVersion",
         "package" : "base"
      },
      {
         "aliases" : "cut.Date",
         "title" : "Convert a Date or Date-Time Object to a Factor",
         "package" : "base",
         "desc" : " Method for cut applied to date-time objects. ",
         "name" : "cut.POSIXt"
      },
      {
         "desc" : " cut divides the range of x into intervals and codes the values in x according to which interval they fall. The leftmost interval corresponds to level one, the next leftmost to level two and so on. ",
         "name" : "cut",
         "package" : "base",
         "title" : "Convert Numeric to Factor",
         "aliases" : "cut.default"
      },
      {
         "aliases" : "",
         "title" : "Object Classes",
         "package" : "base",
         "name" : "data.class",
         "desc" : " Determine the class of an arbitrary object. "
      },
      {
         "package" : "base",
         "desc" : " This function creates data frames, tightly coupled collections of variables which share many of the properties of matrices and of lists, used as the fundamental data structure by most of 's modeling software. ",
         "name" : "data.frame",
         "aliases" : "default.stringsAsFactors",
         "title" : "Data Frames"
      },
      {
         "aliases" : "",
         "title" : "Convert a Data Frame to a Numeric Matrix",
         "package" : "base",
         "name" : "data.matrix",
         "desc" : " Return the matrix obtained by converting all the variables in a data frame to numeric mode and then binding them together as the columns of a matrix. Factors and ordered factors are replaced by their internal codes. "
      },
      {
         "desc" : " Internal auxiliary functions for use with data frames. ",
         "name" : "dataframeHelpers",
         "package" : "base",
         "title" : "Data Frame Auxiliary Functions",
         "aliases" : ""
      },
      {
         "title" : "System Date and Time",
         "aliases" : "",
         "name" : "date",
         "desc" : " Returns a character string of the current system date and time. ",
         "package" : "base"
      },
      {
         "desc" : " Description of the class \"Date\" representing calendar dates. ",
         "name" : "Dates",
         "package" : "base",
         "title" : "Date Class",
         "aliases" : "Dates:print.Date:summary.Date:Math.Date:Summary.Date:[.Date:[<-.Date:[[.Date:as.data.frame.Date:as.list.Date:c.Date:mean.Date:split.Date"
      },
      {
         "package" : "base",
         "name" : "DateTimeClasses",
         "desc" : " Description of the classes \"POSIXlt\" and \"POSIXct\" representing calendar dates and times. ",
         "aliases" : "POSIXct:POSIXlt:POSIXt:print.POSIXct:print.POSIXlt:summary.POSIXct:summary.POSIXlt:+.POSIXt:-.POSIXt:Ops.POSIXt:Math.POSIXt:Summary.POSIXct:Math.POSIXlt:Summary.POSIXlt:[.POSIXct:[<-.POSIXct:[[.POSIXct:[.POSIXlt:[<-.POSIXlt:as.data.frame.POSIXct:as.data.frame.POSIXlt:as.list.POSIXct:.leap.seconds:anyNA.POSIXlt:is.na.POSIXlt:c.POSIXct:c.POSIXlt:as.matrix.POSIXlt:length.POSIXlt:mean.POSIXct:mean.POSIXlt:str.POSIXt:check_tzones:duplicated.POSIXlt:unique.POSIXlt:split.POSIXct:names.POSIXlt:names<-.POSIXlt:date-time",
         "title" : "Date-Time Classes"
      },
      {
         "package" : "base",
         "desc" : " Reads or writes an object from/to a file in Debian Control File format. ",
         "name" : "dcf",
         "aliases" : "write.dcf",
         "title" : "Read and Write Data in DCF Format"
      },
      {
         "desc" : " Set, unset or query the debugging flag on a function. The text and condition arguments are the same as those that can be supplied via a call to browser. They can be retrieved by the user once the browser has been entered, and provide a mechanism to allow users to identify which breakpoint has been activated. ",
         "name" : "debug",
         "package" : "base",
         "title" : "Debug a Function",
         "aliases" : "debugonce:undebug:isdebugged:debuggingState"
      },
      {
         "aliases" : ".Defunct:defunct",
         "title" : "Marking Objects as Defunct",
         "package" : "base",
         "name" : "Defunct",
         "desc" : " When a function is removed from it should be replaced by a function which calls .Defunct. "
      },
      {
         "title" : "Delay Evaluation",
         "aliases" : "promise:promises",
         "name" : "delayedAssign",
         "desc" : " delayedAssign creates a promise to evaluate the given expression if its value is requested. This provides direct access to the lazy evaluation mechanism used by for the evaluation of (interpreted) functions. ",
         "package" : "base"
      },
      {
         "desc" : " Turn unevaluated expressions into character strings. ",
         "name" : "deparse",
         "package" : "base",
         "title" : "Expression Deparsing",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Options for Expression Deparsing",
         "package" : "base",
         "desc" : " Process the deparsing options for deparse, dput and dump. ",
         "name" : "deparseOpts"
      },
      {
         "desc" : " When an object is about to be removed from it is first deprecated and should include a call to .Deprecated. ",
         "name" : "Deprecated",
         "package" : "base",
         "title" : "Marking Objects as Deprecated",
         "aliases" : ".Deprecated:deprecated"
      },
      {
         "name" : "det",
         "desc" : " det calculates the determinant of a matrix. determinant is a generic function that returns separately the modulus of the determinant, optionally on the logarithm scale, and the sign of the determinant. ",
         "package" : "base",
         "title" : "Calculate the Determinant of a Matrix",
         "aliases" : "determinant:determinant.matrix"
      },
      {
         "desc" : " Detach a database, i.e., remove it from the search() path of available objects. Usually this is either a data.frame which has been attached or a package which was attached by library. ",
         "name" : "detach",
         "package" : "base",
         "title" : "Detach Objects from the Search Path",
         "aliases" : ""
      },
      {
         "aliases" : ".Devices",
         "title" : " Lists of Open/Active Graphics Devices ",
         "package" : "base",
         "name" : ".Device",
         "desc" : " A pairlist of the names of open graphics devices is stored in .Devices. The name of the active device (see dev.cur) is stored in .Device. Both are symbols and so appear in the base namespace. "
      },
      {
         "desc" : " Extract or replace the diagonal of a matrix, or construct a diagonal matrix. ",
         "name" : "diag",
         "package" : "base",
         "title" : "Matrix Diagonals",
         "aliases" : "diag<-"
      },
      {
         "aliases" : "diff.default:diff.POSIXt:diff.Date",
         "title" : "Lagged Differences",
         "package" : "base",
         "desc" : " Returns suitably lagged and iterated differences. ",
         "name" : "diff"
      },
      {
         "desc" : " Time intervals creation, printing, and some arithmetic. ",
         "name" : "difftime",
         "package" : "base",
         "title" : "Time Intervals",
         "aliases" : "as.difftime:as.double.difftime:is.numeric.difftime:print.difftime:format.difftime:units.difftime:units<-.difftime:Ops.difftime:*.difftime:/.difftime:Math.difftime:Summary.difftime:[.difftime:mean.difftime:units:units<-:time:interval"
      },
      {
         "desc" : " Retrieve or set the dimension of an object. ",
         "name" : "dim",
         "package" : "base",
         "title" : "Dimensions of an Object",
         "aliases" : "dim.data.frame:dim<-"
      },
      {
         "name" : "dimnames",
         "desc" : " Retrieve or set the dimnames of an object. ",
         "package" : "base",
         "title" : "Dimnames of an Object",
         "aliases" : "dimnames<-:dimnames.data.frame:dimnames<-.data.frame:provideDimnames"
      },
      {
         "aliases" : "",
         "title" : "Execute a Function Call",
         "package" : "base",
         "name" : "do.call",
         "desc" : " do.call constructs and executes a function call from a name or a function and a list of arguments to be passed to it. "
      },
      {
         "package" : "base",
         "desc" : " The dontCheck function is the same as identity, but is interpreted by R CMD check code analysis as a directive to suppress checking of x. Currently this is only used by checkFF(registration = TRUE) when checking the .NAME argument of foreign function calls. ",
         "name" : "dontCheck",
         "aliases" : "",
         "title" : "Identity Function to Suppress Checking"
      },
      {
         "title" : "Double-Precision Vectors",
         "aliases" : "as.double:is.double:single:as.single:as.single.default",
         "name" : "double",
         "desc" : " Create, coerce to or test for a double-precision vector. ",
         "package" : "base"
      },
      {
         "aliases" : "dget",
         "title" : "Write an Object to a File or Recreate it",
         "package" : "base",
         "desc" : " Writes an ASCII text representation of an object to a file or connection, or uses one to recreate the object. ",
         "name" : "dput"
      },
      {
         "package" : "base",
         "name" : "drop",
         "desc" : " Delete the dimensions of an array which have only one level. ",
         "aliases" : "",
         "title" : "Drop Redundant Extent Information"
      },
      {
         "package" : "base",
         "desc" : " The function droplevels is used to drop unused levels from a factor or, more commonly, from factors in a data frame. ",
         "name" : "droplevels",
         "aliases" : "droplevels.factor:droplevels.data.frame",
         "title" : "droplevels"
      },
      {
         "name" : "dump",
         "desc" : " This function takes a vector of names of objects and produces text representations of the objects on a file or connection. A dump file can usually be sourced into another session. ",
         "package" : "base",
         "title" : "Text Representations of R Objects",
         "aliases" : ""
      },
      {
         "aliases" : "duplicated.default:duplicated.data.frame:duplicated.matrix:duplicated.array:anyDuplicated:anyDuplicated.default:anyDuplicated.array:anyDuplicated.matrix:anyDuplicated.data.frame",
         "title" : "Determine Duplicate Elements",
         "package" : "base",
         "name" : "duplicated",
         "desc" : " duplicated() determines which elements of a vector or data frame are duplicates of elements with smaller subscripts, and returns a logical vector indicating which elements (rows) are duplicates. anyDuplicated(.) is a generalized more efficient shortcut for any(duplicated(.)). "
      },
      {
         "package" : "base",
         "name" : "dyn.load",
         "desc" : " Load or unload DLLs (also known as shared objects), and test whether a C function or Fortran subroutine is available. ",
         "aliases" : "dyn.unload:is.loaded",
         "title" : "Foreign Function Interface"
      },
      {
         "title" : "Apply a Function Over Values in an Environment",
         "aliases" : "",
         "desc" : " eapply applies FUN to the named values from an environment and returns the results as a list. The user can request that all named objects are used (normally names that begin with a dot are not). The output is not sorted and no enclosing environments are searched. This is a primitive function. ",
         "name" : "eapply",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "eigen",
         "desc" : " Computes eigenvalues and eigenvectors of numeric (double, integer, logical) or complex matrices. ",
         "aliases" : "",
         "title" : "Spectral Decomposition of a Matrix"
      },
      {
         "desc" : " encodeString escapes the strings in a character vector in the same way print.default does, and optionally fits the encoded strings within a field width. ",
         "name" : "encodeString",
         "package" : "base",
         "title" : " Encode Character Vector as for Printing ",
         "aliases" : ""
      },
      {
         "name" : "Encoding",
         "desc" : " Read or set the declared encodings for a character vector. ",
         "package" : "base",
         "title" : "Read or Set the Declared Encodings for a Character Vector",
         "aliases" : "Encoding<-:enc2native:enc2utf8"
      },
      {
         "title" : "Environment Access",
         "aliases" : "environment<-:.GlobalEnv:globalenv:emptyenv:baseenv:is.environment:new.env:parent.env:parent.env<-:.BaseNamespaceEnv:environmentName:env.profile:enclosure",
         "desc" : " Get, set, test for and create environments. ",
         "name" : "environment",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " Details of some of the environment variables which affect an session. ",
         "name" : "EnvVar",
         "aliases" : "variables:HOME:LANGUAGE:R_BATCH:R_BROWSER:R_COMPLETION:R_DOC_DIR:R_GSCMD:R_HISTFILE:R_HISTSIZE:R_INCLUDE_DIR:MAKEINDEX:R_PAPERSIZE:R_PDFVIEWER:R_PLATFORM:R_RD4PDF:R_SHARE_DIR:R_TEXI2DVICMD:R_UNZIPCMD:R_ZIPCMD:TMPDIR",
         "title" : "Environment Variables"
      },
      {
         "title" : "Evaluate an (Unevaluated) Expression",
         "aliases" : "evalq:eval.parent:local",
         "name" : "eval",
         "desc" : " Evaluate an expression in a specified environment. ",
         "package" : "base"
      },
      {
         "title" : "Is an Object Defined?",
         "aliases" : "get0",
         "desc" : " Look for an object of the given name and possibly return it ",
         "name" : "exists",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "expand.grid",
         "desc" : " Create a data frame from all combinations of the supplied vectors or factors. See the description of the return value for precise details of the way this is done. ",
         "aliases" : "",
         "title" : "Create a Data Frame from All Combinations of Factors"
      },
      {
         "name" : "expression",
         "desc" : " Creates or tests for objects of mode \"expression\". ",
         "package" : "base",
         "title" : "Unevaluated Expressions",
         "aliases" : "is.expression:as.expression:as.expression.default"
      },
      {
         "aliases" : "[[.data.frame:[<-.data.frame:[[<-.data.frame:$.data.frame:$<-.data.frame",
         "title" : "Extract or Replace Parts of a Data Frame",
         "package" : "base",
         "desc" : " Extract or replace subsets of data frames. ",
         "name" : "Extract.data.frame"
      },
      {
         "aliases" : "[<-.factor:[[.factor:[[<-.factor",
         "title" : "Extract or Replace Parts of a Factor",
         "package" : "base",
         "name" : "Extract.factor",
         "desc" : " Extract or replace subsets of factors. "
      },
      {
         "desc" : " Operators acting on vectors, matrices, arrays and lists to extract or replace parts. ",
         "name" : "Extract",
         "package" : "base",
         "title" : "Extract or Replace Parts of an Object",
         "aliases" : "Subscript:[:[.listof:[.simple.list:[.Dlist:[[:$:getElement:[<-:[[<-:$<-"
      },
      {
         "package" : "base",
         "name" : "Extremes",
         "desc" : " Returns the (parallel) maxima and minima of the input values. ",
         "aliases" : "min:pmax:pmin:pmax.int:pmin.int",
         "title" : "Maxima and Minima"
      },
      {
         "package" : "base",
         "desc" : " Report versions of (external) third-party software used. ",
         "name" : "extSoftVersion",
         "aliases" : "",
         "title" : " Report Versions of Third-Party Software "
      },
      {
         "aliases" : "ordered:is.factor:is.ordered:as.factor:as.ordered:is.na<-.factor:Math.factor:Ops.factor:Summary.factor:Ops.ordered:Summary.ordered:addNA",
         "title" : "Factors",
         "package" : "base",
         "desc" : " The function factor is used to encode a vector as a factor (the terms category and enumerated type are also used for factors). If argument ordered is TRUE, the factor levels are assumed to be ordered. For compatibility with S there is also a function ordered. is.factor, is.ordered, as.factor and as.ordered are the membership and coercion functions for these classes. ",
         "name" : "factor"
      },
      {
         "desc" : " Utility function to access information about files on the user's file systems. ",
         "name" : "file.access",
         "package" : "base",
         "title" : "Ascertain File Accessibility",
         "aliases" : ""
      },
      {
         "package" : "base",
         "name" : "file.choose",
         "desc" : " Choose a file interactively. ",
         "aliases" : "",
         "title" : "Choose a File Interactively"
      },
      {
         "aliases" : "file.mode:file.mtime:file.size",
         "title" : "Extract File Information",
         "package" : "base",
         "name" : "file.info",
         "desc" : " Utility function to extract information about files on the user's file systems. "
      },
      {
         "package" : "base",
         "desc" : " Construct the path to a file from components in a platform-independent way. ",
         "name" : "file.path",
         "aliases" : "",
         "title" : "Construct Path to File"
      },
      {
         "aliases" : "",
         "title" : "Display One or More Files",
         "package" : "base",
         "name" : "file.show",
         "desc" : "Display one or more files."
      },
      {
         "aliases" : "file.append:file.copy:file.create:file.exists:file.remove:file.rename:file.symlink:file.link",
         "title" : "File Manipulation",
         "package" : "base",
         "desc" : " These functions provide a low-level interface to the computer's file system. ",
         "name" : "files"
      },
      {
         "name" : "files2",
         "desc" : " These functions provide a low-level interface to the computer's file system. ",
         "package" : "base",
         "title" : "Manipulaton of Directories and File Permissions",
         "aliases" : "dir.exists:Sys.chmod:Sys.umask:umask"
      },
      {
         "title" : "Find Packages",
         "aliases" : "path.package",
         "desc" : " Find the paths to one or more packages. ",
         "name" : "find.package",
         "package" : "base"
      },
      {
         "title" : "Find Interval Numbers or Indices",
         "aliases" : "",
         "desc" : " Given a vector of non-decreasing breakpoints in vec, find the interval containing each element of x; i.e., if i <- findInterval(x,v), for each index j in x v_{i_j} \\\\le x_j < v_{i_j + 1}v[i[j]] \\\\le x[j] < v[i[j] + 1] where v_0 := -\\\\inftyv[0] := - Inf, v_{N+1} := +\\\\inftyv[N+1] := + Inf, and N <- length(v). At the two boundaries, the returned index may differ by 1, depending on the optional arguments rightmost.closed and all.inside. ",
         "name" : "findInterval",
         "package" : "base"
      },
      {
         "aliases" : "",
         "title" : "Force Evaluation of an Argument",
         "package" : "base",
         "desc" : " Forces the evaluation of a function argument. ",
         "name" : "force"
      },
      {
         "title" : "Call a function with Some Arguments Forced",
         "aliases" : "",
         "name" : "forceAndCall",
         "desc" : " Call a function with a specified number of leading arguments forced before the call if the function is a closure. ",
         "package" : "base"
      },
      {
         "name" : "Foreign-internal",
         "desc" : " Internal versions of .Call and .External. ",
         "package" : "base",
         "title" : "Internal Versions of the Foreign Function Interface",
         "aliases" : ".External2:.Call.graphics"
      },
      {
         "package" : "base",
         "name" : "Foreign",
         "desc" : " Functions to make calls to compiled code that has been loaded into . ",
         "aliases" : ".C:.Fortran",
         "title" : "Foreign Function Interface"
      },
      {
         "title" : "Access to and Manipulation of the Formal Arguments",
         "aliases" : "formals<-",
         "desc" : " Get or set the formal arguments of a function. ",
         "name" : "formals",
         "package" : "base"
      },
      {
         "name" : "format.info",
         "desc" : " Information is returned on how format(x, digits, nsmall) would be formatted. ",
         "package" : "base",
         "title" : "format(.) Information",
         "aliases" : ""
      },
      {
         "package" : "base",
         "desc" : " format.pval is intended for formatting p-values. ",
         "name" : "format.pval",
         "aliases" : "",
         "title" : "Format P Values"
      },
      {
         "title" : "Encode in a Common Format",
         "aliases" : "format.AsIs:format.data.frame:format.default:format.factor",
         "desc" : " Format an object for pretty printing. ",
         "name" : "format",
         "package" : "base"
      },
      {
         "aliases" : "prettyNum",
         "title" : "Formatting Using C-style Formats",
         "package" : "base",
         "name" : "formatC",
         "desc" : " Formatting numbers individually and flexibly, using C style format specifications. "
      },
      {
         "title" : "Format Description Lists",
         "aliases" : "",
         "desc" : "Format vectors of items and their descriptions as 2-column tables or LaTeX-style description lists. ",
         "name" : "formatDL",
         "package" : "base"
      },
      {
         "title" : "Function Definition",
         "aliases" : "return:closure",
         "desc" : " These functions provide the base mechanisms for defining new functions in the language. ",
         "name" : "function",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "funprog",
         "desc" : " Reduce uses a binary function to successively combine the elements of a given vector and a possibly given initial value. Filter extracts the elements of a vector for which a predicate (logical) function gives true. Find and Position give the first or last such element and its position in the vector, respectively. Map applies a function to the corresponding elements of given vectors. Negate creates the negation of a given function. ",
         "aliases" : "Find:Map:Negate:Reduce:Position",
         "title" : "Common Higher-Order Functions in Functional Programming Languages"
      },
      {
         "package" : "base",
         "name" : "gc",
         "desc" : " A call of gc causes a garbage collection to take place. gcinfo sets a flag so that automatic collection is either silent (verbose = FALSE) or prints memory usage statistics (verbose = TRUE). ",
         "aliases" : "gcinfo",
         "title" : "Garbage Collection"
      },
      {
         "title" : "Report Time Spent in Garbage Collection",
         "aliases" : "",
         "name" : "gc.time",
         "desc" : " This function reports the time spent in garbage collection so far in the session while GC timing was enabled. ",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " Provokes garbage collection on (nearly) every memory allocation. Intended to ferret out memory protection bugs. Also makes run very slowly, unfortunately. ",
         "name" : "gctorture",
         "aliases" : "gctorture2:R_GCTORTURE:R_GCTORTURE_WAIT:R_GCTORTURE_INHIBIT_RELEASE",
         "title" : "Torture Garbage Collector"
      },
      {
         "name" : "get",
         "desc" : " Search by name for an object (get) or zero or more objects (mget). ",
         "package" : "base",
         "title" : "Return the Value of a Named Object",
         "aliases" : "mget:dynGet"
      },
      {
         "desc" : " This is an internal function that is called from 's C code to determine the enclosing namespace of a .C/.Call/.Fortran/.External call which has no PACKAGE argument. If the call has been made from a function within a namespace, then we can find the DLL associated with that namespace. The purpose of this is to avoid having to use the PACKAGE argument in these native calls and so better support versions of packages. This is an internal function that may be migrated to internal C code in the future and so should not be used by programmers. ",
         "name" : "getCallingDLL",
         "package" : "base",
         "title" : "Compute DLL for Native Interface Call",
         "aliases" : "getCallingDLLe"
      },
      {
         "aliases" : "getDLLRegisteredRoutines.character:getDLLRegisteredRoutines.DLLInfo:print.NativeRoutineList:print.DLLRegisteredRoutines",
         "title" : "Reflectance Information for C/Fortran routines in a DLL",
         "package" : "base",
         "desc" : " This function allows us to query the set of routines in a DLL that are registered with R to enhance dynamic lookup, error handling when calling native routines, and potentially security in the future. This function provides a description of each of the registered routines in the DLL for the different interfaces, i.e.\\\\ifelse{latex}{\\\\out{~}}{ }latex~ .C, .Call, .Fortran and .External. ",
         "name" : "getDLLRegisteredRoutines"
      },
      {
         "name" : "getLoadedDLLs",
         "desc" : " This function provides a way to get a list of all the DLLs (see dyn.load) that are currently loaded in the session. ",
         "package" : "base",
         "title" : "Get DLLs Loaded in Current Session",
         "aliases" : "print.DLLInfo:print.DLLInfoList:$.DLLInfo:DLLInfo:DLLInfoList"
      },
      {
         "package" : "base",
         "name" : "getNativeSymbolInfo",
         "desc" : " This finds and returns a description of one or more dynamically loaded or exported built-in native symbols. For each name, it returns information about the name of the symbol, the library in which it is located and, if available, the number of arguments it expects and by which interface it should be called (i.e .Call, .C, .Fortran, or .External). Additionally, it returns the address of the symbol and this can be passed to other C routines. Specifically, this provides a way to explicitly share symbols between different dynamically loaded package libraries. Also, it provides a way to query where symbols were resolved, and aids diagnosing strange behavior associated with dynamic resolution. ",
         "aliases" : "NativeSymbolInfo:NativeSymbol:RegisteredNativeSymbol",
         "title" : " Obtain a Description of one or more Native (C/Fortran) Symbols "
      },
      {
         "title" : "Translate Text Messages",
         "aliases" : "ngettext:bindtextdomain",
         "desc" : " If Native Language Support was enabled in this build of , attempt to translate character vectors or set where the translations are to be found. ",
         "name" : "gettext",
         "package" : "base"
      },
      {
         "desc" : " getwd returns an absolute filepath representing the current working directory of the process; setwd(dir) is used to set the working directory to dir. ",
         "name" : "getwd",
         "package" : "base",
         "title" : "Get or Set Working Directory",
         "aliases" : "setwd"
      },
      {
         "desc" : " Generate factors by specifying the pattern of their levels. ",
         "name" : "gl",
         "package" : "base",
         "title" : "Generate Factor Levels",
         "aliases" : ""
      },
      {
         "title" : "Pattern Matching and Replacement",
         "aliases" : "grepl:sub:gsub:regexpr:gregexpr:regexec",
         "desc" : " grep, grepl, regexpr, gregexpr and regexec search for matches to argument pattern within each element of a character vector: they differ in the format of and amount of detail in the results. sub and gsub perform replacement of the first and all matches respectively. ",
         "name" : "grep",
         "package" : "base"
      },
      {
         "aliases" : "",
         "title" : "Pattern Matching for Raw Vectors",
         "package" : "base",
         "name" : "grepRaw",
         "desc" : " grepRaw searches for substring pattern matches within a raw vector x. "
      },
      {
         "aliases" : "groupGeneric:.Group:Math:Math.data.frame:Ops:Ops.data.frame:Summary:Summary.data.frame:Complex:group:generic",
         "title" : "S3 Group Generic Functions",
         "package" : "base",
         "name" : "groupGeneric",
         "desc" : " Group generic methods can be defined for four pre-specified groups of functions, Math, Ops, Summary and Complex. (There are no objects of these names in base , but there are in the methods package.) A method defined for an individual member of the group takes precedence over a method defined for the group as a whole. "
      },
      {
         "name" : "gzcon",
         "desc" : " gzcon provides a modified connection that wraps an existing connection, and decompresses reads or compresses writes through that connection. Standard gzip headers are assumed. ",
         "package" : "base",
         "title" : " (De)compress I/O Through Connections ",
         "aliases" : ""
      },
      {
         "package" : "base",
         "name" : "hexmode",
         "desc" : " Convert or print integers in hexadecimal format, with as many digits as are needed to display the largest, using leading zeroes as necessary. ",
         "aliases" : "format.hexmode:print.hexmode:as.character.hexmode:[.hexmode:!.hexmode:|.hexmode:&.hexmode:xor.hexmode:hexmode",
         "title" : "Display Numbers in Hexadecimal"
      },
      {
         "aliases" : "sinh:tanh:acosh:asinh:atanh",
         "title" : "Hyperbolic Functions",
         "package" : "base",
         "desc" : " These functions give the obvious hyperbolic functions. They respectively compute the hyperbolic cosine, sine, tangent, and their inverses, arc-cosine, arc-sine, arc-tangent (or area cosine, etc). ",
         "name" : "Hyperbolic"
      },
      {
         "aliases" : "iconvlist",
         "title" : "Convert Character Vector between Encodings",
         "package" : "base",
         "desc" : " This uses system facilities to convert a character vector between encodings: the i stands for internationalization. ",
         "name" : "iconv"
      },
      {
         "package" : "base",
         "name" : "icuSetCollate",
         "desc" : " Controls the way collation is done by ICU (an optional part of the build). ",
         "aliases" : "icuGetCollate:R_ICU_LOCALE",
         "title" : " Setup Collation by ICU "
      },
      {
         "name" : "identical",
         "desc" : " The safe and reliable way to test two objects for being exactly equal. It returns TRUE in this case, FALSE in every other case. ",
         "package" : "base",
         "title" : "Test Objects for Exact Equality",
         "aliases" : ""
      },
      {
         "title" : "Identity Function",
         "aliases" : "",
         "name" : "identity",
         "desc" : " A trivial identity function returning its argument. ",
         "package" : "base"
      },
      {
         "desc" : " ifelse returns a value with the same shape as test which is filled with elements selected from either yes or no depending on whether the element of test is TRUE or FALSE. ",
         "name" : "ifelse",
         "package" : "base",
         "title" : "Conditional Element Selection",
         "aliases" : ""
      },
      {
         "title" : "Integer Vectors",
         "aliases" : "as.integer:is.integer",
         "desc" : " Creates or tests for objects of type \"integer\". ",
         "name" : "integer",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "interaction",
         "desc" : " interaction computes a factor which represents the interaction of the given factors. The result of interaction is always unordered. ",
         "aliases" : "",
         "title" : "Compute Factor Interactions"
      },
      {
         "aliases" : "",
         "title" : "Is R Running Interactively?",
         "package" : "base",
         "name" : "interactive",
         "desc" : " Return TRUE when is being used interactively and FALSE otherwise. "
      },
      {
         "package" : "base",
         "desc" : " .Internal performs a call to an internal code which is built in to the interpreter. Only true wizards should even consider using this function, and only developers can add to the list of internal functions. ",
         "name" : "Internal",
         "aliases" : "",
         "title" : "Call an Internal Function"
      },
      {
         "title" : "Internal Generic Functions",
         "aliases" : "InternalGenerics:internal:generic:.S3PrimitiveGenerics",
         "name" : "InternalMethods",
         "desc" : " Many -internal functions are generic and allow methods to be written for. ",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " Return a (temporarily) invisible copy of an object. ",
         "name" : "invisible",
         "aliases" : "",
         "title" : "Change the Print Mode to Invisible"
      },
      {
         "name" : "is.finite",
         "desc" : " is.finite and is.infinite return a vector of the same length as x, indicating which elements are finite (not infinite and not missing) or infinite. Inf and -Inf are positive and negative infinity whereas NaN means Not a Number. (These apply to numeric values and real and imaginary parts of complex values but not to values of integer vectors.) Inf and NaN are reserved words in the language. ",
         "package" : "base",
         "title" : "Finite, Infinite and NaN Numbers",
         "aliases" : "is.infinite:Inf:NaN:is.nan:finite:infinite"
      },
      {
         "name" : "is.function",
         "desc" : "Checks whether its argument is a (primitive) function.",
         "package" : "base",
         "title" : "Is an Object of Type (Primitive) Function?",
         "aliases" : "is.primitive"
      },
      {
         "aliases" : "language:object:language:objects",
         "title" : "Is an Object a Language Object?",
         "package" : "base",
         "name" : "is.language",
         "desc" : " is.language returns TRUE if x is a variable name, a call, or an expression. "
      },
      {
         "package" : "base",
         "name" : "is.object",
         "desc" : " A function rather for internal use. It returns TRUE if the object x has the internal OBJECT bit set, and FALSE otherwise. The OBJECT bit is set when a \"class\" attribute is added and removed when that attribute is removed, so this is a very efficient way to check if an object has a class attribute. (S4 objects always should.) ",
         "aliases" : "",
         "title" : "Is an Object internally classed?"
      },
      {
         "aliases" : "is.recursive",
         "title" : "Is an Object Atomic or Recursive?",
         "package" : "base",
         "desc" : " is.atomic returns TRUE if x is of an atomic type (or NULL) and FALSE otherwise. is.recursive returns TRUE if x has a recursive (list-like) structure and FALSE otherwise. ",
         "name" : "is.recursive"
      },
      {
         "package" : "base",
         "name" : "is.single",
         "desc" : " is.single reports an error. There are no single precision values in R. ",
         "aliases" : "",
         "title" : "Is an Object of Single Precision Type?"
      },
      {
         "aliases" : "",
         "title" : "Test if an Object is Not Sorted",
         "package" : "base",
         "name" : "is.unsorted",
         "desc" : " Test if an object is not sorted (in increasing order), without the cost of sorting it. "
      },
      {
         "title" : "Date-time Conversion Functions from Numeric Representations",
         "aliases" : "ISOdate",
         "desc" : " Convenience wrappers to create date-times from numeric representations. ",
         "name" : "ISOdatetime",
         "package" : "base"
      },
      {
         "aliases" : "",
         "title" : "Are we using R, rather than S?",
         "package" : "base",
         "name" : "is.R",
         "desc" : " Test if running under . "
      },
      {
         "aliases" : "asS4:S4:asS3",
         "title" : " Test for an S4 object ",
         "package" : "base",
         "desc" : " Tests whether the object is an instance of an S4 class. ",
         "name" : "isS4"
      },
      {
         "name" : "isSymmetric",
         "desc" : " Generic function to test if object is symmetric or not. Currently only a matrix method is implemented. ",
         "package" : "base",
         "title" : "Test if a Matrix or other Object is Symmetric",
         "aliases" : "isSymmetric.matrix"
      },
      {
         "desc" : " Add a small amount of noise to a numeric vector. ",
         "name" : "jitter",
         "package" : "base",
         "title" : "Jitter (Add Noise) to Numbers",
         "aliases" : ""
      },
      {
         "name" : "kappa",
         "desc" : " The condition number of a regular (square) matrix is the product of the norm of the matrix and the norm of its inverse (or pseudo-inverse), and hence depends on the kind of matrix-norm. kappa() computes by default (an estimate of) the 2-norm condition number of a matrix or of the R matrix of a QR decomposition, perhaps of a linear fit. The 2-norm condition number can be shown to be the ratio of the largest to the smallest non-zero singular value of the matrix. rcond() computes an approximation of the reciprocal condition number, see the details. ",
         "package" : "base",
         "title" : "Compute or Estimate the Condition Number of a Matrix",
         "aliases" : "kappa:kappa.default:kappa.lm:kappa.qr:.kappa_tri"
      },
      {
         "aliases" : ".kronecker:%x%",
         "title" : "Kronecker Products on Arrays",
         "package" : "base",
         "name" : "kronecker",
         "desc" : " Computes the generalised kronecker product of two arrays, X and Y. "
      },
      {
         "aliases" : "",
         "title" : "Localization Information",
         "package" : "base",
         "name" : "l10n_info",
         "desc" : " Report on localization information. "
      },
      {
         "name" : "La_version",
         "desc" : " Report the version of LAPACK in use. ",
         "package" : "base",
         "title" : " LAPACK Version ",
         "aliases" : ""
      },
      {
         "aliases" : "labels.default",
         "title" : "Find Labels from Object",
         "package" : "base",
         "desc" : " Find a suitable set of labels from an object for use in printing or plotting, for example. A generic function. ",
         "name" : "labels"
      },
      {
         "title" : "Apply a Function over a List or Vector",
         "aliases" : "sapply:vapply:replicate:simplify2array",
         "desc" : " lapply returns a list of the same length as X, each element of which is the result of applying FUN to the corresponding element of X. sapply is a user-friendly version and wrapper of lapply by default returning a vector, matrix or, if simplify = \"array\", an array if appropriate, by applying simplify2array(). sapply(x, f, simplify = FALSE, USE.NAMES = FALSE) is the same as lapply(x, f). vapply is similar to sapply, but has a pre-specified type of return value, so it can be safer (and sometimes faster) to use. replicate is a wrapper for the common use of sapply for repeated evaluation of an expression (which will usually involve random number generation). simplify2array() is the utility called from sapply() when simplify is not false and is similarly called from mapply(). ",
         "name" : "lapply",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "Last.value",
         "desc" : " The value of the internal evaluation of a top-level expression is always assigned to .Last.value (in package:base) before further processing (e.g., printing). ",
         "aliases" : "",
         "title" : "Value of Last Evaluated Expression"
      },
      {
         "aliases" : "lazyLoadDBexec",
         "title" : "Lazy Load a Database of R Objects",
         "package" : "base",
         "name" : "lazyLoad",
         "desc" : " Internal functions to lazy load a database of objects. "
      },
      {
         "title" : "Length of an Object",
         "aliases" : "length<-:length<-.factor",
         "desc" : " Get or set the length of vectors (including lists) and factors, and of any other object for which a method has been defined. ",
         "name" : "length",
         "package" : "base"
      },
      {
         "name" : "lengths",
         "desc" : " Get the length of each element in a list as an integer or numeric vector. ",
         "package" : "base",
         "title" : "Lengths of List Elements",
         "aliases" : ""
      },
      {
         "package" : "base",
         "desc" : " levels provides access to the levels attribute of a variable. The first form returns the value of the levels of its argument and the second sets the attribute. ",
         "name" : "levels",
         "aliases" : "levels.default:levels<-:levels<-.factor",
         "title" : "Levels Attributes"
      },
      {
         "desc" : " .libPaths gets/sets the library trees within which packages are looked for. ",
         "name" : "libPaths",
         "package" : "base",
         "title" : "Search Paths for Packages",
         "aliases" : ".Library.site:.libPaths:R_LIBS:R_LIBS_SITE:R_LIBS_USER:.expand_R_libs_env_var"
      },
      {
         "aliases" : "library.dynam.unload:.dynLibs",
         "title" : "Loading DLLs from Packages",
         "package" : "base",
         "name" : "library.dynam",
         "desc" : " Load the specified file of compiled code if it has not been loaded already, or unloads it. "
      },
      {
         "desc" : " library and require load and attach add-on packages. ",
         "name" : "library",
         "package" : "base",
         "title" : "Loading/Attaching and Listing of Packages",
         "aliases" : "require:.noGenerics:format.libraryIQR:print.libraryIQR:format.packageInfo:print.packageInfo"
      },
      {
         "aliases" : "licence",
         "title" : "The R License Terms",
         "package" : "base",
         "name" : "license",
         "desc" : " The license terms under which is distributed. "
      },
      {
         "aliases" : "dir:list.dirs",
         "title" : "List the Files in a Directory/Folder",
         "package" : "base",
         "name" : "list.files",
         "desc" : " These functions produce a character vector of the names of files or directories in the named directory. "
      },
      {
         "aliases" : "pairlist:alist:as.list:as.list.default:as.list.data.frame:as.list.environment:as.list.factor:as.list.function:as.pairlist:is.list:is.pairlist",
         "title" : "Lists -- Generic and Dotted Pairs",
         "package" : "base",
         "desc" : " Functions to construct, coerce and check for both kinds of lists. ",
         "name" : "list"
      },
      {
         "title" : "From A List, Build or Add To an Environment",
         "aliases" : "",
         "desc" : " From a named list x, create an environment containing all list components as objects, or multi-assign from x into a pre-existing environment. ",
         "name" : "list2env",
         "package" : "base"
      },
      {
         "desc" : " Reload datasets written with the function save. ",
         "name" : "load",
         "package" : "base",
         "title" : "Reload Saved Datasets",
         "aliases" : ""
      },
      {
         "package" : "base",
         "desc" : " Get details of or set aspects of the locale for the process. ",
         "name" : "locales",
         "aliases" : "Sys.getlocale:Sys.setlocale:LC_ALL:LC_COLLATE:LC_CTYPE:LC_MONETARY:LC_NUMERIC:LC_TIME",
         "title" : "Query or Set Aspects of the Locale"
      },
      {
         "title" : "Logarithms and Exponentials",
         "aliases" : "logb:log10:log2:log1p:exp:expm1",
         "desc" : " log computes logarithms, by default natural logarithms, log10 computes common (i.e., base 10) logarithms, and log2 computes binary (i.e., base 2) logarithms. The general form log(x, base) computes logarithms with base base. log1p(x) computes \\\\log(1+x)log(1+x) accurately also for |x| \\\\ll 1|x| << 1. exp computes the exponential function. expm1(x) computes \\\\exp(x) - 1exp(x) - 1 accurately also for |x| \\\\ll 1|x| << 1. ",
         "name" : "log",
         "package" : "base"
      },
      {
         "name" : "Logic",
         "desc" : " These operators act on raw, logical and number-like vectors. ",
         "package" : "base",
         "title" : "Logical Operators",
         "aliases" : "&:&&:|:||:xor:Logic:isTRUE"
      },
      {
         "package" : "base",
         "desc" : " Create or test for objects of type \"logical\", and the basic logical constants. ",
         "name" : "logical",
         "aliases" : "as.logical:as.logical.factor:is.logical:TRUE:FALSE:T:F",
         "title" : "Logical Vectors"
      },
      {
         "title" : "Long Vectors",
         "aliases" : "vector:long:vectors:Long:vectors",
         "name" : "LongVectors",
         "desc" : " Vectors of 2^{31}2^31 or more elements were added in 3.0.0. ",
         "package" : "base"
      },
      {
         "aliases" : "upper.tri",
         "title" : "Lower and Upper Triangular Part of a Matrix",
         "package" : "base",
         "desc" : " Returns a matrix of logicals the same size of a given matrix with entries TRUE in the lower or upper triangle. ",
         "name" : "lower.tri"
      },
      {
         "aliases" : "objects",
         "title" : "List Objects",
         "package" : "base",
         "desc" : " ls and objects return a vector of character strings giving the names of the objects in the specified environment. When invoked with no argument at the top level prompt, ls shows what data sets and functions a user has defined. When invoked with no argument inside a function, ls returns the names of the function's local variables: this is useful in conjunction with browser. ",
         "name" : "ls"
      },
      {
         "aliases" : "",
         "title" : "Make Syntactically Valid Names",
         "package" : "base",
         "name" : "make.names",
         "desc" : " Make syntactically valid names out of character vectors. "
      },
      {
         "aliases" : "",
         "title" : "Make Character Strings Unique",
         "package" : "base",
         "name" : "make.unique",
         "desc" : " Makes the elements of a character vector unique by appending sequence numbers to duplicates. "
      },
      {
         "title" : "Apply a Function to Multiple List or Vector Arguments",
         "aliases" : "",
         "name" : "mapply",
         "desc" : " mapply is a multivariate version of sapply. mapply applies FUN to the first elements of each argument, the second elements, the third elements, and so on. Arguments are recycled if necessary. ",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " For a contingency table in array form, compute the sum of table entries for a given index. ",
         "name" : "margin.table",
         "aliases" : "",
         "title" : "Compute table margin"
      },
      {
         "package" : "base",
         "name" : "mat.or.vec",
         "desc" : " mat.or.vec creates an nr by nc zero matrix if nc is greater than 1, and a zero vector of length nr if nc equals 1. ",
         "aliases" : "",
         "title" : "Create a Matrix or a Vector"
      },
      {
         "aliases" : "",
         "title" : "Argument Verification Using Partial Matching",
         "package" : "base",
         "name" : "match.arg",
         "desc" : " match.arg matches arg against a table of candidate values as specified by choices, where NULL means to take the first one. "
      },
      {
         "title" : "Argument Matching",
         "aliases" : "",
         "name" : "match.call",
         "desc" : " match.call returns a call in which all of the specified arguments are specified by their full names. ",
         "package" : "base"
      },
      {
         "name" : "match.fun",
         "desc" : " When called inside functions that take a function as argument, extract the desired function object while avoiding undesired matching to objects of other types. ",
         "package" : "base",
         "title" : "Extract a Function Specified by Name",
         "aliases" : ""
      },
      {
         "package" : "base",
         "desc" : " match returns a vector of the positions of (first) matches of its first argument in its second. %in% is a more intuitive interface as a binary operator, which returns a logical vector indicating if there is a match or not for its left operand. ",
         "name" : "match",
         "aliases" : "%in%",
         "title" : "Value Matching"
      },
      {
         "desc" : " abs(x) computes the absolute value of x, sqrt(x) computes the (principal) square root of x, \\\\sqrt{x}.% Details for complex x are below The naming follows the standard for computer languages such as C or Fortran. ",
         "name" : "MathFun",
         "package" : "base",
         "title" : "Miscellaneous Mathematical Functions",
         "aliases" : "sqrt"
      },
      {
         "title" : "Matrix Multiplication",
         "aliases" : "matmult",
         "name" : "matmult",
         "desc" : " Multiplies two matrices, if they are conformable. If one argument is a vector, it will be promoted to either a row or column matrix to make the two arguments conformable. If both are vectors of the same length, it will return the inner product (as a matrix). ",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "matrix",
         "desc" : " matrix creates a matrix from the given set of values. as.matrix attempts to turn its argument into a matrix. is.matrix tests if its argument is a (strict) matrix. ",
         "aliases" : "as.matrix:as.matrix.default:as.matrix.data.frame:is.matrix",
         "title" : "Matrices"
      },
      {
         "aliases" : "",
         "title" : "Find Maximum Position in Matrix",
         "package" : "base",
         "name" : "maxCol",
         "desc" : " Find the maximum position for each row of a matrix, breaking ties at random. "
      },
      {
         "aliases" : "mean.default",
         "title" : "Arithmetic Mean",
         "package" : "base",
         "name" : "mean",
         "desc" : " Generic function for the (trimmed) arithmetic mean. "
      },
      {
         "name" : "memCompress",
         "desc" : " In-memory compression or decompression for raw vectors. ",
         "package" : "base",
         "title" : "In-memory Compression and Decompression",
         "aliases" : "memDecompress"
      },
      {
         "package" : "base",
         "desc" : " holds objects it is using in virtual memory. This help file documents the current design limitations on large objects: these differ between 32-bit and 64-bit builds of . ",
         "name" : "Memory-limits",
         "aliases" : "",
         "title" : "Memory Limits in R"
      },
      {
         "title" : "Profile the Usage of Cons Cells",
         "aliases" : "",
         "name" : "memory.profile",
         "desc" : " Lists the usage of the cons cells by SEXPREC type. ",
         "package" : "base"
      },
      {
         "aliases" : "",
         "title" : "Memory Available for Data Storage",
         "package" : "base",
         "desc" : " How manages its workspace. ",
         "name" : "Memory"
      },
      {
         "title" : "Merge Two Data Frames",
         "aliases" : "merge.default:merge.data.frame",
         "desc" : " Merge two data frames by common columns or row names, or do other versions of database join operations. ",
         "name" : "merge",
         "package" : "base"
      },
      {
         "name" : "message",
         "desc" : " Generate a diagnostic message from its arguments. ",
         "package" : "base",
         "title" : "Diagnostic Messages",
         "aliases" : "suppressMessages:packageStartupMessage:.packageStartupMessage:suppressPackageStartupMessages:.makeMessage"
      },
      {
         "package" : "base",
         "desc" : " missing can be used to test whether a value was specified as an argument to a function. ",
         "name" : "missing",
         "aliases" : "",
         "title" : "Does a Formal Argument have a Value?"
      },
      {
         "aliases" : "mode<-:storage.mode:storage.mode<-",
         "title" : "The (Storage) Mode of an Object",
         "package" : "base",
         "name" : "mode",
         "desc" : " Get or set the type or storage mode of an object. "
      },
      {
         "package" : "base",
         "name" : "NA",
         "desc" : " NA is a logical constant of length 1 which contains a missing value indicator. NA can be coerced to any other vector type except raw. There are also constants NA_integer_, NA_real_, NA_complex_ and NA_character_ of the other atomic vector types which support missing values: all of these are reserved words in the language. The generic function is.na indicates which elements are missing. The generic function is.na<- sets elements to NA. The generic function anyNA implements any(is.na(x)) in a possibly faster way (especially for atomic vectors). ",
         "aliases" : "NA_integer_:NA_real_:NA_complex_:NA_character_:is.na:is.na.data.frame:is.na<-:is.na<-.default:anyNA:anyMissing",
         "title" : "Not Available / Missing Values"
      },
      {
         "title" : "Names and Symbols",
         "aliases" : "is.symbol:as.symbol:as.name:is.name",
         "desc" : " A name (also known as a symbol) is a way to refer to objects by name (rather than the value of the object, if any, bound to that name). as.name and as.symbol are identical: they attempt to coerce the argument to a name. is.symbol and the identical is.name return TRUE or FALSE depending on whether the argument is a name or not. ",
         "name" : "name",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "names",
         "desc" : " Functions to get or set the names of an object. ",
         "aliases" : "names.default:names<-:names<-.default",
         "title" : "The Names of an Object"
      },
      {
         "name" : "nargs",
         "desc" : " When used inside a function body, nargs returns the number of arguments supplied to that function, including positional arguments left blank. ",
         "package" : "base",
         "title" : "The Number of Arguments to a Function",
         "aliases" : ""
      },
      {
         "desc" : " nchar takes a character vector as an argument and returns a vector whose elements contain the sizes of the corresponding elements of x. nzchar is a fast way to find out if elements of a character vector are non-empty strings. ",
         "name" : "nchar",
         "package" : "base",
         "title" : "Count the Number of Characters (or Bytes or Width)",
         "aliases" : "nzchar"
      },
      {
         "title" : "The Number of Levels of a Factor",
         "aliases" : "",
         "desc" : " Return the number of levels which its argument has. ",
         "name" : "nlevels",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "noquote",
         "desc" : " Print character strings without quotes. ",
         "aliases" : "print.noquote:as.matrix.noquote:c.noquote:[.noquote",
         "title" : "Class for no quote Printing of Character Strings"
      },
      {
         "name" : "norm",
         "desc" : " Computes a matrix norm of x using LAPACK. The norm can be the one (\"O\") norm, the infinity (\"I\") norm, the Frobenius (\"F\") norm, the maximum modulus (\"M\") among elements of a matrix, or the spectral or \"2\"-norm, as determined by the value of type. ",
         "package" : "base",
         "title" : "Compute the Norm of a Matrix",
         "aliases" : ""
      },
      {
         "title" : "Express File Paths in Canonical Form",
         "aliases" : "",
         "name" : "normalizePath",
         "desc" : " Convert file paths to canonical form for the platform, to display them in a user-understandable form and so that relative and absolute paths can be compared. ",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "NotYet",
         "desc" : " In order to pinpoint missing functionality, the core team uses these functions for missing functions and not yet used arguments of existing functions (which are typically there for compatibility purposes). You are very welcome to contribute your code ",
         "aliases" : ".NotYetImplemented:NotYetUsed:.NotYetUsed",
         "title" : "Not Yet Implemented Functions and Unused Arguments"
      },
      {
         "aliases" : "NROW:ncol:NCOL",
         "title" : "The Number of Rows/Columns of an Array",
         "package" : "base",
         "desc" : " nrow and ncol return the number of rows or columns present in x. NCOL and NROW do the same treating a vector as 1-column matrix. ",
         "name" : "nrow"
      },
      {
         "title" : "Double Colon and Triple Colon Operators",
         "aliases" : ":::",
         "desc" : " Accessing exported and internal variables in a namespace. ",
         "name" : "ns-dblcolon",
         "package" : "base"
      },
      {
         "title" : "Hooks for Namespace Events",
         "aliases" : ".onUnload:.onAttach:.onDetach:.Last.lib",
         "name" : "ns-hooks",
         "desc" : " Packages can supply functions to be called when loaded, attached, detached or unloaded. ",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " Internal namespace support functions. Not intended to be called directly, and only visible because of the special nature of the base namespace. ",
         "name" : "ns-internals",
         "aliases" : "getNamespaceInfo:importIntoEnv:isBaseNamespace:isNamespace:namespaceExport:namespaceImport:namespaceImportClasses:namespaceImportFrom:namespaceImportMethods:packageHasNamespace:parseNamespaceFile:registerS3method:registerS3methods:setNamespaceInfo:.__S3MethodsTable__.:.mergeExportMethods:.mergeImportMethods:.knownS3Generics:loadingNamespaceInfo:.getNamespace:.getNamespaceInfo:..getNamespace",
         "title" : "Namespace Internals"
      },
      {
         "aliases" : "loadNamespace:requireNamespace:loadedNamespaces:unloadNamespace:isNamespaceLoaded",
         "title" : "Loading and Unloading Name Spaces",
         "package" : "base",
         "name" : "ns-load",
         "desc" : " Functions to load and unload name spaces. "
      },
      {
         "title" : "Namespace Reflection Support",
         "aliases" : "getNamespace:getNamespaceExports:getNamespaceImports:getNamespaceName:getNamespaceUsers:getNamespaceVersion",
         "name" : "ns-reflect.Rd",
         "desc" : " Functions to support reflection on namespace objects. ",
         "package" : "base"
      },
      {
         "aliases" : "",
         "title" : "Top Level Environment",
         "package" : "base",
         "name" : "ns-topenv",
         "desc" : " Finding the top level environment from an environment envir and its enclosing environments. "
      },
      {
         "name" : "NULL",
         "desc" : " NULL represents the null object in : it is a reserved word. NULL is often returned by expressions and functions whose value is undefined. as.null ignores its argument and returns the value NULL. is.null returns TRUE if its argument is NULL and FALSE otherwise. ",
         "package" : "base",
         "title" : "The Null Object",
         "aliases" : "as.null:as.null.default:is.null"
      },
      {
         "name" : "numeric",
         "desc" : " Creates or coerces objects of type \"numeric\". is.numeric is a more general test of an object being interpretable as numbers. ",
         "package" : "base",
         "title" : "Numeric Vectors",
         "aliases" : "as.numeric:is.numeric:is.numeric.Date:is.numeric.POSIXt"
      },
      {
         "title" : "Numeric Versions",
         "aliases" : "as.numeric_version:is.numeric_version:package_version:is.package_version:as.package_version:R_system_version:getRversion:[.numeric_version:[<-.numeric_version:[[.numeric_version:[[<-.numeric_version:Ops.numeric_version:Summary.numeric_version:anyNA.numeric_version:as.character.numeric_version:as.data.frame.numeric_version:as.list.numeric_version:c.numeric_version:duplicated.numeric_version:format.numeric_version:is.na.numeric_version:is.na<-.numeric_version:print.numeric_version:rep.numeric_version:unique.numeric_version:xtfrm.numeric_version:$.package_version:.encode_numeric_version:.decode_numeric_version:.make_numeric_version",
         "desc" : "A simple S3 class for representing numeric versions including package versions, and associated methods.",
         "name" : "numeric_version",
         "package" : "base"
      },
      {
         "title" : "Numeric Constants",
         "aliases" : "1L:0x1:1i",
         "desc" : " How parses numeric constants. ",
         "name" : "NumericConstants",
         "package" : "base"
      },
      {
         "aliases" : "format.octmode:print.octmode:as.character.octmode:[.octmode:!.octmode:|.octmode:&.octmode:xor.octmode:octmode",
         "title" : "Display Numbers in Octal",
         "package" : "base",
         "desc" : " Convert or print integers in octal format, with as many digits as are needed to display the largest, using leading zeroes as necessary. ",
         "name" : "octmode"
      },
      {
         "desc" : " on.exit records the expression given as its argument as needing to be executed when the current function exits (either naturally or as the result of an error). This is useful for resetting graphical parameters or performing other cleanup actions. If no expression is provided, i.e., the call is on.exit(), then the current on.exit code is removed. ",
         "name" : "on.exit",
         "package" : "base",
         "title" : "Function Exit Code",
         "aliases" : ""
      },
      {
         "title" : "Operators on the Date Class",
         "aliases" : "-.Date:Ops.Date",
         "desc" : " Operators for the \"Date\" class. There is an Ops method and specific methods for + and - for the Date class. ",
         "name" : "Ops.Date",
         "package" : "base"
      },
      {
         "title" : "Options Settings",
         "aliases" : ".Options:getOption:option:MC_CORES:R_C_BOUNDS_CHECK:R_DEFAULT_DEVICE:R_KEEP_PKG_SOURCE:R_INTERACTIVE_DEVICE",
         "name" : "options",
         "desc" : " Allow the user to set and examine a variety of global options which affect the way in which computes and displays its results. ",
         "package" : "base"
      },
      {
         "title" : "Ordering Permutation",
         "aliases" : "sort.list",
         "desc" : " order returns a permutation which rearranges its first argument into ascending or descending order, breaking ties by further arguments. sort.list is the same, using only one argument. See the examples for how to use these functions to sort data frames, etc. ",
         "name" : "order",
         "package" : "base"
      },
      {
         "aliases" : "%o%",
         "title" : "Outer Product of Arrays",
         "package" : "base",
         "desc" : " The outer product of the arrays X and Y is the array A with dimension c(dim(X), dim(Y)) where element A[c(arrayindex.x, arrayindex.y)] = FUN(X[arrayindex.x], Y[arrayindex.y], ). ",
         "name" : "outer"
      },
      {
         "aliases" : "(:{",
         "title" : "Parentheses and Braces",
         "package" : "base",
         "desc" : " Open parenthesis, (, and open brace, {, are .Primitive functions in . Effectively, ( is semantically equivalent to the identity function(x) x, whereas { is slightly more interesting, see examples. ",
         "name" : "Paren"
      },
      {
         "aliases" : "",
         "title" : "Parse Expressions",
         "package" : "base",
         "name" : "parse",
         "desc" : " parse returns the parsed but unevaluated expressions in a list. "
      },
      {
         "title" : "Concatenate Strings",
         "aliases" : "paste0",
         "name" : "paste",
         "desc" : " Concatenate vectors after converting to character. ",
         "package" : "base"
      },
      {
         "title" : "Expand File Paths",
         "aliases" : "tilde:expansion",
         "desc" : " Expand a path name, for example by replacing a leading tilde by the user's home directory (if defined on that platform). ",
         "name" : "path.expand",
         "package" : "base"
      },
      {
         "aliases" : "",
         "title" : " Report Configuration Options for PCRE ",
         "package" : "base",
         "name" : "pcre_config",
         "desc" : " Report some of the configuration options of the version of PCRE in use in this session. "
      },
      {
         "aliases" : "",
         "title" : "Platform Specific Variables",
         "package" : "base",
         "name" : ".Platform",
         "desc" : " .Platform is a list with some details of the platform under which was built. This provides means to write OS-portable code. "
      },
      {
         "package" : "base",
         "name" : "pmatch",
         "desc" : " pmatch seeks matches for the elements of its first argument among those of its second. ",
         "aliases" : "",
         "title" : "Partial String Matching"
      },
      {
         "aliases" : "",
         "title" : "Find Zeros of a Real or Complex Polynomial",
         "package" : "base",
         "desc" : " Find zeros of a real or complex polynomial. ",
         "name" : "polyroot"
      },
      {
         "title" : "Convert Positions in the Search Path to Environments",
         "aliases" : "",
         "name" : "pos.to.env",
         "desc" : " Returns the environment at a specified position in the search path. ",
         "package" : "base"
      },
      {
         "desc" : " Compute a sequence of about n+1 equally spaced round values which cover the range of the values in x. The values are chosen so that they are 1, 2 or 5 times a power of 10. ",
         "name" : "pretty",
         "package" : "base",
         "title" : "Pretty Breakpoints",
         "aliases" : "pretty.default"
      },
      {
         "aliases" : "primitive",
         "title" : "Look Up a Primitive Function",
         "package" : "base",
         "desc" : " .Primitive looks up by name a primitive (internally implemented) function. ",
         "name" : "Primitive"
      },
      {
         "title" : "Printing Data Frames",
         "aliases" : "",
         "desc" : " Print a data frame. ",
         "name" : "print.data.frame",
         "package" : "base"
      },
      {
         "aliases" : "",
         "title" : "Default Printing",
         "package" : "base",
         "name" : "print.default",
         "desc" : " print.default is the default method of the generic print function which prints its argument. "
      },
      {
         "aliases" : "print.factor:print.function:print.listof:print.simple.list:print.Dlist:print.table",
         "title" : "Print Values",
         "package" : "base",
         "name" : "print",
         "desc" : " print prints its argument and returns it invisibly (via invisible(x)). It is a generic function which means that new printing methods can be easily added for new classes. "
      },
      {
         "package" : "base",
         "desc" : " An earlier method for printing matrices, provided for S compatibility. ",
         "name" : "prmatrix",
         "aliases" : "",
         "title" : "Print Matrices, Old-style"
      },
      {
         "title" : "Running Time of R",
         "aliases" : "print.proc_time:summary.proc_time",
         "name" : "proc.time",
         "desc" : " proc.time determines how much real and CPU time (in seconds) the currently running process has already taken. ",
         "package" : "base"
      },
      {
         "name" : "prod",
         "desc" : " prod returns the product of all the values present in its arguments. ",
         "package" : "base",
         "title" : "Product of Vector Elements",
         "aliases" : ""
      },
      {
         "package" : "base",
         "name" : "prop.table",
         "desc" : " This is really sweep(x, margin, margin.table(x, margin), \"/\") for newbies, except that if margin has length zero, then one gets x/sum(x). ",
         "aliases" : "",
         "title" : "Express Table Entries as Fraction of Marginal Table"
      },
      {
         "title" : "Push Text Back on to a Connection",
         "aliases" : "pushBackLength:clearPushBack",
         "name" : "pushBack",
         "desc" : " Functions to push back text lines onto a connection, and to enquire how many lines are currently pushed back. ",
         "package" : "base"
      },
      {
         "aliases" : "qr.default:qr.coef:qr.qy:qr.qty:qr.resid:qr.fitted:qr.solve:is.qr:as.qr:solve.qr",
         "title" : "The QR Decomposition of a Matrix",
         "package" : "base",
         "name" : "qr",
         "desc" : " qr computes the QR decomposition of a matrix. "
      },
      {
         "aliases" : "qr.Q:qr.R",
         "title" : "Reconstruct the Q, R, or X Matrices from a QR Object",
         "package" : "base",
         "name" : "QR.Auxiliaries",
         "desc" : " Returns the original matrix from which the object was constructed or the components of the decomposition. "
      },
      {
         "aliases" : "q:.Last:.Last.sys",
         "title" : "Terminate an R Session",
         "package" : "base",
         "name" : "quit",
         "desc" : " The function quit or its alias q terminate the current session. "
      },
      {
         "package" : "base",
         "name" : "Quotes",
         "desc" : " Descriptions of the various uses of quoting in . ",
         "aliases" : "backtick:backquote:':\":`",
         "title" : "Quotes"
      },
      {
         "package" : "base",
         "desc" : " Function RNGkind allows user-coded uniform and normal random number generators to be supplied. The details are given here. ",
         "name" : "Random.user",
         "aliases" : "",
         "title" : "User-supplied Random Number Generation"
      },
      {
         "aliases" : "RNG:RNGkind:RNGversion:set.seed:.Random.seed",
         "title" : "Random Number Generation",
         "package" : "base",
         "name" : "Random",
         "desc" : " .Random.seed is an integer vector, containing the random number generator (RNG) state for random number generation in . It can be saved and restored, but should not be altered by the user. RNGkind is a more friendly interface to query or set the kind of RNG in use. RNGversion can be used to set the random generators as they were in an earlier version (for reproducibility). set.seed is the recommended way to specify seeds. "
      },
      {
         "aliases" : "range.default",
         "title" : "Range of Values",
         "package" : "base",
         "desc" : " range returns a vector containing the minimum and maximum of all the given arguments. ",
         "name" : "range"
      },
      {
         "desc" : " Returns the sample ranks of the values in a vector. Ties (i.e., equal values) and missing values can be handled in several ways. ",
         "name" : "rank",
         "package" : "base",
         "title" : "Sample Ranks",
         "aliases" : ""
      },
      {
         "title" : "Recursively Apply a Function to a List",
         "aliases" : "",
         "name" : "rapply",
         "desc" : " rapply is a recursive version of lapply. ",
         "package" : "base"
      },
      {
         "title" : "Raw Vectors",
         "aliases" : "as.raw:is.raw",
         "name" : "raw",
         "desc" : " Creates or tests for objects of type \"raw\". ",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "rawConnection",
         "desc" : " Input and output raw connections. ",
         "aliases" : "rawConnectionValue",
         "title" : "Raw Connections"
      },
      {
         "package" : "base",
         "desc" : " Conversion and manipulation of objects of type \"raw\". ",
         "name" : "rawConversion",
         "aliases" : "rawToChar:rawShift:rawToBits:intToBits:packBits",
         "title" : "Convert to or from Raw Vectors"
      },
      {
         "aliases" : "Rd2pdf:RD2PDF_INPUTENC",
         "title" : "Utilities for Processing Rd Files",
         "package" : "base",
         "name" : "RdUtils",
         "desc" : " Utilities for converting files in R documentation (Rd) format to other formats or create indices from them, and for converting documentation in other formats to Rd format. "
      },
      {
         "title" : "Transfer Binary Data To and From Connections",
         "aliases" : "writeBin",
         "name" : "readBin",
         "desc" : " Read binary data from a connection, or write binary data to a connection. ",
         "package" : "base"
      },
      {
         "title" : "Transfer Character Strings To and From Connections",
         "aliases" : "writeChar",
         "desc" : " Transfer character strings to and from connections, without assuming they are null-terminated on the connection. ",
         "name" : "readChar",
         "package" : "base"
      },
      {
         "name" : "readline",
         "desc" : " readline reads a line from the terminal (in interactive use). ",
         "package" : "base",
         "title" : "Read a Line from the Terminal",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Read Text Lines from a Connection",
         "package" : "base",
         "name" : "readLines",
         "desc" : " Read some or all text lines from a connection. "
      },
      {
         "aliases" : "saveRDS",
         "title" : "Serialization Interface for Single Objects",
         "package" : "base",
         "name" : "readRDS",
         "desc" : " Functions to write a single object to a file, and to restore it. "
      },
      {
         "desc" : " Read as file such as .Renviron or Renviron.site in the format described in the help for Startup, and set environment variables as defined in the file. ",
         "name" : "readRenviron",
         "package" : "base",
         "title" : " Set Environment Variables from a File ",
         "aliases" : ""
      },
      {
         "title" : "Recursive Calling",
         "aliases" : "",
         "name" : "Recall",
         "desc" : " Recall is used as a placeholder for the name of the function in which it is called. It allows the definition of recursive functions which still work after being renamed, see example below. ",
         "package" : "base"
      },
      {
         "title" : "Finalization of Objects",
         "aliases" : "finalizer",
         "desc" : " Registers an function to be called upon garbage collection of object or (optionally) at the end of an session. ",
         "name" : "reg.finalizer",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " This help page documents the regular expression patterns supported by grep and related functions grepl, regexpr, gregexpr, sub and gsub, as well as by strsplit. ",
         "name" : "regex",
         "aliases" : "regexp:regular:expression",
         "title" : "Regular Expressions as used in R"
      },
      {
         "title" : "Extract or Replace Matched Substrings",
         "aliases" : "regmatches<-",
         "desc" : " Extract or replace matched substrings from match data obtained by regexpr, gregexpr or regexec. ",
         "name" : "regmatches",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "rep",
         "desc" : " rep replicates the values in x. It is a generic function, and the (internal) default method is described here. rep.int and rep_len are faster simplified versions for two common cases. They are not generic. ",
         "aliases" : "rep.factor:rep.int:rep.POSIXct:rep.POSIXlt:rep.Date:rep_len",
         "title" : "Replicate Elements of Vectors and Lists"
      },
      {
         "package" : "base",
         "name" : "replace",
         "desc" : " replace replaces the values in x with indices given in list by those given in values. If necessary, the values in values are recycled. ",
         "aliases" : "",
         "title" : "Replace Values in a Vector"
      },
      {
         "title" : "Reserved Words in R",
         "aliases" : "reserved:...:..1",
         "desc" : " The reserved words in 's parser are if else repeat while function for in next break TRUE FALSE NULL Inf NaN NA NA_integer_ NA_real_ NA_complex_ NA_character_ and ..1, ..2 etc, which are used to refer to arguments passed down from a calling function. See the html/doc/manual/R-intro.html#The-three-dots-argumentIntroduction to RIntroduction to R manual for usage of these syntactic elements, and dotsMethods for their use in formal methods. ",
         "name" : "Reserved",
         "package" : "base"
      },
      {
         "title" : "Reverse Elements",
         "aliases" : "rev.default",
         "name" : "rev",
         "desc" : " rev provides a reversed version of its argument. It is generic function with a default method for vectors and one for dendrograms. Note that this is no longer needed (nor efficient) for obtaining vectors sorted into descending order, since that is now rather more directly achievable by sort(x, decreasing = TRUE). ",
         "package" : "base"
      },
      {
         "aliases" : "R_HOME",
         "title" : "Return the R Home Directory",
         "package" : "base",
         "name" : "Rhome",
         "desc" : " Return the home directory. "
      },
      {
         "title" : "Run Length Encoding",
         "aliases" : "inverse.rle:print.rle",
         "name" : "rle",
         "desc" : " Compute the lengths and values of runs of equal values in a vector -- or the reverse operation. ",
         "package" : "base"
      },
      {
         "title" : "Remove Objects from a Specified Environment",
         "aliases" : "remove",
         "name" : "remove",
         "desc" : " remove and rm can be used to remove objects. These can be specified successively as character strings, or in the character vector list, or through a combination of both. All objects thus specified will be removed. If envir is NULL then the currently active environment is searched first. If inherits is TRUE then parents of the supplied directory are searched until a variable with the given name is encountered. A warning is printed for each variable that is not found. ",
         "package" : "base"
      },
      {
         "desc" : " Round or truncate date-time objects. ",
         "name" : "round.POSIXt",
         "package" : "base",
         "title" : "Round / Truncate Data-Time Objects",
         "aliases" : "trunc.POSIXt:round.Date:trunc.Date"
      },
      {
         "title" : "Rounding of Numbers",
         "aliases" : "floor:round:signif:trunc",
         "name" : "Round",
         "desc" : " ceiling takes a single numeric argument x and returns a numeric vector containing the smallest integers not less than the corresponding elements of x. floor takes a single numeric argument x and returns a numeric vector containing the largest integers not greater than the corresponding elements of x. trunc takes a single numeric argument x and returns a numeric vector containing the integers formed by truncating the values in x toward 0. round rounds the values in its first argument to the specified number of decimal places (default 0). signif rounds the values in its first argument to the specified number of significant digits. ",
         "package" : "base"
      },
      {
         "title" : "Get and Set Row Names for Data Frames",
         "aliases" : "row.names.data.frame:row.names.default:row.names<-:row.names<-.data.frame:row.names<-.default",
         "desc" : " All data frames have a row names attribute, a character vector of length the number of rows with no duplicates nor missing values. For convenience, these are generic functions for which users can write other methods, and there are default methods for arrays. The description here is for the data.frame method. ",
         "name" : "row.names",
         "package" : "base"
      },
      {
         "title" : "Row Indexes",
         "aliases" : "",
         "name" : "row",
         "desc" : " Returns a matrix of integers indicating their row number in a matrix-like object, or a factor indicating the row labels. ",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " Compute column sums across rows of a numeric matrix-like object for each level of a grouping variable. rowsum is generic, with a method for data frames and a default method for vectors and matrices. ",
         "name" : "rowsum",
         "aliases" : "rowsum.default:rowsum.data.frame",
         "title" : "Give Column Sums of a Matrix or Data Frame, Based on a Grouping Variable"
      },
      {
         "name" : "sample",
         "desc" : " sample takes a sample of the specified size from the elements of x using either with or without replacement. ",
         "package" : "base",
         "title" : "Random Samples and Permutations",
         "aliases" : "sample.int"
      },
      {
         "aliases" : "save.image",
         "title" : "Save R Objects",
         "package" : "base",
         "name" : "save",
         "desc" : " save writes an external representation of objects to the specified file. The objects can be read back from the file at a later date by using the function load or attach (or data in some cases). save.image() is just a short-cut for save my current workspace, i.e., save(list = ls(all.names = TRUE), file = \".RData\", envir = .GlobalEnv). It is also what happens with q(\"yes\"). "
      },
      {
         "title" : "Scaling and Centering of Matrix-like Objects",
         "aliases" : "scale.default",
         "name" : "scale",
         "desc" : " scale is generic function whose default method centers and/or scales the columns of a numeric matrix. ",
         "package" : "base"
      },
      {
         "aliases" : "",
         "title" : "Read Data Values",
         "package" : "base",
         "name" : "scan",
         "desc" : " Read data into a vector or list from the console or file. "
      },
      {
         "name" : "search",
         "desc" : " Gives a list of attached packages (see library), and objects, usually data.frames. ",
         "package" : "base",
         "title" : "Give Search Path for R Objects",
         "aliases" : "searchpaths"
      },
      {
         "title" : "Functions to Reposition Connections",
         "aliases" : "seek.connection:truncate:truncate.connection:isSeekable",
         "desc" : " Functions to re-position connections. ",
         "name" : "seek",
         "package" : "base"
      },
      {
         "title" : "Generate Regular Sequences of Dates",
         "aliases" : "",
         "name" : "seq.Date",
         "desc" : " The method for seq for objects of class class \"Date\" representing calendar dates. ",
         "package" : "base"
      },
      {
         "title" : "Generate Regular Sequences of Times",
         "aliases" : "",
         "desc" : " The method for seq for date-time classes. ",
         "name" : "seq.POSIXt",
         "package" : "base"
      },
      {
         "aliases" : "seq.default:seq.int:seq_along:seq_len",
         "title" : "Sequence Generation",
         "package" : "base",
         "name" : "seq",
         "desc" : " Generate regular sequences. seq is a standard generic with a default method. seq.int is a primitive which can be much faster but has a few restrictions. seq_along and seq_len are very fast primitives for two common cases. "
      },
      {
         "title" : "Create A Vector of Sequences",
         "aliases" : "",
         "desc" : " For each element of nvec the sequence seq_len(nvec[i]) is created. These are concatenated and the result returned. ",
         "name" : "sequence",
         "package" : "base"
      },
      {
         "title" : "Simple Serialization Interface",
         "aliases" : "unserialize",
         "name" : "serialize",
         "desc" : " A simple low-level interface for serializing to connections. ",
         "package" : "base"
      },
      {
         "title" : "Set Operations",
         "aliases" : "intersect:setdiff:is.element:setequal:intersection",
         "desc" : " Performs set union, intersection, (asymmetric!) difference, equality and membership on two vectors. ",
         "name" : "sets",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " Functions to set CPU and/or elapsed time limits for top-level computations or the current session. ",
         "name" : "setTimeLimit",
         "aliases" : "setSessionTimeLimit",
         "title" : "Set CPU and/or Elapsed Time Limits"
      },
      {
         "title" : "Display Connections",
         "aliases" : "getConnection:getAllConnections:closeAllConnections:stdin:stdout:stderr:isatty",
         "name" : "showConnections",
         "desc" : " Display aspects of connections. ",
         "package" : "base"
      },
      {
         "title" : "Quote Strings for Use in OS Shells",
         "aliases" : "",
         "desc" : " Quote a string to be passed to an operating system shell. ",
         "name" : "shQuote",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " sign returns a vector with the signs of the corresponding elements of x (the sign of a real number is 1, 0, or -1 if the number is positive, zero, or negative, respectively). Note that sign does not operate on complex vectors. ",
         "name" : "sign",
         "aliases" : "",
         "title" : "Sign Function"
      },
      {
         "package" : "base",
         "desc" : " sink diverts output to a connection. sink.number() reports how many diversions are in use. sink.number(type = \"message\") reports the number of the connection currently being used for error messages. ",
         "name" : "sink",
         "aliases" : "sink.number",
         "title" : "Send R Output to a File"
      },
      {
         "aliases" : "",
         "title" : "Slice Indexes in an Array",
         "package" : "base",
         "name" : "slice.index",
         "desc" : " Returns a matrix of integers indicating the number of their slice in a given array. "
      },
      {
         "desc" : " Extract or replace the contents of a slot in a object with a formal (S4) class structure. ",
         "name" : "slotOp",
         "package" : "base",
         "title" : "Extract or Replace A Slot",
         "aliases" : "@<-"
      },
      {
         "package" : "base",
         "name" : "socketSelect",
         "desc" : " Waits for the first of several socket connections to become available. ",
         "aliases" : "",
         "title" : "Wait on Socket Connections"
      },
      {
         "name" : "solve",
         "desc" : " This generic function solves the equation a %*% x = b for x, where b can be either a vector or a matrix. ",
         "package" : "base",
         "title" : "Solve a System of Equations",
         "aliases" : "solve.default"
      },
      {
         "package" : "base",
         "name" : "sort",
         "desc" : " Sort (or order) a vector or factor (partially) into ascending or descending order. For ordering along more than one variable, e.g., for sorting data frames, see order. ",
         "aliases" : "sort.default:sort.POSIXlt:sort.int",
         "title" : "Sorting or Ordering Vectors"
      },
      {
         "name" : "source",
         "desc" : " source causes to accept its input from the named file or URL or connection. Input is read and parsed from that file until the end of the file is reached, then the parsed expressions are evaluated sequentially in the chosen environment. ",
         "package" : "base",
         "title" : "Read R Code from a File or a Connection",
         "aliases" : ""
      },
      {
         "title" : "Special Functions of Mathematics",
         "aliases" : "beta:lbeta:gamma:lgamma:psigamma:digamma:trigamma:choose:lchoose:factorial:lfactorial",
         "name" : "Special",
         "desc" : " Special mathematical functions related to the beta and gamma functions. ",
         "package" : "base"
      },
      {
         "name" : "split",
         "desc" : " split divides the data in the vector x into the groups defined by f. The replacement forms replace values corresponding to such a division. unsplit reverses the effect of split. ",
         "package" : "base",
         "title" : "Divide into Groups and Reassemble",
         "aliases" : "split.default:split.data.frame:split<-:split<-.default:split<-.data.frame:unsplit"
      },
      {
         "desc" : " A wrapper for the C function sprintf, that returns a character vector containing a formatted combination of text and variable values. ",
         "name" : "sprintf",
         "package" : "base",
         "title" : "Use C-style String Formatting Commands",
         "aliases" : "gettextf"
      },
      {
         "aliases" : "dQuote",
         "title" : "Quote Text",
         "package" : "base",
         "name" : "sQuote",
         "desc" : " Single or double quote text by combining with appropriate single or double left and right quotation marks. "
      },
      {
         "aliases" : "srcfilecopy:getSrcLines:srcref:srcfile-class:srcfilecopy-class:srcref-class:print.srcfile:summary.srcfile:open.srcfile:open.srcfilecopy:close.srcfile:print.srcref:summary.srcref:as.character.srcref:.isOpen:srcfilealias-class:srcfilealias:open.srcfilealias:close.srcfilealias",
         "title" : "References to source files",
         "package" : "base",
         "name" : "srcfile",
         "desc" : " These functions are for working with source files. "
      },
      {
         "title" : "Formal Method System -- Dispatching S4 Methods",
         "aliases" : "",
         "name" : "standardGeneric",
         "desc" : " The function standardGeneric initiates dispatch of S4 methods: see the references and the documentation of the methods package. Usually, calls to this function are generated automatically and not explicitly by the programmer. ",
         "package" : "base"
      },
      {
         "aliases" : "Rprofile:.Rprofile:Rprofile.site:Renviron:Renviron.site:.Renviron:.First:.First.sys:.OptRequireMethods:R_DEFAULT_PACKAGES:R_ENVIRON:R_ENVIRON_USER:R_PROFILE:R_PROFILE_USER",
         "title" : "Initialization at Start of an R Session",
         "package" : "base",
         "desc" : " In , the startup mechanism is as follows. Unless --no-environ was given on the command line, searches for site and user files to process for setting environment variables. The name of the site file is the one pointed to by the environment variable R_ENVIRON; if this is unset, R_HOME/etc/Renviron.site is used (if it exists, which it does not in a factory-fresh installation). The name of the user file can be specified by the R_ENVIRON_USER environment variable; if this is unset, the files searched for are .Renviron in the current or in the user's home directory (in that order). See Details for how the files are read. Then searches for the site-wide startup profile file of code unless the command line option --no-site-file was given. The path of this file is taken from the value of the R_PROFILE environment variable (after tilde expansion). If this variable is unset, the default is R_HOME/etc/Rprofile.site, which is used if it exists unix (which it does not in a factory-fresh installation). windows (it contains settings from the installer in a factory-fresh installation). This code is sourced into the base package. Users need to be careful not to unintentionally overwrite objects in base, and it is normally advisable to use local if code needs to be executed: see the examples. Then, unless --no-init-file was given, searches for a user profile, a file of code. The path of this file can be specified by the R_PROFILE_USER environment variable (and tilde expansion will be performed). If this is unset, a file called .Rprofile is searched for in the current directory or in the user's home directory (in that order). The user profile file is sourced into the workspace. Note that when the site and user profile files are sourced only the base package is loaded, so objects in other packages need to be referred to by e.g.\\\\ifelse{latex}{\\\\out{~}}{ }latex~ utils::dump.frames or after explicitly loading the package concerned. then loads a saved image of the user workspace from .RData in the current directory if there is one (unless --no-restore-data or --no-restore was specified on the command line). Next, if a function .First is found on the search path, it is executed as .First(). Finally, function .First.sys() in the base package is run. This calls require to attach the default packages specified by options(\"defaultPackages\"). If the methods package is included, this will have been attached earlier (by function .OptRequireMethods()) so that namespace initializations such as those from the user workspace will proceed correctly. A function .First (and .Last) can be defined in appropriate .Rprofile or Rprofile.site files or have been saved in .RData. If you want a different set of packages than the default ones when you start, insert a call to options in the .Rprofile or Rprofile.site file. For example, options(defaultPackages = character()) will attach no extra packages on startup (only the base package) (or set R_DEFAULT_PACKAGES=NULL as an environment variable before running ). Using options(defaultPackages = \"\") or R_DEFAULT_PACKAGES=\"\" enforces the R system default. On front-ends which support it, the commands history is read from the file specified by the environment variable R_HISTFILE (default .Rhistory in the current directory) unless --no-restore-history or --no-restore was specified. The command-line option --vanilla implies --no-site-file, --no-init-file, --no-environ and (except for R CMD) --no-restore windows Under Windows, it also implies --no-Rconsole, which prevents loading the Rconsole file. ",
         "name" : "Startup"
      },
      {
         "package" : "base",
         "desc" : " stop stops execution of the current expression and executes an error action. geterrmessage gives the last error message. ",
         "name" : "stop",
         "aliases" : "geterrmessage",
         "title" : "Stop Function Execution"
      },
      {
         "name" : "stopifnot",
         "desc" : " If any of the expressions in are not all TRUE, stop is called, producing an error message indicating the first of the elements of which were not true. ",
         "package" : "base",
         "title" : "Ensure the Truth of R Expressions",
         "aliases" : ""
      },
      {
         "package" : "base",
         "name" : "strptime",
         "desc" : " Functions to convert between character representations and objects of classes \"POSIXlt\" and \"POSIXct\" representing calendar dates and times. ",
         "aliases" : "format.POSIXlt:strftime:strptime:as.character.POSIXt",
         "title" : "Date-time Conversion Functions to and from Character"
      },
      {
         "aliases" : "",
         "title" : "Split the Elements of a Character Vector",
         "package" : "base",
         "desc" : " Split the elements of a character vector x into substrings according to the matches to substring split within them. ",
         "name" : "strsplit"
      },
      {
         "aliases" : "",
         "title" : "Convert Strings to Integers",
         "package" : "base",
         "name" : "strtoi",
         "desc" : " Convert strings to integers according to the given base using the C function strtol, or choose a suitable base following the C rules. "
      },
      {
         "title" : "Trim Character Strings to Specified Display Widths",
         "aliases" : "",
         "desc" : " Trim character strings to specified display widths. ",
         "name" : "strtrim",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " structure returns the given object with further attributes set. ",
         "name" : "structure",
         "aliases" : "",
         "title" : "Attribute Specification"
      },
      {
         "package" : "base",
         "desc" : " Each character string in the input is first split into paragraphs (or lines containing whitespace only). The paragraphs are then formatted by breaking lines at word boundaries. The target columns for wrapping lines and the indentation of the first and all subsequent lines of a paragraph can be controlled independently. ",
         "name" : "strwrap",
         "aliases" : "",
         "title" : "Wrap Character Strings to Format Paragraphs"
      },
      {
         "package" : "base",
         "desc" : " Return subsets of vectors, matrices or data frames which meet conditions. ",
         "name" : "subset",
         "aliases" : "subset.default:subset.matrix:subset.data.frame",
         "title" : "Subsetting Vectors, Matrices and Data Frames"
      },
      {
         "package" : "base",
         "name" : "substitute",
         "desc" : " substitute returns the parse tree for the (unevaluated) expression expr, substituting any variables bound in env. quote simply returns its argument. The argument is not evaluated and can be any R expression. enquote is a simple one-line utility which transforms a call of the form Foo(....) into the call quote(Foo(....)). This is typically used to protect a call from early evaluation. ",
         "aliases" : "quote:enquote",
         "title" : "Substituting and Quoting Expressions"
      },
      {
         "package" : "base",
         "desc" : " Extract or replace substrings in a character vector. ",
         "name" : "substr",
         "aliases" : "substring:substr<-:substring<-",
         "title" : "Substrings of a Character Vector"
      },
      {
         "name" : "sum",
         "desc" : " sum returns the sum of all the values present in its arguments. ",
         "package" : "base",
         "title" : "Sum of Vector Elements",
         "aliases" : ""
      },
      {
         "aliases" : "summary.default:summary.data.frame:summary.factor:summary.matrix:format.summaryDefault:print.summaryDefault",
         "title" : "Object Summaries",
         "package" : "base",
         "name" : "summary",
         "desc" : " summary is a generic function used to produce result summaries of the results of various model fitting functions. The function invokes particular methods which depend on the class of the first argument. "
      },
      {
         "title" : "Singular Value Decomposition of a Matrix",
         "aliases" : "La.svd",
         "desc" : " Compute the singular-value decomposition of a rectangular matrix. ",
         "name" : "svd",
         "package" : "base"
      },
      {
         "package" : "base",
         "name" : "sweep",
         "desc" : " Return an array obtained from an input array by sweeping out a summary statistic. ",
         "aliases" : "",
         "title" : "Sweep out Array Summaries"
      },
      {
         "aliases" : "",
         "title" : "Select One of a List of Alternatives",
         "package" : "base",
         "name" : "switch",
         "desc" : " switch evaluates EXPR and accordingly chooses one of the further arguments (in ). "
      },
      {
         "package" : "base",
         "desc" : " Outlines syntax and gives the precedence of operators. ",
         "name" : "Syntax",
         "aliases" : "",
         "title" : "Operator Syntax and Precedence"
      },
      {
         "package" : "base",
         "desc" : " Sys.getenv obtains the values of the environment variables. ",
         "name" : "Sys.getenv",
         "aliases" : "",
         "title" : "Get Environment Variables"
      },
      {
         "title" : "Get the Process ID of the R Session",
         "aliases" : "",
         "name" : "Sys.getpid",
         "desc" : " Get the process ID of the Session. It is guaranteed by the operating system that two sessions running simultaneously will have different IDs, but it is possible that sessions running at different times will have the same ID. ",
         "package" : "base"
      },
      {
         "name" : "Sys.glob",
         "desc" : " Function to do wildcard expansion (also known as globbing) on file paths. ",
         "package" : "base",
         "title" : "Wildcard Expansion on File Paths",
         "aliases" : ""
      },
      {
         "name" : "Sys.info",
         "desc" : " Reports system and user information. ",
         "package" : "base",
         "title" : "Extract System and User Information",
         "aliases" : ""
      },
      {
         "desc" : " Get details of the numerical and monetary representations in the current locale. ",
         "name" : "Sys.localeconv",
         "package" : "base",
         "title" : "Find Details of the Numerical and Monetary Representations in the Current Locale",
         "aliases" : "Sys.localeconv"
      },
      {
         "title" : "Functions to Access the Function Call Stack",
         "aliases" : "sys.call:sys.calls:sys.frame:sys.frames:sys.nframe:sys.function:sys.parents:sys.on.exit:sys.status:parent.frame",
         "name" : "sys.parent",
         "desc" : " These functions provide access to environments (frames in S terminology) associated with functions further up the calling stack. ",
         "package" : "base"
      },
      {
         "desc" : " Find out if a file path is a symbolic link, and if so what it is linked to, via the system call readlink. Symbolic links are a POSIX concept, not implemented on Windows but for most filesystems on Unix-alikes. ",
         "name" : "Sys.readlink",
         "package" : "base",
         "title" : " Read File Symbolic Links ",
         "aliases" : ""
      },
      {
         "name" : "Sys.setenv",
         "desc" : " Sys.setenv sets environment variables (for other processes called from within or future calls to Sys.getenv from this process). Sys.unsetenv removes environment variables. ",
         "package" : "base",
         "title" : "Set or Unset Environment Variables",
         "aliases" : "Sys.unsetenv"
      },
      {
         "aliases" : "",
         "title" : " Set File Time ",
         "package" : "base",
         "desc" : " Uses system calls to set the times on a file or directory. ",
         "name" : "Sys.setFileTime"
      },
      {
         "package" : "base",
         "name" : "Sys.sleep",
         "desc" : " Suspend execution of expressions for a given number of seconds ",
         "aliases" : "",
         "title" : "Suspend Execution for a Time Interval"
      },
      {
         "title" : "Parse and Evaluate Expressions from a File",
         "aliases" : "",
         "desc" : " Parses expressions in the given file, and then successively evaluates them in the specified environment. ",
         "name" : "sys.source",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " Sys.time and Sys.Date returns the system's idea of the current date with and without time. ",
         "name" : "Sys.time",
         "aliases" : "Sys.Date",
         "title" : "Get Current Date and Time"
      },
      {
         "desc" : " This is an interface to the system command which, or to an emulation on Windows. ",
         "name" : "Sys.which",
         "package" : "base",
         "title" : "Find Full Paths to Executables",
         "aliases" : ""
      },
      {
         "package" : "base",
         "name" : "system.file",
         "desc" : " Finds the full file names of files in packages etc. ",
         "aliases" : "",
         "title" : "Find Names of R System Files"
      },
      {
         "title" : "Invoke a System Command",
         "aliases" : "",
         "desc" : " system invokes the OS command specified by command. ",
         "name" : "system",
         "package" : "base"
      },
      {
         "aliases" : "unix.time",
         "title" : "CPU Time Used",
         "package" : "base",
         "name" : "system.time",
         "desc" : "Return CPU (and other) times that expr used. "
      },
      {
         "aliases" : "",
         "title" : "Invoke a System Command",
         "package" : "base",
         "desc" : " system2 invokes the OS command specified by command. ",
         "name" : "system2"
      },
      {
         "desc" : " Given a matrix or data.frame x, t returns the transpose of x. ",
         "name" : "t",
         "package" : "base",
         "title" : "Matrix Transpose",
         "aliases" : "t.default:t.data.frame"
      },
      {
         "name" : "table",
         "desc" : " table uses the cross-classifying factors to build a contingency table of the counts at each combination of factor levels. ",
         "package" : "base",
         "title" : "Cross Tabulation and Table Creation",
         "aliases" : "summary.table:print.summary.table:as.data.frame.table:as.table:as.table.default:is.table"
      },
      {
         "aliases" : "",
         "title" : "Tabulation for Vectors",
         "package" : "base",
         "desc" : " tabulate takes the integer-valued vector bin and counts the number of times each integer occurs in it. ",
         "name" : "tabulate"
      },
      {
         "aliases" : "",
         "title" : "Apply a Function Over a Ragged Array",
         "package" : "base",
         "desc" : " Apply a function to each cell of a ragged array, that is to each (non-empty) group of values given by a unique combination of the levels of certain factors. ",
         "name" : "tapply"
      },
      {
         "aliases" : "removeTaskCallback",
         "title" : "Add or Remove a Top-Level Task Callback",
         "package" : "base",
         "desc" : " addTaskCallback registers an R function that is to be called each time a top-level task is completed. removeTaskCallback un-registers a function that was registered earlier via addTaskCallback. These provide low-level access to the internal/native mechanism for managing task-completion actions. One can use taskCallbackManager at the S-language level to manage S functions that are called at the completion of each task. This is easier and more direct. ",
         "name" : "taskCallback"
      },
      {
         "desc" : " This provides an entirely S-language mechanism for managing callbacks or actions that are invoked at the conclusion of each top-level task. Essentially, we register a single R function from this manager with the underlying, native task-callback mechanism and this function handles invoking the other R callbacks under the control of the manager. The manager consists of a collection of functions that access shared variables to manage the list of user-level callbacks. ",
         "name" : "taskCallbackManager",
         "package" : "base",
         "title" : "Create an R-level Task Callback Manager",
         "aliases" : ""
      },
      {
         "title" : "Query the Names of the Current Internal Top-Level Task Callbacks",
         "aliases" : "",
         "desc" : " This provides a way to get the names (or identifiers) for the currently registered task callbacks that are invoked at the conclusion of each top-level task. These identifiers can be used to remove a callback. ",
         "name" : "taskCallbackNames",
         "package" : "base"
      },
      {
         "desc" : " tempfile returns a vector of character strings which can be used as names for temporary files. ",
         "name" : "tempfile",
         "package" : "base",
         "title" : "Create Names for Temporary Files",
         "aliases" : "tempdir"
      },
      {
         "desc" : " Input and output text connections. ",
         "name" : "textConnection",
         "package" : "base",
         "title" : "Text Connections",
         "aliases" : "textConnectionValue"
      },
      {
         "desc" : " Tilde is used to separate the left- and right-hand sides in a model formula. ",
         "name" : "tilde",
         "package" : "base",
         "title" : "Tilde Operator",
         "aliases" : "tilde"
      },
      {
         "name" : "timezones",
         "desc" : " Information about time zones in . Sys.timezone returns the name of the current time zone. ",
         "package" : "base",
         "title" : "Time Zones",
         "aliases" : "OlsonNames:timezone:timezones:time:zone:time:zones:TZ:TZDIR"
      },
      {
         "package" : "base",
         "desc" : " This is a helper function for format to produce a single character string describing an object. ",
         "name" : "toString",
         "aliases" : "toString.default",
         "title" : "Convert an R Object to a Character String"
      },
      {
         "title" : "Interactive Tracing and Debugging of Calls to a Function or Method",
         "aliases" : "untrace:tracingState:.doTrace:returnValue",
         "desc" : " A call to trace allows you to insert debugging code (e.g., a call to browser or recover) at chosen places in any function. A call to untrace cancels the tracing. Specified methods can be traced the same way, without tracing all calls to the function. Trace code can be any expression. Tracing can be temporarily turned on or off globally by calling tracingState. ",
         "name" : "trace",
         "package" : "base"
      },
      {
         "aliases" : ".Traceback",
         "title" : "Print Call Stacks",
         "package" : "base",
         "desc" : " By default traceback() prints the call stack of the last uncaught error, i.e., the sequence of calls that lead to the error. This is useful when an error occurs with an unidentifiable error message. It can also be used to print the current stack or arbitrary lists of deparsed calls. ",
         "name" : "traceback"
      },
      {
         "name" : "tracemem",
         "desc" : " This function marks an object so that a message is printed whenever the internal code copies the object. It is a major cause of hard-to-predict memory use in R. ",
         "package" : "base",
         "title" : "Trace Copying of Objects",
         "aliases" : "untracemem:retracemem"
      },
      {
         "title" : "Transform an Object, for Example a Data Frame",
         "aliases" : "transform.default:transform.data.frame",
         "desc" : " transform is a generic function, which---at least currently---only does anything useful with data frames. transform.default converts its first argument to a data frame if possible and calls transform.data.frame. ",
         "name" : "transform",
         "package" : "base"
      },
      {
         "aliases" : "cos:sin:tan:acos:arccos:asin:arcsin:atan:arctan:atan2:cospi:sinpi:tanpi",
         "title" : "Trigonometric Functions",
         "package" : "base",
         "desc" : " These functions give the obvious trigonometric functions. They respectively compute the cosine, sine, tangent, arc-cosine, arc-sine, arc-tangent, and the two-argument arc-tangent. cospi(x), sinpi(x), and tanpi(x), compute cos(pi*x), sin(pi*x), and tan(pi*x). ",
         "name" : "Trig"
      },
      {
         "package" : "base",
         "desc" : " Remove leading and/or trailing whitespace from character strings. ",
         "name" : "trimws",
         "aliases" : "",
         "title" : "Remove Leading/Trailing Whitespace"
      },
      {
         "aliases" : "",
         "title" : "Try an Expression Allowing Error Recovery",
         "package" : "base",
         "desc" : " try is a wrapper to run an expression that might fail and allow the user's code to handle error-recovery. ",
         "name" : "try"
      },
      {
         "title" : "The Type of an Object",
         "aliases" : "type",
         "name" : "typeof",
         "desc" : " typeof determines the ( internal) type or storage mode of any object ",
         "package" : "base"
      },
      {
         "name" : "unique",
         "desc" : " unique returns a vector, data frame or array like x but with duplicate elements/rows removed. ",
         "package" : "base",
         "title" : "Extract Unique Elements",
         "aliases" : "unique.default:unique.data.frame:unique.matrix:unique.array"
      },
      {
         "title" : "Delete Files and Directories",
         "aliases" : "",
         "name" : "unlink",
         "desc" : " unlink deletes the file(s) or directories specified by x. ",
         "package" : "base"
      },
      {
         "package" : "base",
         "desc" : " Given a list structure x, unlist simplifies it to produce a vector which contains all the atomic components which occur in x. ",
         "name" : "unlist",
         "aliases" : "",
         "title" : "Flatten Lists"
      },
      {
         "aliases" : "",
         "title" : "Remove names or dimnames",
         "package" : "base",
         "name" : "unname",
         "desc" : " Remove the names or dimnames attribute of an object. "
      },
      {
         "name" : "UseMethod",
         "desc" : " possesses a simple generic function mechanism which can be used for an object-oriented style of programming. Method dispatch takes place based on the class(es) of the first argument to the generic function or of the object supplied as an argument to UseMethod or NextMethod. ",
         "package" : "base",
         "title" : "Class Methods",
         "aliases" : "NextMethod:S3Methods:.Method:.Generic:.Class"
      },
      {
         "title" : "Functions to Get and Set Hooks for Load, Attach, Detach and Unload",
         "aliases" : "setHook:packageEvent:.userHooksEnv",
         "name" : "userhooks",
         "desc" : " These functions allow users to set actions to be taken before packages are attached/detached and namespaces are (un)loaded. ",
         "package" : "base"
      },
      {
         "aliases" : "intToUtf8:Unicode:code:point",
         "title" : "Convert to or from UTF-8-encoded Character Vectors",
         "package" : "base",
         "desc" : " Conversion of UTF-8 encoded character vectors to and from integer vectors. ",
         "name" : "utf8Conversion"
      },
      {
         "name" : "vector",
         "desc" : " vector produces a vector of the given length and mode. as.vector, a generic, attempts to coerce its argument into a vector of mode mode (the default is to coerce to whichever vector mode is most convenient): if the result is atomic all attributes are removed. is.vector returns TRUE if x is a vector of the specified mode having no attributes other than names. It returns FALSE otherwise. ",
         "package" : "base",
         "title" : "Vectors",
         "aliases" : "as.vector:as.vector.factor:is.vector:atomic"
      },
      {
         "title" : "Vectorize a Scalar Function",
         "aliases" : "",
         "name" : "Vectorize",
         "desc" : " Vectorize creates a function wrapper that vectorizes the action of its argument FUN. ",
         "package" : "base"
      },
      {
         "title" : "Version Information",
         "aliases" : "R.version:version:R.version.string",
         "name" : "R.Version",
         "desc" : " R.Version() provides detailed information about the version of running. R.version is a variable (a list) holding this information (and version is a copy of it for S compatibility). ",
         "package" : "base"
      },
      {
         "aliases" : "suppressWarnings",
         "title" : "Warning Messages",
         "package" : "base",
         "name" : "warning",
         "desc" : " Generates a warning message that corresponds to its argument(s) and (optionally) the expression or function from which it was called. "
      },
      {
         "desc" : " warnings and its print method print the variable last.warning in a pleasing form. ",
         "name" : "warnings",
         "package" : "base",
         "title" : "Print Warning Messages",
         "aliases" : "last.warning:print.warnings:[.warnings:c.warnings:unique.warnings"
      },
      {
         "package" : "base",
         "name" : "weekdays",
         "desc" : " Extract the weekday, month or quarter, or the Julian time (days since some origin). These are generic functions: the methods for the internal date-time classes are documented here. ",
         "aliases" : "weekdays.POSIXt:weekdays.Date:months:months.POSIXt:months.Date:quarters:quarters.POSIXt:quarters.Date:julian:julian.POSIXt:julian.Date",
         "title" : "Extract Parts of a POSIXt or Date Object"
      },
      {
         "aliases" : "which.max",
         "title" : "Where is the Min() or Max() or first TRUE or FALSE ?",
         "package" : "base",
         "desc" : " Determines the location, i.e., index of the (first) minimum or maximum of a numeric (or logical) vector. For a logical vector x, which.min(x) and which.max(x) return the index of the first FALSE or TRUE, respectively. ",
         "name" : "which.min"
      },
      {
         "package" : "base",
         "name" : "which",
         "desc" : " Give the TRUE indices of a logical object, allowing for array indices. ",
         "aliases" : "arrayInd",
         "title" : "Which indices are TRUE?"
      },
      {
         "title" : "Evaluate an Expression in a Data Environment",
         "aliases" : "with.default:within:within.list:within.data.frame",
         "desc" : " Evaluate an expression in an environment constructed from data, possibly modifying (a copy of) the original data. ",
         "name" : "with",
         "package" : "base"
      },
      {
         "name" : "withVisible",
         "desc" : " This function evaluates an expression, returning it in a two element list containing its value and a flag showing whether it would automatically print. ",
         "package" : "base",
         "title" : "Return both a value and its visibility",
         "aliases" : ""
      },
      {
         "package" : "base",
         "desc" : " The data (usually a matrix) x are written to file file. If x is a two-dimensional matrix you need to transpose it to get the columns in file the same as those in the internal representation. ",
         "name" : "write",
         "aliases" : "",
         "title" : "Write Data to a File"
      },
      {
         "package" : "base",
         "desc" : " Write text lines to a connection. ",
         "name" : "writeLines",
         "aliases" : "",
         "title" : "Write Lines to a Connection"
      },
      {
         "aliases" : "xtfrm.default:xtfrm.factor:xtfrm.AsIs:xtfrm.Surv:xtfrm.Date:xtfrm.POSIXct:xtfrm.POSIXlt:xtfrm.difftime",
         "title" : "Auxiliary Function for Sorting and Ranking",
         "package" : "base",
         "name" : "xtfrm",
         "desc" : " A generic auxiliary function that produces a numeric vector which will sort in the same order as x. "
      },
      {
         "desc" : " zapsmall determines a digits argument dr for calling round(x, digits = dr) such that values close to zero (compared with the maximal absolute value) are zapped, i.e., treated as 0. ",
         "name" : "zapsmall",
         "package" : "base",
         "title" : "Rounding of Numbers",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Numerical Characteristics of the Machine",
         "package" : "base",
         "name" : ".Machine",
         "desc" : " .Machine is a variable holding information on the numerical characteristics of the machine is running on, such as the largest double or integer and the machine's precision. "
      },
      {
         "name" : "zpackages",
         "desc" : " .packages returns information about package availability. ",
         "package" : "base",
         "title" : "Listing of Packages",
         "aliases" : ""
      },
      {
         "desc" : " Internal interface to run a script through its interpreter. ",
         "name" : ".Script",
         "package" : "base",
         "title" : "Scripting Language Interface",
         "aliases" : ""
      },
      {
         "title" : "Miscellaneous Internal/Programming Utilities",
         "aliases" : "",
         "name" : "zutils",
         "desc" : "Miscellaneous internal/programming utilities.",
         "package" : "base"
      },
      {
         "name" : "Signals",
         "desc" : " On receiving SIGUSR1 will save the workspace and quit. SIGUSR2 has the same result except that the .Last function and on.exit expressions will not be called. ",
         "package" : "man",
         "title" : "Interrupting Execution of R",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Open a File or URL using Windows File Associations",
         "package" : "man",
         "desc" : " Opens the specified file or URL using the application specified in the Windows file associations. ",
         "name" : "shell.exec"
      },
      {
         "aliases" : "",
         "title" : "Invoke a System Command, using a Shell",
         "package" : "man",
         "name" : "shell",
         "desc" : " shell runs the command specified by cmd, usually under a shell, because that is what the POSIX standards require. "
      },
      {
         "aliases" : "cmpfun:cmpfile:loadcmp:disassemble:enableJIT:compilePKGS:getCompilerOption:setCompilerOptions",
         "title" : "Byte Code Compiler",
         "package" : "compiler",
         "desc" : " These functions provide an interface to a byte code compiler for R. ",
         "name" : "compile"
      },
      {
         "title" : "Ability and Intelligence Tests",
         "aliases" : "",
         "desc" : " Six tests were given to 112 individuals. The covariance matrix is given in this object. ",
         "name" : "ability.cov",
         "package" : "datasets"
      },
      {
         "title" : "Passenger Miles on Commercial US Airlines, 1937--1960",
         "aliases" : "",
         "name" : "airmiles",
         "desc" : " The revenue passenger miles flown by commercial airlines in the United States for each year from 1937 to 1960. ",
         "package" : "datasets"
      },
      {
         "desc" : " The classic Box & Jenkins airline data. Monthly totals of international airline passengers, 1949 to 1960. ",
         "name" : "AirPassengers",
         "package" : "datasets",
         "title" : "Monthly Airline Passenger Numbers 1949-1960",
         "aliases" : ""
      },
      {
         "title" : "New York Air Quality Measurements",
         "aliases" : "",
         "desc" : " Daily air quality measurements in New York, May to September 1973. ",
         "name" : "airquality",
         "package" : "datasets"
      },
      {
         "aliases" : "",
         "title" : "Anscombe's Quartet of Identical Simple Linear Regressions",
         "package" : "datasets",
         "name" : "anscombe",
         "desc" : " Four x-y datasets which have the same traditional statistical properties (mean, variance, correlation, regression line, etc.), yet are quite different. "
      },
      {
         "title" : "The Joyner--Boore Attenuation Data",
         "aliases" : "",
         "name" : "attenu",
         "desc" : " This data gives peak accelerations measured at various observation stations for 23 earthquakes in California. The data have been used by various workers to estimate the attenuating affect of distance on ground acceleration. ",
         "package" : "datasets"
      },
      {
         "aliases" : "",
         "title" : "The Chatterjee--Price Attitude Data",
         "package" : "datasets",
         "desc" : " From a survey of the clerical employees of a large financial organization, the data are aggregated from the questionnaires of the approximately 35 employees for each of 30 (randomly selected) departments. The numbers give the percent proportion of favourable responses to seven questions in each department.",
         "name" : "attitude"
      },
      {
         "title" : " Quarterly Time Series of the Number of Australian Residents ",
         "aliases" : "",
         "name" : "austres",
         "desc" : " Numbers (in thousands) of Australian residents measured quarterly from March 1971 to March 1994. The object is of class \"ts\". ",
         "package" : "datasets"
      },
      {
         "name" : "beavers",
         "desc" : " Reynolds (1994) describes a small part of a study of the long-term temperature dynamics of beaver Castor canadensis in north-central Wisconsin. Body temperature was measured by telemetry every 10 minutes for four females, but data from a one period of less than a day for each of two animals is used there. ",
         "package" : "datasets",
         "title" : "Body Temperature Series of Two Beavers",
         "aliases" : "beaver1:beaver2"
      },
      {
         "package" : "datasets",
         "name" : "BJsales",
         "desc" : " The sales time series BJsales and leading indicator BJsales.lead each contain 150 observations. The objects are of class \"ts\". ",
         "aliases" : "BJsales.lead",
         "title" : "Sales Data with Leading Indicator"
      },
      {
         "title" : " Biochemical Oxygen Demand ",
         "aliases" : "",
         "name" : "BOD",
         "desc" : " The BOD data frame has 6 rows and 2 columns giving the biochemical oxygen demand versus time in an evaluation of water quality. ",
         "package" : "datasets"
      },
      {
         "package" : "datasets",
         "desc" : " The data give the speed of cars and the distances taken to stop. Note that the data were recorded in the 1920s. ",
         "name" : "cars",
         "aliases" : "",
         "title" : "Speed and Stopping Distances of Cars"
      },
      {
         "title" : "Weight versus age of chicks on different diets",
         "aliases" : "",
         "name" : "ChickWeight",
         "desc" : " The ChickWeight data frame has 578 rows and 4 columns from an experiment on the effect of diet on early growth of chicks. ",
         "package" : "datasets"
      },
      {
         "aliases" : "",
         "title" : "Chicken Weights by Feed Type",
         "package" : "datasets",
         "desc" : " An experiment was conducted to measure and compare the effectiveness of various feed supplements on the growth rate of chickens. ",
         "name" : "chickwts"
      },
      {
         "title" : "Mauna Loa Atmospheric CO2 Concentration",
         "aliases" : "",
         "name" : "co2",
         "desc" : " Atmospheric concentrations of CO_22 are expressed in parts per million (ppm) and reported in the preliminary 1997 SIO manometric mole fraction scale. ",
         "package" : "datasets"
      },
      {
         "aliases" : "",
         "title" : "Student's 3000 Criminals Data",
         "package" : "datasets",
         "desc" : " Data of 3000 male criminals over 20 years old undergoing their sentences in the chief prisons of England and Wales. ",
         "name" : "crimtab"
      },
      {
         "package" : "datasets",
         "name" : "datasets-package",
         "desc" : " Base R datasets ",
         "aliases" : "datasets",
         "title" : " The R Datasets Package "
      },
      {
         "aliases" : "",
         "title" : "Yearly Numbers of Important Discoveries",
         "package" : "datasets",
         "desc" : " The numbers of great inventions and scientific discoveries in each year from 1860 to 1959. ",
         "name" : "discoveries"
      },
      {
         "name" : "DNase",
         "desc" : " The DNase data frame has 176 rows and 3 columns of data obtained during development of an ELISA assay for the recombinant protein DNase in rat serum. ",
         "package" : "datasets",
         "title" : "Elisa assay of DNase",
         "aliases" : ""
      },
      {
         "desc" : " Data from a case-control study of (o)esophageal cancer in Ille-et-Vilaine, France. ",
         "name" : "esoph",
         "package" : "datasets",
         "title" : "Smoking, Alcohol and (O)esophageal Cancer",
         "aliases" : ""
      },
      {
         "desc" : "Conversion rates between the various Euro currencies.",
         "name" : "euro",
         "package" : "datasets",
         "title" : "Conversion Rates of Euro Currencies",
         "aliases" : "euro.cross"
      },
      {
         "title" : "Distances Between European Cities and Between US Cities",
         "aliases" : "UScitiesD",
         "name" : "eurodist",
         "desc" : " The eurodist gives the road distances (in km) between 21 cities in Europe. The data are taken from a table in The Cambridge Encyclopaedia. UScitiesD gives straight line distances between 10 cities in the US. ",
         "package" : "datasets"
      },
      {
         "title" : " Daily Closing Prices of Major European Stock Indices, 1991--1998 ",
         "aliases" : "",
         "name" : "EuStockMarkets",
         "desc" : " Contains the daily closing prices of major European stock indices: Germany DAX (Ibis), Switzerland SMI, France CAC, and UK FTSE. The data are sampled in business time, i.e., weekends and holidays are omitted. ",
         "package" : "datasets"
      },
      {
         "name" : "faithful",
         "desc" : " Waiting time between eruptions and the duration of the eruption for the Old Faithful geyser in Yellowstone National Park, Wyoming, USA. ",
         "package" : "datasets",
         "title" : "Old Faithful Geyser Data",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Determination of Formaldehyde",
         "package" : "datasets",
         "desc" : " These data are from a chemical experiment to prepare a standard curve for the determination of formaldehyde by the addition of chromatropic acid and concentrated sulphuric acid and the reading of the resulting purple color on a spectrophotometer. ",
         "name" : "Formaldehyde"
      },
      {
         "aliases" : "freeny.x:freeny.y",
         "title" : "Freeny's Revenue Data",
         "package" : "datasets",
         "desc" : " Freeny's data on quarterly revenue and explanatory variables. ",
         "name" : "freeny"
      },
      {
         "package" : "datasets",
         "desc" : " Distribution of hair and eye color and sex in 592 statistics students. ",
         "name" : "HairEyeColor",
         "aliases" : "",
         "title" : "Hair and Eye Color of Statistics Students"
      },
      {
         "desc" : " A correlation matrix of eight physical measurements on 305 girls between ages seven and seventeen. ",
         "name" : "Harman23.cor",
         "package" : "datasets",
         "title" : "Harman Example 2.3",
         "aliases" : ""
      },
      {
         "title" : "Harman Example 7.4",
         "aliases" : "",
         "desc" : " A correlation matrix of 24 psychological tests given to 145 seventh and eight-grade children in a Chicago suburb by Holzinger and Swineford. ",
         "name" : "Harman74.cor",
         "package" : "datasets"
      },
      {
         "aliases" : "",
         "title" : "Pharmacokinetics of Indomethacin",
         "package" : "datasets",
         "desc" : " The Indometh data frame has 66 rows and 3 columns of data on the pharmacokinetics of indometacin (or, older spelling, indomethacin). ",
         "name" : "Indometh"
      },
      {
         "package" : "datasets",
         "name" : "infert",
         "desc" : " This is a matched case-control study dating from before the availability of conditional logistic regression. ",
         "aliases" : "",
         "title" : "Infertility after Spontaneous and Induced Abortion"
      },
      {
         "aliases" : "",
         "title" : "Effectiveness of Insect Sprays",
         "package" : "datasets",
         "desc" : " The counts of insects in agricultural experimental units treated with different insecticides. ",
         "name" : "InsectSprays"
      },
      {
         "title" : "Edgar Anderson's Iris Data",
         "aliases" : "iris3",
         "desc" : " This famous (Fisher's or Anderson's) iris data set gives the measurements in centimeters of the variables sepal length and width and petal length and width, respectively, for 50 flowers from each of 3 species of iris. The species are Iris setosa, versicolor, and virginica. ",
         "name" : "iris",
         "package" : "datasets"
      },
      {
         "package" : "datasets",
         "desc" : " The areas in thousands of square miles of the landmasses which exceed 10,000 square miles. ",
         "name" : "islands",
         "aliases" : "",
         "title" : "Areas of the World's Major Landmasses"
      },
      {
         "package" : "datasets",
         "desc" : " Quarterly earnings (dollars) per Johnson & Johnson share 1960--80. ",
         "name" : "JohnsonJohnson",
         "aliases" : "",
         "title" : "Quarterly Earnings per Johnson & Johnson Share"
      },
      {
         "title" : "Level of Lake Huron 1875--1972",
         "aliases" : "",
         "name" : "LakeHuron",
         "desc" : " Annual measurements of the level, in feet, of Lake Huron 1875--1972. ",
         "package" : "datasets"
      },
      {
         "title" : " Luteinizing Hormone in Blood Samples ",
         "aliases" : "",
         "name" : "lh",
         "desc" : " A regular time series giving the luteinizing hormone in blood samples at 10 mins intervals from a human female, 48 samples. ",
         "package" : "datasets"
      },
      {
         "aliases" : "",
         "title" : "Intercountry Life-Cycle Savings Data",
         "package" : "datasets",
         "desc" : " Data on the savings ratio 1960--1970. ",
         "name" : "LifeCycleSavings"
      },
      {
         "title" : "Growth of Loblolly pine trees",
         "aliases" : "",
         "name" : "Loblolly",
         "desc" : " The Loblolly data frame has 84 rows and 3 columns of records of the growth of Loblolly pine trees. ",
         "package" : "datasets"
      },
      {
         "aliases" : "",
         "title" : "Longley's Economic Regression Data",
         "package" : "datasets",
         "name" : "longley",
         "desc" : " A macroeconomic data set which provides a well-known example for a highly collinear regression. "
      },
      {
         "title" : "Annual Canadian Lynx trappings 1821--1934",
         "aliases" : "",
         "name" : "lynx",
         "desc" : " Annual numbers of lynx trappings for 1821--1934 in Canada. Taken from Brockwell & Davis (1991), this appears to be the series considered by Campbell & Walker (1977). ",
         "package" : "datasets"
      },
      {
         "name" : "morley",
         "desc" : " A classical data of Michelson (but not this one with Morley) on measurements done in 1879 on the speed of light. The data consists of five experiments, each consisting of 20 consecutive runs. The response is the speed of light measurement, suitably coded (km/sec, with 299000 subtracted). ",
         "package" : "datasets",
         "title" : "Michelson Speed of Light Data",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Motor Trend Car Road Tests",
         "package" : "datasets",
         "desc" : " The data was extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles (1973--74 models). ",
         "name" : "mtcars"
      },
      {
         "package" : "datasets",
         "desc" : " The mean annual temperature in degrees Fahrenheit in New Haven, Connecticut, from 1912 to 1971. ",
         "name" : "nhtemp",
         "aliases" : "",
         "title" : "Average Yearly Temperatures in New Haven"
      },
      {
         "package" : "datasets",
         "name" : "Nile",
         "desc" : " Measurements of the annual flow of the river Nile at Ashwan 1871--1970. ",
         "aliases" : "",
         "title" : "Flow of the River Nile"
      },
      {
         "title" : " Average Monthly Temperatures at Nottingham, 1920--1939 ",
         "aliases" : "",
         "name" : "nottem",
         "desc" : " A time series object containing average air temperatures at Nottingham Castle in degrees Fahrenheit for 20 years. ",
         "package" : "datasets"
      },
      {
         "title" : " Classical N, P, K Factorial Experiment ",
         "aliases" : "",
         "desc" : " A classical N, P, K (nitrogen, phosphate, potassium) factorial experiment on the growth of peas conducted on 6 blocks. Each half of a fractional factorial design confounding the NPK interaction was used on 3 of the plots. ",
         "name" : "npk",
         "package" : "datasets"
      },
      {
         "name" : "occupationalStatus",
         "desc" : " Cross-classification of a sample of British males according to each subject's occupational status and his father's occupational status. ",
         "package" : "datasets",
         "title" : "Occupational Status of Fathers and their Sons",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Growth of Orange Trees",
         "package" : "datasets",
         "name" : "Orange",
         "desc" : " The Orange data frame has 35 rows and 3 columns of records of the growth of orange trees. "
      },
      {
         "desc" : " An experiment was conducted to assess the potency of various constituents of orchard sprays in repelling honeybees, using a Latin square design. ",
         "name" : "OrchardSprays",
         "package" : "datasets",
         "title" : "Potency of Orchard Sprays",
         "aliases" : ""
      },
      {
         "name" : "PlantGrowth",
         "desc" : " Results from an experiment to compare yields (as measured by dried weight of plants) obtained under a control and two different treatment conditions. ",
         "package" : "datasets",
         "title" : "Results from an Experiment on Plant Growth",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Annual Precipitation in US Cities",
         "package" : "datasets",
         "desc" : " The average amount of precipitation (rainfall) in inches for each of 70 United States (and Puerto Rico) cities. ",
         "name" : "precip"
      },
      {
         "title" : "Quarterly Approval Ratings of US Presidents",
         "aliases" : "",
         "name" : "presidents",
         "desc" : " The (approximately) quarterly approval rating for the President of the United States from the first quarter of 1945 to the last quarter of 1974. ",
         "package" : "datasets"
      },
      {
         "package" : "datasets",
         "desc" : " Data on the relation between temperature in degrees Celsius and vapor pressure of mercury in millimeters (of mercury). ",
         "name" : "pressure",
         "aliases" : "",
         "title" : "Vapor Pressure of Mercury as a Function of Temperature"
      },
      {
         "title" : "Reaction Velocity of an Enzymatic Reaction",
         "aliases" : "",
         "desc" : " The Puromycin data frame has 23 rows and 3 columns of the reaction velocity versus substrate concentration in an enzymatic reaction involving untreated cells or cells treated with Puromycin. ",
         "name" : "Puromycin",
         "package" : "datasets"
      },
      {
         "aliases" : "",
         "title" : "Locations of Earthquakes off Fiji",
         "package" : "datasets",
         "name" : "quakes",
         "desc" : " The data set give the locations of 1000 seismic events of MB > 4.0. The events occurred in a cube near Fiji since 1964. "
      },
      {
         "package" : "datasets",
         "desc" : " 400 triples of successive random numbers were taken from the VAX FORTRAN function RANDU running under VMS 1.5. ",
         "name" : "randu",
         "aliases" : "",
         "title" : "Random Numbers from Congruential Generator RANDU"
      },
      {
         "title" : "Lengths of Major North American Rivers",
         "aliases" : "",
         "desc" : " This data set gives the lengths (in miles) of 141 major rivers in North America, as compiled by the US Geological Survey. ",
         "name" : "rivers",
         "package" : "datasets"
      },
      {
         "title" : "Measurements on Petroleum Rock Samples",
         "aliases" : "",
         "name" : "rock",
         "desc" : " Measurements on 48 rock samples from a petroleum reservoir.",
         "package" : "datasets"
      },
      {
         "package" : "datasets",
         "name" : "sleep",
         "desc" : " Data which show the effect of two soporific drugs (increase in hours of sleep compared to control) on 10 patients. ",
         "aliases" : "",
         "title" : "Student's Sleep Data"
      },
      {
         "desc" : " Operational data of a plant for the oxidation of ammonia to nitric acid. ",
         "name" : "stackloss",
         "package" : "datasets",
         "title" : "Brownlee's Stack Loss Plant Data",
         "aliases" : "stack.loss:stack.x"
      },
      {
         "package" : "datasets",
         "name" : "state",
         "desc" : "Data sets related to the 50 states of the United States of America.",
         "aliases" : "state.abb:state.area:state.center:state.division:state.name:state.region:state.x77",
         "title" : "US State Facts and Figures"
      },
      {
         "name" : "sunspot.month",
         "desc" : " Monthly numbers of sunspots, as from the World Data Center, aka SIDC. This is the version of the data that will occasionally be updated when new counts become available.%% ~/R/MM/MISC/read-sunspots.R ",
         "package" : "datasets",
         "title" : "Monthly Sunspot Data, from 1749 to \"Present\"",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Yearly Sunspot Data, 1700--1988",
         "package" : "datasets",
         "name" : "sunspot.year",
         "desc" : " Yearly numbers of sunspots from 1700 to 1988 (rounded to one digit). Note that monthly numbers are available as sunspot.month, though starting slightly later. "
      },
      {
         "package" : "datasets",
         "desc" : " Monthly mean relative sunspot numbers from 1749 to 1983. Collected at Swiss Federal Observatory, Zurich until 1960, then Tokyo Astronomical Observatory. ",
         "name" : "sunspots",
         "aliases" : "",
         "title" : "Monthly Sunspot Numbers, 1749--1983"
      },
      {
         "title" : "Swiss Fertility and Socioeconomic Indicators (1888) Data",
         "aliases" : "",
         "desc" : " Standardized fertility measure and socio-economic indicators for each of 47 French-speaking provinces of Switzerland at about 1888. ",
         "name" : "swiss",
         "package" : "datasets"
      },
      {
         "title" : "Pharmacokinetics of Theophylline",
         "aliases" : "",
         "name" : "Theoph",
         "desc" : " The Theoph data frame has 132 rows and 5 columns of data from an experiment on the pharmacokinetics of theophylline.",
         "package" : "datasets"
      },
      {
         "title" : "Survival of passengers on the Titanic",
         "aliases" : "",
         "desc" : " This data set provides information on the fate of passengers on the fatal maiden voyage of the ocean liner Titanic, summarized according to economic status (class), sex, age and survival. ",
         "name" : "Titanic",
         "package" : "datasets"
      },
      {
         "desc" : " The response is the length of odontoblasts (teeth) in each of 10 guinea pigs at each of three dose levels of Vitamin C (0.5, 1, and 2 mg) with each of two delivery methods (orange juice or ascorbic acid). ",
         "name" : "ToothGrowth",
         "package" : "datasets",
         "title" : "The Effect of Vitamin C on Tooth Growth in Guinea Pigs",
         "aliases" : ""
      },
      {
         "package" : "datasets",
         "name" : "treering",
         "desc" : " Contains normalized tree-ring widths in dimensionless units. ",
         "aliases" : "",
         "title" : " Yearly Treering Data, -6000--1979 "
      },
      {
         "title" : "Girth, Height and Volume for Black Cherry Trees",
         "aliases" : "",
         "name" : "trees",
         "desc" : " This data set provides measurements of the girth, height and volume of timber in 31 felled black cherry trees. Note that girth is the diameter of the tree (in inches) measured at 4 ft 6 in above the ground. ",
         "package" : "datasets"
      },
      {
         "name" : "UCBAdmissions",
         "desc" : " Aggregate data on applicants to graduate school at Berkeley for the six largest departments in 1973 classified by admission and sex. ",
         "package" : "datasets",
         "title" : "Student Admissions at UC Berkeley",
         "aliases" : ""
      },
      {
         "aliases" : "Seatbelts",
         "title" : " Road Casualties in Great Britain 1969--84 ",
         "package" : "datasets",
         "name" : "UKDriverDeaths",
         "desc" : " UKDriverDeaths is a time series giving the monthly totals of car drivers in Great Britain killed or seriously injured Jan 1969 to Dec 1984. Compulsory wearing of seat belts was introduced on 31 Jan 1983. Seatbelts is more information on the same problem. "
      },
      {
         "title" : "UK Quarterly Gas Consumption",
         "aliases" : "",
         "name" : "UKgas",
         "desc" : " Quarterly UK gas consumption from 1960Q1 to 1986Q4, in millions of therms. ",
         "package" : "datasets"
      },
      {
         "desc" : " Three time series giving the monthly deaths from bronchitis, emphysema and asthma in the UK, 1974--1979, both sexes (ldeaths), males (mdeaths) and females (fdeaths). ",
         "name" : "UKLungDeaths",
         "package" : "datasets",
         "title" : " Monthly Deaths from Lung Diseases in the UK ",
         "aliases" : "ldeaths:fdeaths:mdeaths"
      },
      {
         "aliases" : "",
         "title" : " Accidental Deaths in the US 1973--1978 ",
         "package" : "datasets",
         "name" : "USAccDeaths",
         "desc" : " A time series giving the monthly totals of accidental deaths in the USA. The values for the first six months of 1979 are 7798 7406 8363 8460 9217 9316. "
      },
      {
         "aliases" : "",
         "title" : "Violent Crime Rates by US State",
         "package" : "datasets",
         "name" : "USArrests",
         "desc" : " This data set contains statistics, in arrests per 100,000 residents for assault, murder, and rape in each of the 50 US states in 1973. Also given is the percent of the population living in urban areas. "
      },
      {
         "package" : "datasets",
         "name" : "USJudgeRatings",
         "desc" : " Lawyers' ratings of state judges in the US Superior Court. ",
         "aliases" : "",
         "title" : "Lawyers' Ratings of State Judges in the US Superior Court"
      },
      {
         "name" : "USPersonalExpenditure",
         "desc" : " This data set consists of United States personal expenditures (in billions of dollars) in the categories; food and tobacco, household operation, medical and health, personal care, and private education for the years 1940, 1945, 1950, 1955 and 1960. ",
         "package" : "datasets",
         "title" : "Personal Expenditure Data",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Populations Recorded by the US Census",
         "package" : "datasets",
         "desc" : " This data set gives the population of the United States (in millions) as recorded by the decennial census for the period 1790--1970. ",
         "name" : "uspop"
      },
      {
         "title" : "Death Rates in Virginia (1940)",
         "aliases" : "",
         "name" : "VADeaths",
         "desc" : " Death rates per 1000 in Virginia in 1940. ",
         "package" : "datasets"
      },
      {
         "title" : "Topographic Information on Auckland's Maunga Whau Volcano",
         "aliases" : "",
         "name" : "volcano",
         "desc" : " Maunga Whau (Mt Eden) is one of about 50 volcanos in the Auckland volcanic field. This data set gives topographic information for Maunga Whau on a 10m by 10m grid. ",
         "package" : "datasets"
      },
      {
         "package" : "datasets",
         "name" : "warpbreaks",
         "desc" : " This data set gives the number of warp breaks per loom, where a loom corresponds to a fixed length of yarn. ",
         "aliases" : "",
         "title" : "The Number of Breaks in Yarn during Weaving"
      },
      {
         "package" : "datasets",
         "desc" : " This data set gives the average heights and weights for American women aged 30--39. ",
         "name" : "women",
         "aliases" : "",
         "title" : "Average Heights and Weights for American Women"
      },
      {
         "aliases" : "",
         "title" : "The World's Telephones",
         "package" : "datasets",
         "name" : "WorldPhones",
         "desc" : " The number of telephones in various regions of the world (in thousands). "
      },
      {
         "aliases" : "",
         "title" : "Internet Usage per Minute",
         "package" : "datasets",
         "name" : "WWWusage",
         "desc" : " A time series of the numbers of users connected to the Internet through a server every minute. "
      },
      {
         "title" : "Carbon Dioxide Uptake in Grass Plants",
         "aliases" : "",
         "desc" : " The CO2 data frame has 84 rows and 5 columns of data from an experiment on the cold tolerance of the grass species Echinochloa crus-galli. ",
         "name" : "CO2",
         "package" : "datasets"
      },
      {
         "desc" : " This function adds one or more straight lines through the current plot. ",
         "name" : "abline",
         "package" : "graphics",
         "title" : "Add Straight Lines to a Plot",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Add Arrows to a Plot",
         "package" : "graphics",
         "desc" : " Draw arrows between pairs of points. ",
         "name" : "arrows"
      },
      {
         "name" : "assocplot",
         "desc" : " Produce a Cohen-Friendly association plot indicating deviations from independence of rows and columns in a 2-dimensional contingency table. ",
         "package" : "graphics",
         "title" : "Association Plots",
         "aliases" : ""
      },
      {
         "desc" : " Functions to plot objects of classes \"POSIXlt\", \"POSIXct\" and \"Date\" representing calendar dates and times. ",
         "name" : "axis.POSIXct",
         "package" : "graphics",
         "title" : "Date and Date-time Plotting Functions",
         "aliases" : "axis.Date"
      },
      {
         "aliases" : "",
         "title" : "Add an Axis to a Plot",
         "package" : "graphics",
         "desc" : "Adds an axis to the current plot, allowing the specification of the side, position, labels, and other options. ",
         "name" : "axis"
      },
      {
         "desc" : " Compute pretty tickmark locations, the same way as does internally. This is only non-trivial when log coordinates are active. By default, gives the at values which axis(side) would use. ",
         "name" : "axTicks",
         "package" : "graphics",
         "title" : "Compute Axis Tickmark Locations",
         "aliases" : ""
      },
      {
         "desc" : " Creates a bar plot with vertical or horizontal bars. ",
         "name" : "barplot",
         "package" : "graphics",
         "title" : "Bar Plots",
         "aliases" : "barplot.default"
      },
      {
         "desc" : " This function draws a box around the current plot in the given color and linetype. The bty parameter determines the type of box drawn. See par for details. ",
         "name" : "box",
         "package" : "graphics",
         "title" : "Draw a Box around a Plot",
         "aliases" : ""
      },
      {
         "package" : "graphics",
         "desc" : " Interpreting the columns (or rows) of a matrix as different groups, draw a boxplot for each. ",
         "name" : "boxplot.matrix",
         "aliases" : "",
         "title" : "Draw a Boxplot for each Column (Row) of a Matrix"
      },
      {
         "aliases" : "boxplot.default:boxplot.formula",
         "title" : "Box Plots",
         "package" : "graphics",
         "name" : "boxplot",
         "desc" : " Produce box-and-whisker plot(s) of the given (grouped) values. "
      },
      {
         "package" : "graphics",
         "desc" : " bxp draws box plots based on the given summaries in z. It is usually called from within boxplot, but can be invoked directly. ",
         "name" : "bxp",
         "aliases" : "",
         "title" : "Draw Box Plots from Summaries"
      },
      {
         "aliases" : "cdplot.default:cdplot.formula",
         "title" : "Conditional Density Plots",
         "package" : "graphics",
         "name" : "cdplot",
         "desc" : " Computes and plots conditional densities describing how the conditional distribution of a categorical variable y changes over a numerical variable x. "
      },
      {
         "title" : "Set Clipping Region",
         "aliases" : "",
         "name" : "clip",
         "desc" : " Set clipping region in user coordinates ",
         "package" : "graphics"
      },
      {
         "desc" : " Create a contour plot, or add contour lines to an existing plot. ",
         "name" : "contour",
         "package" : "graphics",
         "title" : "Display Contours",
         "aliases" : "contour.default"
      },
      {
         "title" : "Convert between Graphics Coordinate Systems",
         "aliases" : "grconvertY",
         "desc" : " Convert between graphics coordinate systems. ",
         "name" : "convertXY",
         "package" : "graphics"
      },
      {
         "title" : "Conditioning Plots",
         "aliases" : "co.intervals",
         "desc" : " This function produces two variants of the conditioning plots discussed in the reference below. ",
         "name" : "coplot",
         "package" : "graphics"
      },
      {
         "title" : "Draw Function Plots",
         "aliases" : "plot.function",
         "desc" : " Draws a curve corresponding to a function over the interval [from, to]. curve can plot also an expression in the variable xname, default x. ",
         "name" : "curve",
         "package" : "graphics"
      },
      {
         "title" : "Cleveland's Dot Plots",
         "aliases" : "",
         "name" : "dotchart",
         "desc" : " Draw a Cleveland dot plot. ",
         "package" : "graphics"
      },
      {
         "aliases" : ".filled.contour",
         "title" : "Level (Contour) Plots",
         "package" : "graphics",
         "name" : "filled.contour",
         "desc" : " This function produces a contour plot with the areas between the contours filled in solid color (Cleveland calls this a level plot). A key showing how the colors map to z values is shown to the right of the plot. "
      },
      {
         "name" : "fourfoldplot",
         "desc" : " Creates a fourfold display of a 2 by 2 by k contingency table on the current graphics device, allowing for the visual inspection of the association between two dichotomous variables in one or several populations (strata). ",
         "package" : "graphics",
         "title" : "Fourfold Plots",
         "aliases" : ""
      },
      {
         "aliases" : "frame",
         "title" : "Create / Start a New Plot Frame",
         "package" : "graphics",
         "desc" : " This function (frame is an alias for plot.new) causes the completion of plotting in the current plot (if there is one) and an advance to a new graphics frame. This is used in all high-level plotting functions and also useful for skipping plots when a multi-figure region is in use. ",
         "name" : "frame"
      },
      {
         "desc" : " The functions or variables listed here are no longer part of as they are not needed (any more). ",
         "name" : "graphics-defunct",
         "package" : "graphics",
         "title" : "Defunct Functions in Package graphics",
         "aliases" : "dotplot:stripplot:piechart"
      },
      {
         "title" : " The R Graphics Package ",
         "aliases" : "graphics",
         "name" : "graphics-package",
         "desc" : " R functions for base graphics ",
         "package" : "graphics"
      },
      {
         "title" : "Add Grid to a Plot",
         "aliases" : "",
         "name" : "grid",
         "desc" : " grid adds an nx by ny rectangular grid to an existing plot. ",
         "package" : "graphics"
      },
      {
         "desc" : " Method for hist applied to date or date-time objects. ",
         "name" : "hist.POSIXt",
         "package" : "graphics",
         "title" : "Histogram of a Date or Date-Time Object",
         "aliases" : "hist.Date"
      },
      {
         "title" : "Histograms",
         "aliases" : "hist.default",
         "desc" : " The generic function hist computes a histogram of the given data values. If plot = TRUE, the resulting object of class \"histogram\" is plotted by plot.histogram, before it is returned. ",
         "name" : "hist",
         "package" : "graphics"
      },
      {
         "title" : "Identify Points in a Scatter Plot",
         "aliases" : "identify.default",
         "desc" : " identify reads the position of the graphics pointer when the (first) mouse button is pressed. It then searches the coordinates given in x and y for the point closest to the pointer. If this point is close enough to the pointer, its index will be returned as part of the value of the call. ",
         "name" : "identify",
         "package" : "graphics"
      },
      {
         "title" : "Display a Color Image",
         "aliases" : "image.default",
         "desc" : " Creates a grid of colored or gray-scale rectangles with colors corresponding to the values in z. This can be used to display three-dimensional or spatial data aka images. This is a generic function. The functions heat.colors, terrain.colors and topo.colors create heat-spectrum (red to white) and topographical color schemes suitable for displaying ordered data, with n giving the number of colors desired. ",
         "name" : "image",
         "package" : "graphics"
      },
      {
         "title" : "Specifying Complex Plot Arrangements",
         "aliases" : "layout.show:lcm",
         "name" : "layout",
         "desc" : " layout divides the device up into as many rows and columns as there are in matrix mat, with the column-widths and the row-heights specified in the respective arguments. ",
         "package" : "graphics"
      },
      {
         "aliases" : "",
         "title" : "Add Legends to Plots",
         "package" : "graphics",
         "desc" : " This function can be used to add legends to plots. Note that a call to the function locator(1) can be used in place of the x and y arguments. ",
         "name" : "legend"
      },
      {
         "package" : "graphics",
         "name" : "lines",
         "desc" : " A generic function taking coordinates given in various ways and joining the corresponding points with line segments. ",
         "aliases" : "lines.default",
         "title" : "Add Connected Line Segments to a Plot"
      },
      {
         "package" : "graphics",
         "name" : "locator",
         "desc" : " Reads the position of the graphics cursor when the (first) mouse button is pressed. ",
         "aliases" : "",
         "title" : "Graphical Input"
      },
      {
         "desc" : " Plot the columns of one matrix against the columns of another. ",
         "name" : "matplot",
         "package" : "graphics",
         "title" : "Plot Columns of Matrices",
         "aliases" : "matpoints:matlines"
      },
      {
         "aliases" : "mosaicplot.default:mosaicplot.formula",
         "title" : "Mosaic Plots",
         "package" : "graphics",
         "name" : "mosaicplot",
         "desc" : "Plots a mosaic on the current graphics device."
      },
      {
         "name" : "mtext",
         "desc" : " Text is written in one of the four margins of the current figure region or one of the outer margins of the device region. ",
         "package" : "graphics",
         "title" : "Write Text into the Margins of a Plot",
         "aliases" : ""
      },
      {
         "aliases" : "pairs.default:pairs.formula",
         "title" : "Scatterplot Matrices",
         "package" : "graphics",
         "desc" : " A matrix of scatterplots is produced. ",
         "name" : "pairs"
      },
      {
         "package" : "graphics",
         "desc" : " An example of a simple useful panel function to be used as argument in e.g., coplot or pairs. ",
         "name" : "panel.smooth",
         "aliases" : "",
         "title" : "Simple Panel Plot"
      },
      {
         "desc" : " par can be used to set or query graphical parameters. Parameters can be set by specifying them as arguments to par in tag = value form, or by passing them as a list of tagged values. ",
         "name" : "par",
         "package" : "graphics",
         "title" : "Set or Query Graphical Parameters",
         "aliases" : ".Pars:graphical:parameter:graphical:parameters"
      },
      {
         "aliases" : "persp.default",
         "title" : "Perspective Plots",
         "package" : "graphics",
         "desc" : " This function draws perspective plots of a surface over the x--y plane. persp is a generic function. ",
         "name" : "persp"
      },
      {
         "title" : "Pie Charts",
         "aliases" : "",
         "name" : "pie",
         "desc" : " Draw a pie chart. ",
         "package" : "graphics"
      },
      {
         "package" : "graphics",
         "name" : "plot.data.frame",
         "desc" : " plot.data.frame, a method for the plot generic. It is designed for a quick look at numeric data frames. ",
         "aliases" : "",
         "title" : "Plot Method for Data Frames"
      },
      {
         "aliases" : "",
         "title" : "The Default Scatterplot Function",
         "package" : "graphics",
         "name" : "plot.default",
         "desc" : " Draw a scatter plot with decorations such as axes and titles in the active graphics window. "
      },
      {
         "title" : "Plot Univariate Effects of a Design or Model",
         "aliases" : "",
         "desc" : " Plot univariate effects of one or more factors, typically for a designed experiment as analyzed by aov(). ",
         "name" : "plot.design",
         "package" : "graphics"
      },
      {
         "desc" : " This functions implements a scatterplot method for factor arguments of the generic plot function. If y is missing barplot is produced. For numeric y a boxplot is used, and for a factor y a spineplot is shown. For any other type of y the next plot method is called, normally plot.default. ",
         "name" : "plot.factor",
         "package" : "graphics",
         "title" : "Plotting Factor Variables",
         "aliases" : ""
      },
      {
         "package" : "graphics",
         "desc" : " Specify a scatterplot or add points, lines, or text via a formula. ",
         "name" : "plot.formula",
         "aliases" : "lines.formula:points.formula:text.formula",
         "title" : "Formula Notation for Scatterplots"
      },
      {
         "title" : "Plotting Raster Images",
         "aliases" : "",
         "name" : "plot.raster",
         "desc" : " This functions implements a plot method for raster images. ",
         "package" : "graphics"
      },
      {
         "package" : "graphics",
         "name" : "plot",
         "desc" : " Generic function for plotting of objects. For more details about the graphical parameter arguments, see par. For simple scatter plots, plot.default will be used. However, there are plot methods for many objects, including functions, data.frames, density objects, etc. Use methods(plot) and the documentation for these. ",
         "aliases" : "",
         "title" : "Generic X-Y Plotting"
      },
      {
         "aliases" : "lines.table:points.table",
         "title" : "Plot Methods for table Objects",
         "package" : "graphics",
         "desc" : " This is a method of the generic plot function for (contingency) table objects. Whereas for two- and more dimensional tables, a mosaicplot is drawn, one-dimensional ones are plotted as bars. ",
         "name" : "plot.table"
      },
      {
         "aliases" : "xlim:ylim:asp",
         "title" : "Set up World Coordinates for Graphics Window",
         "package" : "graphics",
         "desc" : " This function sets up the world coordinate system for a graphics window. It is called by higher level functions such as plot.default (after plot.new). ",
         "name" : "plot.window"
      },
      {
         "aliases" : "",
         "title" : "Basic Internal Plot Function",
         "package" : "graphics",
         "desc" : " This is the internal function that does the basic plotting of points and lines. Usually, one should rather use the higher level functions instead and refer to their help pages for explanation of the arguments. ",
         "name" : "plot.xy"
      },
      {
         "title" : "Plot Histograms",
         "aliases" : "lines.histogram",
         "name" : "plot.histogram",
         "desc" : " These are methods for objects of class \"histogram\", typically produced by hist. ",
         "package" : "graphics"
      },
      {
         "package" : "graphics",
         "desc" : " points is a generic function to draw a sequence of points at the specified coordinates. The specified character(s) are plotted, centered at the coordinates. ",
         "name" : "points",
         "aliases" : "points.default:pch",
         "title" : "Add Points to a Plot"
      },
      {
         "package" : "graphics",
         "name" : "polygon",
         "desc" : " polygon draws the polygons whose vertices are given in x and y. ",
         "aliases" : "",
         "title" : "Polygon Drawing"
      },
      {
         "package" : "graphics",
         "name" : "polypath",
         "desc" : " path draws a path whose vertices are given in x and y. ",
         "aliases" : "",
         "title" : "Path Drawing"
      },
      {
         "aliases" : "",
         "title" : "Draw One or More Raster Images",
         "package" : "graphics",
         "desc" : " rasterImage draws a raster image at the given locations and sizes. ",
         "name" : "rasterImage"
      },
      {
         "package" : "graphics",
         "name" : "rect",
         "desc" : " rect draws a rectangle (or sequence of rectangles) with the given coordinates, fill and border colors. ",
         "aliases" : "",
         "title" : "Draw One or More Rectangles"
      },
      {
         "title" : "Add a Rug to a Plot",
         "aliases" : "",
         "desc" : " Adds a rug representation (1-d plot) of the data to the plot. ",
         "name" : "rug",
         "package" : "graphics"
      },
      {
         "title" : "Creating and Controlling Multiple Screens on a Single Device",
         "aliases" : "split.screen:erase.screen:close.screen",
         "name" : "screen",
         "desc" : " split.screen defines a number of regions within the current device which can, to some extent, be treated as separate graphics devices. It is useful for generating multiple plots on a single device. Screens can themselves be split, allowing for quite complex arrangements of plots. screen is used to select which screen to draw in. erase.screen is used to clear a single screen, which it does by filling with the background colour. close.screen removes the specified screen definition(s). ",
         "package" : "graphics"
      },
      {
         "desc" : " Draw line segments between pairs of points. ",
         "name" : "segments",
         "package" : "graphics",
         "title" : "Add Line Segments to a Plot",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Scatterplots with Smoothed Densities Color Representation",
         "package" : "graphics",
         "name" : "smoothScatter",
         "desc" : "smoothScatter produces a smoothed color density representation of the scatterplot, obtained through a kernel density estimate. densCols produces a vector containing colors which encode the local densities at each point in a scatterplot. "
      },
      {
         "aliases" : "spineplot.default:spineplot.formula",
         "title" : "Spine Plots and Spinograms",
         "package" : "graphics",
         "name" : "spineplot",
         "desc" : " Spine plots are a special cases of mosaic plots, and can be seen as a generalization of stacked (or highlighted) bar plots. Analogously, spinograms are an extension of histograms. "
      },
      {
         "package" : "graphics",
         "name" : "stars",
         "desc" : " Draw star plots or segment diagrams of a multivariate data set. With one single location, also draws spider (or radar) plots. ",
         "aliases" : "",
         "title" : "Star (Spider/Radar) Plots and Segment Diagrams"
      },
      {
         "aliases" : "",
         "title" : "Stem-and-Leaf Plots",
         "package" : "graphics",
         "name" : "stem",
         "desc" : " stem produces a stem-and-leaf plot of the values in x. The parameter scale can be used to expand the scale of the plot. A value of scale = 2 will cause the plot to be roughly twice as long as the default. "
      },
      {
         "aliases" : "stripchart.default:stripchart.formula",
         "title" : "1-D Scatter Plots",
         "package" : "graphics",
         "name" : "stripchart",
         "desc" : " stripchart produces one dimensional scatter plots (or dot plots) of the given data. These plots are a good alternative to boxplots when sample sizes are small. "
      },
      {
         "name" : "strwidth",
         "desc" : " These functions compute the width or height, respectively, of the given strings or mathematical expressions s[i] on the current plotting device in user coordinates, inches or as fraction of the figure width par(\"fin\"). ",
         "package" : "graphics",
         "title" : "Plotting Dimensions of Character Strings and Math Expressions",
         "aliases" : "strheight"
      },
      {
         "title" : "Produce a Sunflower Scatter Plot",
         "aliases" : "sunflowerplot.default:sunflowerplot.formula",
         "desc" : " Multiple points are plotted as sunflowers with multiple leaves (petals) such that overplotting is visualized instead of accidental and invisible. ",
         "name" : "sunflowerplot",
         "package" : "graphics"
      },
      {
         "name" : "symbols",
         "desc" : " This function draws symbols on a plot. One of six symbols; circles, squares, rectangles, stars, thermometers, and boxplots, can be plotted at a specified set of x and y coordinates. Specific aspects of the symbols, such as relative size, can be customized by additional parameters. ",
         "package" : "graphics",
         "title" : "Draw Symbols (Circles, Squares, Stars, Thermometers, Boxplots)",
         "aliases" : ""
      },
      {
         "name" : "text",
         "desc" : " text draws the strings given in the vector labels at the coordinates given by x and y. y may be missing since xy.coords(x, y) is used for construction of the coordinates. ",
         "package" : "graphics",
         "title" : "Add Text to a Plot",
         "aliases" : "text.default"
      },
      {
         "title" : "Plot Annotation",
         "aliases" : "",
         "name" : "title",
         "desc" : " This function can be used to add labels to a plot. Its first four principal arguments can also be used as arguments in most high-level plotting functions. They must be of type character or expression. In the latter case, quite a bit of mathematical notation is available such as sub- and superscripts, greek letters, fractions, etc: see plotmath ",
         "package" : "graphics"
      },
      {
         "aliases" : "yinch:xyinch",
         "title" : "Graphical Units",
         "package" : "graphics",
         "desc" : " xinch and yinch convert the specified number of inches given as their arguments into the correct units for plotting with graphics functions. Usually, this only makes sense when normal coordinates are used, i.e., no log scale (see the log argument to par). xyinch does the same for a pair of numbers xy, simultaneously. ",
         "name" : "units"
      },
      {
         "title" : "Draw an X-spline",
         "aliases" : "",
         "desc" : " Draw an X-spline, a curve drawn relative to control points. ",
         "name" : "xspline",
         "package" : "graphics"
      },
      {
         "desc" : " Generic function to add a suitable axis to the current plot. ",
         "name" : "Axis",
         "package" : "graphics",
         "title" : "Generic Function to Add an Axis to a Plot",
         "aliases" : ""
      },
      {
         "name" : "adjustcolor",
         "desc" : " Adjust or modify a vector of colors by turning knobs on one or more coordinates in (r,g,b,\\\\alpha) space, typically by up or down scaling them. ",
         "package" : "grDevices",
         "title" : "Adjust Colors in One or More Directions Conveniently.",
         "aliases" : ""
      },
      {
         "package" : "grDevices",
         "name" : "as.graphicsAnnot",
         "desc" : " Coerce an object into a form suitable for graphics annotation. ",
         "aliases" : "",
         "title" : "Coerce an Object for Graphics Annotation"
      },
      {
         "aliases" : "as.raster:as.raster.logical:as.raster.numeric:as.raster.character:as.raster.matrix:as.raster.array",
         "title" : "Create a Raster Object",
         "package" : "grDevices",
         "name" : "as.raster",
         "desc" : " Functions to create a raster object (representing a bitmap image) and coerce other objects to a raster object. "
      },
      {
         "title" : "Compute Pretty Axis Tick Scales",
         "aliases" : ".axisPars",
         "name" : "axisTicks",
         "desc" : " Compute pretty axis scales and tick mark locations, the same way as traditional graphics do it. This is interesting particularly for log scale axes. ",
         "package" : "grDevices"
      },
      {
         "title" : "Box Plot Statistics",
         "aliases" : "",
         "desc" : " This function is typically called by another function to gather the statistics necessary for producing box plots, but may be invoked separately. ",
         "name" : "boxplot.stats",
         "package" : "grDevices"
      },
      {
         "name" : "cairo",
         "desc" : " Graphics devices for SVG, PDF and PostScript graphics files using the cairo graphics API. ",
         "package" : "grDevices",
         "title" : "Cairographics-based SVG, PDF and PostScript Graphics Devices",
         "aliases" : "cairo_pdf:cairo_ps"
      },
      {
         "title" : "Set Options with Consistency Checks",
         "aliases" : "",
         "name" : "check.options",
         "desc" : " Utility function for setting options with some consistency checks. The attributes of the new settings in new are checked for consistency with the model (often default) list in name.opt. ",
         "package" : "grDevices"
      },
      {
         "title" : "Compute Convex Hull of a Set of Points",
         "aliases" : "",
         "desc" : " Computes the subset of points which lie on the convex hull of the set of points specified. ",
         "name" : "chull",
         "package" : "grDevices"
      },
      {
         "desc" : " Translates from inches to cm (centimeters). ",
         "name" : "cm",
         "package" : "grDevices",
         "title" : "Unit Transformation",
         "aliases" : ""
      },
      {
         "package" : "grDevices",
         "desc" : " color to RGB (red/green/blue) conversion. ",
         "name" : "col2rgb",
         "aliases" : "",
         "title" : "Color to RGB Conversion"
      },
      {
         "name" : "colorRamp",
         "desc" : " These functions return functions that interpolate a set of given colors to create new color palettes (like topo.colors) and color ramps, functions that map the interval [0, 1] to colors (like grey). ",
         "package" : "grDevices",
         "title" : "Color interpolation",
         "aliases" : "colorRampPalette"
      },
      {
         "desc" : " Returns the built-in color names which knows about. ",
         "name" : "colors",
         "package" : "grDevices",
         "title" : "Color Names",
         "aliases" : "colours"
      },
      {
         "package" : "grDevices",
         "name" : "contourLines",
         "desc" : " Calculate contour lines for a given set of data. ",
         "aliases" : "",
         "title" : "Calculate Contour Lines"
      },
      {
         "title" : "Convert between Colour Spaces",
         "aliases" : "colorspaces",
         "name" : "convertColor",
         "desc" : " Convert colours between their representations in standard colour spaces. ",
         "package" : "grDevices"
      },
      {
         "title" : "Colors for Smooth Density Plots",
         "aliases" : "blues9",
         "name" : "densCols",
         "desc" : " densCols produces a vector containing colors which encode the local densities at each point in a scatterplot. ",
         "package" : "grDevices"
      },
      {
         "title" : "Query Capabilities of the Current Graphics Device",
         "aliases" : "",
         "name" : "dev.capabilities",
         "desc" : " Query the capabilities of the current graphics device. ",
         "package" : "grDevices"
      },
      {
         "name" : "dev.capture",
         "desc" : " dev.capture captures the current contents of a graphics device as a raster (bitmap) image. ",
         "package" : "grDevices",
         "title" : " Capture device output as a raster image ",
         "aliases" : ""
      },
      {
         "title" : " Hold or Flush Output on an On-Screen Graphics Device. ",
         "aliases" : "dev.flush",
         "desc" : " This gives a way to hold/flush output on certain on-screen devices, and is ignored by other devices. ",
         "name" : "dev.flush",
         "package" : "grDevices"
      },
      {
         "desc" : " Test if the current graphics device (or that which would be opened) is interactive. ",
         "name" : "dev.interactive",
         "package" : "grDevices",
         "title" : "Is the Current Graphics Device Interactive?",
         "aliases" : "deviceIsInteractive"
      },
      {
         "package" : "grDevices",
         "name" : "dev",
         "desc" : " These functions provide control over multiple graphics devices. ",
         "aliases" : "dev.list:dev.next:dev.prev:dev.off:dev.set:dev.new:graphics.off",
         "title" : "Control Multiple Devices"
      },
      {
         "package" : "grDevices",
         "desc" : " Find the dimensions of the device surface of the current device. ",
         "name" : "dev.size",
         "aliases" : "",
         "title" : " Find Size of Device Surface "
      },
      {
         "package" : "grDevices",
         "name" : "dev2",
         "desc" : " dev.copy copies the graphics contents of the current device to the device specified by which or to a new device which has been created by the function specified by device (it is an error to specify both which and device). (If recording is off on the current device, there are no contents to copy: this will result in no plot or an empty plot.) The device copied to becomes the current device. dev.print copies the graphics contents of the current device to a new device which has been created by the function specified by device and then shuts the new device. dev.copy2eps is similar to dev.print but produces an EPSF output file in portrait orientation (horizontal = FALSE). dev.copy2pdf is the analogue for PDF output. dev.control allows the user to control the recording of graphics operations in a device. If displaylist is \"inhibit\" (\"enable\") then recording is turned off (on). It is only safe to change this at the beginning of a plot (just before or just after a new page). Initially recording is on for screen devices, and off for print devices. ",
         "aliases" : "dev.print:dev.copy2eps:dev.copy2pdf:dev.control",
         "title" : "Copy Graphics Between Multiple Devices"
      },
      {
         "title" : "Graphics Device for Bitmap Files via Ghostscript",
         "aliases" : "bitmap",
         "desc" : " bitmap generates a graphics file. dev2bitmap copies the current graphics device to a file in a graphics format. ",
         "name" : "dev2bitmap",
         "package" : "grDevices"
      },
      {
         "package" : "grDevices",
         "desc" : " This function can be used to control (for the current device) whether the user is prompted before starting a new page of output. ",
         "name" : "devAskNewPage",
         "aliases" : "",
         "title" : " Prompt before New Page "
      },
      {
         "aliases" : "device",
         "title" : "List of Graphical Devices",
         "package" : "grDevices",
         "desc" : "The following graphics devices are currently available: windows windows The graphics device for Windows (on screen, to printer and to Windows metafile). pdf Write PDF graphics commands to a file postscript Writes PostScript graphics commands to a file xfig Device for XFIG graphics file format bitmap bitmap pseudo-device via Ghostscript (if available). pictex Writes TeX/PicTeX graphics commands to a file (of historical interest only) The following devices will be functional if was compiled to use them (they exist but will return with a warning on other systems): unix X11 The graphics device for the X11 windowing system cairo_pdf, cairo_ps PDF and PostScript devices based on cairo graphics. svg SVG device based on cairo graphics. png PNG bitmap device jpeg JPEG bitmap device bmp BMP bitmap device tiff TIFF bitmap device unix quartz The graphics device for the OS X native Quartz 2d graphics system. (This is only functional on OS X where it can be used from the R.app GUI and from the command line: but it will display on the local screen even for a remote session.) ",
         "name" : "Devices"
      },
      {
         "desc" : " Runs Ghostscript to process a PDF or PostScript file and embed all fonts in the file. ",
         "name" : "embedFonts",
         "package" : "grDevices",
         "title" : "Embed Fonts in PostScript and PDF",
         "aliases" : ""
      },
      {
         "desc" : " Extends a numerical range by a small percentage, i.e., fraction, on both sides. ",
         "name" : "extendrange",
         "package" : "grDevices",
         "title" : "Extend a Numerical Range by a Small Percentage",
         "aliases" : ""
      },
      {
         "aliases" : "setGraphicsEventHandlers:getGraphicsEventEnv:setGraphicsEventEnv",
         "title" : "Wait for a mouse or keyboard event from a graphics window",
         "package" : "grDevices",
         "desc" : " This function waits for input from a graphics window in the form of a mouse or keyboard event. ",
         "name" : "getGraphicsEvent"
      },
      {
         "aliases" : "grey.colors",
         "title" : "Gray Color Palette",
         "package" : "grDevices",
         "name" : "gray.colors",
         "desc" : " Create a vector of n gamma-corrected gray colors. "
      },
      {
         "title" : "Gray Level Specification",
         "aliases" : "grey",
         "name" : "gray",
         "desc" : " Create a vector of colors from a vector of gray levels. ",
         "package" : "grDevices"
      },
      {
         "name" : "grDevices-package",
         "desc" : " Graphics devices and support for base and grid graphics ",
         "package" : "grDevices",
         "title" : " The R Graphics Devices and Support for Colours and Fonts ",
         "aliases" : "grDevices"
      },
      {
         "aliases" : "",
         "title" : "Report Versions of Graphics Software",
         "package" : "grDevices",
         "desc" : " Report versions of third-party graphics software. ",
         "name" : "grSoftVersion"
      },
      {
         "package" : "grDevices",
         "desc" : " Create a vector of colors from vectors specifying hue, chroma and luminance. ",
         "name" : "hcl",
         "aliases" : "",
         "title" : "HCL Color Specification"
      },
      {
         "package" : "grDevices",
         "desc" : " If the family graphical parameter (see par) has been set to one of the Hershey fonts (see Details) Hershey vector fonts are used to render text. When using the text and contour functions Hershey fonts may be selected via the vfont argument, which is a character vector of length 2 (see Details for valid values). This allows Cyrillic to be selected, which is not available via the font families. ",
         "name" : "Hershey",
         "aliases" : "",
         "title" : "Hershey Vector Fonts in R"
      },
      {
         "aliases" : "",
         "title" : "HSV Color Specification",
         "package" : "grDevices",
         "name" : "hsv",
         "desc" : " Create a vector of colors from vectors specifying hue, saturation and value. "
      },
      {
         "package" : "grDevices",
         "name" : "Japanese",
         "desc" : " The implementation of Hershey vector fonts provides a large number of Japanese characters (Hiragana, Katakana, and Kanji). ",
         "aliases" : "",
         "title" : "Japanese characters in R"
      },
      {
         "title" : "Create colour spaces ",
         "aliases" : "colorConverter",
         "name" : "make.rgb",
         "desc" : " These functions specify colour spaces for use in convertColor. ",
         "package" : "grDevices"
      },
      {
         "aliases" : "",
         "title" : "Compute Default mfrow From Number of Plots",
         "package" : "grDevices",
         "name" : "n2mfrow",
         "desc" : " Easy setup for plotting multiple figures (in a rectangular layout) on one page. This computes a sensible default for par(mfrow). "
      },
      {
         "package" : "grDevices",
         "desc" : " Compute the number of classes for a histogram. ",
         "name" : "nclass",
         "aliases" : "nclass.scott:nclass.FD",
         "title" : "Compute the Number of Classes for a Histogram"
      },
      {
         "package" : "grDevices",
         "name" : "palette",
         "desc" : " View or manipulate the color palette which is used when a col= has a numeric index. ",
         "aliases" : "",
         "title" : "Set or View the Graphics Palette"
      },
      {
         "desc" : " Create a vector of n contiguous colors. ",
         "name" : "Palettes",
         "package" : "grDevices",
         "title" : "Color Palettes",
         "aliases" : "heat.colors:terrain.colors:topo.colors:cm.colors"
      },
      {
         "title" : "Auxiliary Function to Set/View Defaults for Arguments of pdf",
         "aliases" : "",
         "desc" : " The auxiliary function pdf.options can be used to set or view (if called without arguments) the default values for some of the arguments to pdf. pdf.options needs to be called before calling pdf, and the default values it sets can be overridden by supplying arguments to pdf. ",
         "name" : "pdf.options",
         "package" : "grDevices"
      },
      {
         "title" : "PDF Graphics Device",
         "aliases" : "",
         "name" : "pdf",
         "desc" : " pdf starts the graphics device driver for producing PDF graphics. ",
         "package" : "grDevices"
      },
      {
         "name" : "pictex",
         "desc" : " This function produces simple graphics suitable for inclusion in TeX and LaTeX documents. It dates from the very early days of and is for historical interest only. ",
         "package" : "grDevices",
         "title" : "A PicTeX Graphics Driver",
         "aliases" : ""
      },
      {
         "name" : "plotmath",
         "desc" : " If the text argument to one of the text-drawing functions (text, mtext, axis, legend) in is an expression, the argument is interpreted as a mathematical expression and the output will be formatted according to TeX-like rules. Expressions can also be used for titles, subtitles and x- and y-axis labels (but not for axis labels on persp plots). In most cases other language objects (names and calls, including formulas) are coerced to expressions and so can also be used. ",
         "package" : "grDevices",
         "title" : "Mathematical Annotation in R",
         "aliases" : "symbol:plain:bold:italic:bolditalic:hat:bar:dot:ring:widehat:widetilde:displaystyle:textstyle:scriptstyle:scriptscriptstyle:underline:phantom:over:frac:atop:integral:inf:sup:group:bgroup"
      },
      {
         "name" : "postscript",
         "desc" : " postscript starts the graphics device driver for producing PostScript graphics. ",
         "package" : "grDevices",
         "title" : "PostScript Graphics",
         "aliases" : ".ps.prolog"
      },
      {
         "name" : "postscriptFonts",
         "desc" : " These functions handle the translation of a graphics font family name to a PostScript or PDF font description, used by the postscript or pdf graphics devices. ",
         "package" : "grDevices",
         "title" : "PostScript and PDF Font Families",
         "aliases" : "pdfFonts"
      },
      {
         "aliases" : "pretty.POSIXt",
         "title" : "Pretty Breakpoints for Date-Time Classes",
         "package" : "grDevices",
         "name" : "pretty.Date",
         "desc" : " Compute a sequence of about n+1 equally spaced nice values which cover the range of the values in x. "
      },
      {
         "title" : "Auxiliary Function to Set/View Defaults for Arguments of postscript",
         "aliases" : "setEPS:setPS",
         "desc" : " The auxiliary function ps.options can be used to set or view (if called without arguments) the default values for some of the arguments to postscript. ps.options needs to be called before calling postscript, and the default values it sets can be overridden by supplying arguments to postscript. ",
         "name" : "ps.options",
         "package" : "grDevices"
      },
      {
         "desc" : " Records arbitrary code on the graphics engine display list. Useful for encapsulating calculations with graphical output that depends on the calculations. Intended only for expert use. ",
         "name" : "recordGraphics",
         "package" : "grDevices",
         "title" : "Record Graphics Operations",
         "aliases" : ""
      },
      {
         "title" : "Record and Replay Plots",
         "aliases" : "recordPlot:print.recordedplot",
         "name" : "recordPlot",
         "desc" : " Functions to save the current plot in an variable, and to replay it. ",
         "package" : "grDevices"
      },
      {
         "name" : "rgb",
         "desc" : " This function creates colors corresponding to the given intensities (between 0 and max) of the red, green and blue primaries. The colour specification refers to the standard sRGB colorspace (IEC standard 61966). An alpha transparency value can also be specified (as an opacity, so 0 means fully transparent and max means opaque). If alpha is not specified, an opaque colour is generated. The names argument may be used to provide names for the colors. The values returned by these functions can be used with a col= specification in graphics functions or in par. ",
         "package" : "grDevices",
         "title" : "RGB Color Specification",
         "aliases" : ""
      },
      {
         "package" : "grDevices",
         "name" : "rgb2hsv",
         "desc" : " rgb2hsv transforms colors from RGB space (red/green/blue) into HSV space (hue/saturation/value). ",
         "aliases" : "",
         "title" : "RGB to HSV Conversion"
      },
      {
         "package" : "grDevices",
         "name" : "trans3d",
         "desc" : " Projection of 3-dimensional to 2-dimensional points using a 4x4 viewing transformation matrix. Mainly for adding to perspective plots such as persp. ",
         "aliases" : "",
         "title" : "3D to 2D Transformation for Perspective Plots"
      },
      {
         "aliases" : "CIDFont",
         "title" : "Type 1 and CID Fonts",
         "package" : "grDevices",
         "desc" : " These functions are used to define the translation of a graphics font family name to a Type 1 or CID font descriptions, used by both the postscript and pdf graphics devices. ",
         "name" : "Type1Font"
      },
      {
         "title" : "XFig Graphics Device",
         "aliases" : "",
         "name" : "xfig",
         "desc" : " xfig starts the graphics device driver for producing XFig (version 3.2) graphics. The auxiliary function ps.options can be used to set and view (if called without arguments) default values for the arguments to xfig and postscript. ",
         "package" : "grDevices"
      },
      {
         "aliases" : "",
         "title" : "Extracting Plotting Structures",
         "package" : "grDevices",
         "desc" : " xy.coords is used by many functions to obtain x and y coordinates for plotting. The use of this common mechanism across all relevant functions produces a measure of consistency. ",
         "name" : "xy.coords"
      },
      {
         "aliases" : "",
         "title" : "Multiplicities of (x,y) Points, e.g., for a Sunflower Plot",
         "package" : "grDevices",
         "name" : "xyTable",
         "desc" : " Given (x,y) points, determine their multiplicity -- checking for equality only up to some (crude kind of) noise. Note that this is special kind of 2D binning. "
      },
      {
         "package" : "grDevices",
         "name" : "xyz.coords",
         "desc" : " Utility for obtaining consistent x, y and z coordinates and labels for three dimensional (3D) plots. ",
         "aliases" : "",
         "title" : "Extracting Plotting Structures"
      },
      {
         "name" : "png",
         "desc" : " Graphics devices for BMP, JPEG, PNG and TIFF format bitmap files. ",
         "package" : "man",
         "title" : "BMP, JPEG, PNG and TIFF graphics devices",
         "aliases" : "jpeg:tiff:bmp"
      },
      {
         "title" : "OS X Quartz Device",
         "aliases" : "quartz.options:quartz.save",
         "desc" : " quartz starts a graphics device driver for the OS X System. It supports plotting both to the screen (the default) and to various graphics file formats. ",
         "name" : "quartz",
         "package" : "man"
      },
      {
         "aliases" : "quartzFonts",
         "title" : "quartz Fonts",
         "package" : "man",
         "desc" : " These functions handle the translation of a device-independent R graphics font family name to a quartz font description. ",
         "name" : "quartzFonts"
      },
      {
         "title" : "Save Cairo X11 Plot to File",
         "aliases" : "",
         "name" : "savePlot",
         "desc" : " Save the current page of a cairo X11() device to a file. ",
         "package" : "man"
      },
      {
         "title" : "X Window System Graphics",
         "aliases" : "X11:X11.options",
         "name" : "x11",
         "desc" : " X11 starts a graphics device driver for the X Window System (version 11). This can only be done on machines/accounts that have access to an X server. x11 is recognized as a synonym for X11. The function is a wrapper for two devices, one based on Xlib (http://en.wikipedia.org/wiki/Xlib) and one using cairographics (http://www.cairographics.org). ",
         "package" : "man"
      },
      {
         "desc" : " These functions handle the translation of a device-independent R graphics font family name to an X11 font description. ",
         "name" : "X11Fonts",
         "package" : "man",
         "title" : "X11 Fonts",
         "aliases" : "X11Fonts"
      },
      {
         "package" : "man",
         "name" : "bringToTop",
         "desc" : " bringToTop brings the specified screen device's window to the front of the window stack (and gives it focus). With first argument -1 it brings the console to the top. If stay = TRUE, the window is designated as a topmost window, i.e.\\\\ifelse{latex}{\\\\out{~}}{ }latex~ it will stay on top of any regular window. stay may only be used when Rgui is run in SDI mode. This corresponds to the Stay on top popup menu item in Rgui. ",
         "aliases" : "stayOnTop",
         "title" : "Assign Focus to a Window"
      },
      {
         "title" : "Manipulate a Window",
         "aliases" : "",
         "name" : "msgWindow",
         "desc" : " msgWindow sends a message to manipulate the specified screen device's window. With argument which = -1 it applies to the GUI console (which only accepts the first three actions). ",
         "package" : "man"
      },
      {
         "package" : "man",
         "name" : "png",
         "desc" : " Graphics devices for BMP, JPEG, PNG and TIFF format bitmap files. ",
         "aliases" : "jpeg:tiff:bmp",
         "title" : "BMP, JPEG, PNG and TIFF graphics devices"
      },
      {
         "aliases" : "",
         "title" : "Save Windows Plot to a File",
         "package" : "man",
         "desc" : " Saves the current plot on a windows device to a file. ",
         "name" : "savePlot"
      },
      {
         "package" : "man",
         "desc" : " The auxiliary function windows.options can be used to set or view (if called without arguments) the default values for the arguments of windows. windows.options needs to be called before calling windows, and the default values it sets can be overridden by supplying arguments to windows. ",
         "name" : "windows.options",
         "aliases" : "",
         "title" : "Auxiliary Function to Set/View Defaults for Arguments of windows()"
      },
      {
         "aliases" : "win.graph:win.metafile:win.print:x11:X11:print.SavedPlots:[.SavedPlots",
         "title" : "Windows Graphics Devices",
         "package" : "man",
         "name" : "windows",
         "desc" : " A graphics device is opened. For windows, win.graph, x11 and X11 this is a window on the current Windows display: the multiple names are for compatibility with other systems. win.metafile prints to a file and win.print to the Windows print system. "
      },
      {
         "title" : "Windows Fonts",
         "aliases" : "windowsFonts",
         "desc" : " These functions handle the translation of a device-independent R graphics font family name to a windows font description. ",
         "name" : "windowsFonts",
         "package" : "man"
      },
      {
         "package" : "grid",
         "desc" : " This function converts a unit object into absolute units. Absolute units are unaffected, but non-absolute units are converted into \"null\" units. ",
         "name" : "absolute.size",
         "aliases" : "",
         "title" : " Absolute Size of a Grob "
      },
      {
         "package" : "grid",
         "name" : "arrow",
         "desc" : " Produces a description of what arrows to add to a line. The result can be passed to a function that draws a line, e.g., grid.lines. ",
         "aliases" : "",
         "title" : " Describe arrows to add to a line. "
      },
      {
         "aliases" : "",
         "title" : " Calculate Metric Information for Text ",
         "package" : "grid",
         "name" : "calcStringMetric",
         "desc" : " This function returns the ascent, descent, and width metric information for a character or expression vector. "
      },
      {
         "desc" : " current.viewport() returns the viewport that Grid is going to draw into. current.parent returns the parent of the current viewport. current.vpTree returns the entire Grid viewport tree. current.vpPath returns the viewport path to the current viewport. current.transform returns the transformation matrix for the current viewport. current.rotation returns the (total) rotation for the current viewport. ",
         "name" : "Querying the Viewport Tree",
         "package" : "grid",
         "title" : "Get the Current Grid Viewport (Tree)",
         "aliases" : "current.parent:current.vpTree:current.vpPath:current.transform:current.rotation"
      },
      {
         "name" : "dataViewport",
         "desc" : " This is a convenience function for producing a viewport with x- and/or y-scales based on numeric values passed to the function. ",
         "package" : "grid",
         "title" : " Create a Viewport with Scales based on Data ",
         "aliases" : ""
      },
      {
         "package" : "grid",
         "name" : "depth",
         "desc" : " Determine the number of levels in a viewport stack or tree, in a viewport path, or in a grob path. ",
         "aliases" : "depth.viewport:depth.path",
         "title" : " Determine the number of levels in an object. "
      },
      {
         "name" : "drawDetails",
         "desc" : " These generic hook functions are called whenever a grid grob is drawn. They provide an opportunity for customising the drawing of a new class derived from grob (or gTree). ",
         "package" : "grid",
         "title" : " Customising grid Drawing ",
         "aliases" : "preDrawDetails:postDrawDetails"
      },
      {
         "desc" : " This generic hook function is called whenever a grid grob is edited via grid.edit or editGrob. This provides an opportunity for customising the editing of a new class derived from grob (or gTree). ",
         "name" : "editDetails",
         "package" : "grid",
         "title" : " Customising grid Editing ",
         "aliases" : ""
      },
      {
         "name" : "explode",
         "desc" : " Explode a viewport path or grob path into its components. ",
         "package" : "grid",
         "title" : " Explode a path into its components. ",
         "aliases" : "explode.character:explode.path"
      },
      {
         "package" : "grid",
         "desc" : " The functions gEdit and gEditList create objects representing an edit operation (essentially a list of arguments to editGrob). The functions applyEdit and applyEdits apply one or more edit operations to a graphical object. These functions are most useful for developers creating new graphical functions and objects. ",
         "name" : "gEdit",
         "aliases" : "gEditList:applyEdit:applyEdits",
         "title" : " Create and Apply Edit Objects "
      },
      {
         "title" : " List the names of grobs on the display list ",
         "aliases" : "",
         "name" : "getNames",
         "desc" : " Returns a character vector containing the names of all top-level grobs on the display list. ",
         "package" : "grid"
      },
      {
         "package" : "grid",
         "desc" : " gpar() should be used to create a set of graphical parameter settings. It returns an object of class \"gpar\". This is basically a list of name-value pairs. get.gpar() can be used to query the current graphical parameter settings. ",
         "name" : "gpar",
         "aliases" : "get.gpar",
         "title" : "Handling Grid Graphical Parameters"
      },
      {
         "title" : " Concatenate Grob Names ",
         "aliases" : "",
         "desc" : " This function can be used to generate a grob path for use in grid.edit and friends. A grob path is a list of nested grob names. ",
         "name" : "gPath",
         "package" : "grid"
      },
      {
         "desc" : " The functions or variables listed here are no longer part of grid. ",
         "name" : "grid-defunct",
         "package" : "grid",
         "title" : "Defunct Functions in Package grid",
         "aliases" : "grid.grob:grid.arrows:arrowsGrob:grid.convert:grid.convertX:grid.convertY:grid.convertWidth:grid.convertHeight:grid.collection:push.viewport:pop.viewport:viewport.transform:draw.details:convertNative"
      },
      {
         "title" : "Internal Grid Functions",
         "aliases" : "grid.panel:grid.strip:is.unit:layoutRegion:viewport.layout:layout.heights:layout.widths:layout.torture",
         "desc" : " Internal Grid functions ",
         "name" : "grid-internal",
         "package" : "grid"
      },
      {
         "aliases" : "",
         "title" : " The Grid Graphics Package ",
         "package" : "grid",
         "desc" : " A rewrite of the graphics layout capabilities, plus some support for interaction. ",
         "name" : "grid-package"
      },
      {
         "title" : "Add a Grid Graphical Object",
         "aliases" : "addGrob:setChildren",
         "desc" : " Add a grob to a gTree or a descendant of a gTree. ",
         "name" : "grid.add",
         "package" : "grid"
      },
      {
         "name" : "grid.bezier",
         "desc" : " These functions create and draw Bezier Curves (a curve drawn relative to 4 control points). ",
         "package" : "grid",
         "title" : " Draw a Bezier Curve ",
         "aliases" : "bezierGrob"
      },
      {
         "aliases" : "",
         "title" : " Capture a raster image ",
         "package" : "grid",
         "desc" : " Capture the current contents of a graphics device as a raster (bitmap) image. ",
         "name" : "grid.cap"
      },
      {
         "title" : " Draw a Circle ",
         "aliases" : "circleGrob",
         "desc" : " Functions to create and draw a circle. ",
         "name" : "grid.circle",
         "package" : "grid"
      },
      {
         "title" : "Set the Clipping Region",
         "aliases" : "clipGrob",
         "name" : "grid.clip",
         "desc" : " These functions set the clipping region within the current viewport without altering the current coordinate system. ",
         "package" : "grid"
      },
      {
         "aliases" : "convertX:convertY:convertWidth:convertHeight",
         "title" : " Convert Between Different grid Coordinate Systems ",
         "package" : "grid",
         "name" : "grid.convert",
         "desc" : " These functions take a unit object and convert it to an equivalent unit object in a different coordinate system. "
      },
      {
         "desc" : " This function is redundant and will disappear in future versions. ",
         "name" : "grid.copy",
         "package" : "grid",
         "title" : "Make a Copy of a Grid Graphical Object",
         "aliases" : ""
      },
      {
         "title" : " Draw a Curve Between Locations ",
         "aliases" : "curveGrob:arcCurvature",
         "name" : "grid.curve",
         "desc" : " These functions create and draw a curve from one location to another. ",
         "package" : "grid"
      },
      {
         "desc" : " Evaluates an expression that includes both calculations and generating a grob that depends on the calculations so that both the calculations and the grob generation will be rerun when the scene is redrawn (e.g., device resize or editing). Intended only for expert use. ",
         "name" : "grid.delay",
         "package" : "grid",
         "title" : " Encapsulate calculations and generating a grob ",
         "aliases" : "delayGrob"
      },
      {
         "title" : "Control the Grid Display List",
         "aliases" : "engine.display.list",
         "name" : "grid.display.list",
         "desc" : " Turn the Grid display list on or off. ",
         "package" : "grid"
      },
      {
         "package" : "grid",
         "name" : "grid.DLapply",
         "desc" : " Call a function on each element of the current display list. ",
         "aliases" : "",
         "title" : " Modify the Grid Display List "
      },
      {
         "name" : "grid.draw",
         "desc" : " Produces graphical output from a graphical object. ",
         "package" : "grid",
         "title" : "Draw a grid grob",
         "aliases" : ""
      },
      {
         "name" : "grid.edit",
         "desc" : " Changes the value of one of the slots of a grob and redraws the grob. ",
         "package" : "grid",
         "title" : "Edit the Description of a Grid Graphical Object",
         "aliases" : "grid.gedit:editGrob"
      },
      {
         "package" : "grid",
         "desc" : " Some grobs only generate their content to draw at drawing time; this function replaces such grobs with their at-drawing-time content. ",
         "name" : "grid.force",
         "aliases" : "grid.force.default:grid.force.gPath:grid.force.grob:forceGrob:grid.revert:grid.revert.gPath:grid.revert.grob",
         "title" : " Force a grob into its components "
      },
      {
         "title" : " Create a Frame for Packing Objects ",
         "aliases" : "frameGrob",
         "desc" : " These functions, together with grid.pack, grid.place, packGrob, and placeGrob are part of a GUI-builder-like interface to constructing graphical images. The idea is that you create a frame with this function then use grid.pack or whatever to pack/place objects into the frame. ",
         "name" : "grid.frame",
         "package" : "grid"
      },
      {
         "aliases" : "functionGrob:grid.abline",
         "title" : "Draw a curve representing a function",
         "package" : "grid",
         "name" : "grid.function",
         "desc" : " Draw a curve representing a function. "
      },
      {
         "aliases" : "grid.gget:getGrob",
         "title" : "Get a Grid Graphical Object",
         "package" : "grid",
         "name" : "grid.get",
         "desc" : " Retrieve a grob or a descendant of a grob. "
      },
      {
         "aliases" : "grid.grabExpr",
         "title" : " Grab the current grid output ",
         "package" : "grid",
         "name" : "grid.grab",
         "desc" : " Creates a gTree object from the current grid display list or from a scene generated by user-specified code. "
      },
      {
         "aliases" : "",
         "title" : " Search for grobs ",
         "package" : "grid",
         "name" : "grid.grep",
         "desc" : " Given a gPath, find all matching grobs on the display list or within a given grob. "
      },
      {
         "name" : "grid.grill",
         "desc" : " This function draws a grill within a Grid viewport. ",
         "package" : "grid",
         "title" : "Draw a Grill",
         "aliases" : ""
      },
      {
         "desc" : " Creating grid graphical objects, short (grobs). grob() and gTree() are the basic creators, grobTree() and gList() take several grobs to build a new one. ",
         "name" : "grid.grob",
         "package" : "grid",
         "title" : "Create Grid Graphical Objects, aka \"Grob\"s",
         "aliases" : "gTree:grobTree:childNames:gList:is.grob"
      },
      {
         "desc" : " This function returns a Grid layout, which describes a subdivision of a rectangular region. ",
         "name" : "grid.layout",
         "package" : "grid",
         "title" : "Create a Grid Layout",
         "aliases" : ""
      },
      {
         "package" : "grid",
         "desc" : " These functions create and draw a series of lines. ",
         "name" : "grid.lines",
         "aliases" : "linesGrob:grid.polyline:polylineGrob",
         "title" : "Draw Lines in a Grid Viewport"
      },
      {
         "name" : "grid.locator",
         "desc" : " Allows the user to click the mouse once within the current graphics device and returns the location of the mouse click within the current viewport, in the specified coordinate system. ",
         "package" : "grid",
         "title" : " Capture a Mouse Click ",
         "aliases" : ""
      },
      {
         "desc" : " Return a listing of the names of grobs or viewports. This is a generic function with methods for grobs (including gTrees) and viewports (including vpTrees). ",
         "name" : "grid.ls",
         "package" : "grid",
         "title" : " List the names of grobs or viewports ",
         "aliases" : "nestedListing:pathListing:grobPathListing"
      },
      {
         "package" : "grid",
         "desc" : " Grid has the notion of a current location. These functions sets that location. ",
         "name" : "grid.move.to",
         "aliases" : "grid.line.to:moveToGrob:lineToGrob",
         "title" : " Move or Draw to a Specified Position "
      },
      {
         "aliases" : "",
         "title" : "Move to a New Page on a Grid Device",
         "package" : "grid",
         "desc" : " This function erases the current device or moves to a new page. ",
         "name" : "grid.newpage"
      },
      {
         "desc" : " These functions create a NULL graphical object, which has zero width, zero height, and draw nothing. It can be used as a place-holder or as an invisible reference point for other drawing. ",
         "name" : "grid.null",
         "package" : "grid",
         "title" : " Null Graphical Object ",
         "aliases" : "nullGrob"
      },
      {
         "aliases" : "packGrob",
         "title" : " Pack an Object within a Frame ",
         "package" : "grid",
         "desc" : " these functions, together with grid.frame and frameGrob are part of a GUI-builder-like interface to constructing graphical images. The idea is that you create a frame with grid.frame or frameGrob then use these functions to pack objects into the frame. ",
         "name" : "grid.pack"
      },
      {
         "name" : "grid.path",
         "desc" : " These functions create and draw a path. The final point will automatically be connected to the initial point. ",
         "package" : "grid",
         "title" : " Draw a Path ",
         "aliases" : "pathGrob"
      },
      {
         "aliases" : "placeGrob",
         "title" : " Place an Object within a Frame ",
         "package" : "grid",
         "name" : "grid.place",
         "desc" : " These functions provide a simpler (and faster) alternative to the grid.pack() and packGrob functions. They can be used to place objects within the existing rows and columns of a frame layout. They do not provide the ability to add new rows and columns nor do they affect the heights and widths of the rows and columns. "
      },
      {
         "package" : "grid",
         "name" : "grid.plot.and.legend",
         "desc" : " This function is just a wrapper for a simple demonstration of how a basic plot and legend can be drawn from scratch using grid. ",
         "aliases" : "",
         "title" : " A Simple Plot and Legend Demo "
      },
      {
         "package" : "grid",
         "name" : "grid.points",
         "desc" : " These functions create and draw data symbols. ",
         "aliases" : "pointsGrob",
         "title" : "Draw Data Symbols"
      },
      {
         "desc" : " These functions create and draw a polygon. The final point will automatically be connected to the initial point. ",
         "name" : "grid.polygon",
         "package" : "grid",
         "title" : " Draw a Polygon ",
         "aliases" : "polygonGrob"
      },
      {
         "desc" : " Produces a pretty set of breakpoints within the range given. ",
         "name" : "grid.pretty",
         "package" : "grid",
         "title" : " Generate a Sensible Set of Breakpoints ",
         "aliases" : ""
      },
      {
         "aliases" : "rasterGrob",
         "title" : " Render a raster object ",
         "package" : "grid",
         "desc" : " Render a raster object (bitmap image) at the given location, size, and orientation. ",
         "name" : "grid.raster"
      },
      {
         "aliases" : "",
         "title" : "Grid Graphics",
         "package" : "grid",
         "name" : "Grid",
         "desc" : " General information about the grid graphics package. "
      },
      {
         "aliases" : "recordGrob",
         "title" : " Encapsulate calculations and drawing ",
         "package" : "grid",
         "name" : "grid.record",
         "desc" : " Evaluates an expression that includes both calculations and drawing that depends on the calculations so that both the calculations and the drawing will be rerun when the scene is redrawn (e.g., device resize or editing). Intended only for expert use. "
      },
      {
         "aliases" : "rectGrob",
         "title" : "Draw rectangles ",
         "package" : "grid",
         "name" : "grid.rect",
         "desc" : " These functions create and draw rectangles. "
      },
      {
         "aliases" : "",
         "title" : " Refresh the current grid scene ",
         "package" : "grid",
         "name" : "grid.refresh",
         "desc" : " Replays the current grid display list. "
      },
      {
         "title" : "Remove a Grid Graphical Object",
         "aliases" : "grid.gremove:removeGrob",
         "desc" : " Remove a grob from a gTree or a descendant of a gTree. ",
         "name" : "grid.remove",
         "package" : "grid"
      },
      {
         "desc" : " Change the order in which the children of a gTree get drawn. ",
         "name" : "grid.reorder",
         "package" : "grid",
         "title" : " Reorder the children of a gTree ",
         "aliases" : "reorderGrob"
      },
      {
         "package" : "grid",
         "desc" : "Draw a single rectangle with rounded corners.",
         "name" : "roundrect",
         "aliases" : "grid.roundrect:roundrectGrob",
         "title" : "Draw a rectangle with rounded corners"
      },
      {
         "package" : "grid",
         "name" : "grid.segments",
         "desc" : " These functions create and draw line segments. ",
         "aliases" : "segmentsGrob",
         "title" : " Draw Line Segments "
      },
      {
         "name" : "grid.set",
         "desc" : " Replace a grob or a descendant of a grob. ",
         "package" : "grid",
         "title" : "Set a Grid Graphical Object",
         "aliases" : "setGrob"
      },
      {
         "name" : "grid.show.layout",
         "desc" : " This function uses Grid graphics to draw a diagram of a Grid layout. ",
         "package" : "grid",
         "title" : "Draw a Diagram of a Grid Layout",
         "aliases" : ""
      },
      {
         "name" : "grid.show.viewport",
         "desc" : " This function uses Grid graphics to draw a diagram of a Grid viewport. ",
         "package" : "grid",
         "title" : "Draw a Diagram of a Grid Viewport",
         "aliases" : ""
      },
      {
         "title" : "Draw Text",
         "aliases" : "textGrob",
         "desc" : " These functions create and draw text and plotmath expressions. ",
         "name" : "grid.text",
         "package" : "grid"
      },
      {
         "title" : "Draw an X-Axis",
         "aliases" : "xaxisGrob",
         "desc" : " These functions create and draw an x-axis. ",
         "name" : "grid.xaxis",
         "package" : "grid"
      },
      {
         "title" : " Draw an Xspline ",
         "aliases" : "xsplineGrob",
         "name" : "grid.xspline",
         "desc" : " These functions create and draw an xspline, a curve drawn relative to control points. ",
         "package" : "grid"
      },
      {
         "aliases" : "yaxisGrob",
         "title" : "Draw a Y-Axis",
         "package" : "grid",
         "desc" : " These functions create and draw a y-axis. ",
         "name" : "grid.yaxis"
      },
      {
         "name" : "grobName",
         "desc" : " This function generates a unique (within-session) name for a grob, based on the grob's class. ",
         "package" : "grid",
         "title" : "Generate a Name for a Grob",
         "aliases" : ""
      },
      {
         "aliases" : "grobHeight:grobAscent:grobDescent",
         "title" : "Create a Unit Describing the Width of a Grob",
         "package" : "grid",
         "name" : "grobWidth",
         "desc" : " These functions create a unit object describing the width or height of a grob. They are generic. "
      },
      {
         "package" : "grid",
         "desc" : " These functions create a unit object describing a location somewhere on the boundary of a grob. They are generic. ",
         "name" : "grobX",
         "aliases" : "grobY",
         "title" : "Create a Unit Describing a Grob Boundary Location"
      },
      {
         "title" : "Constructing a Legend Grob",
         "aliases" : "grid.legend",
         "desc" : " Constructing a legend grob (in progress) ",
         "name" : "legendGrob",
         "package" : "grid"
      },
      {
         "aliases" : "makeContext",
         "title" : " Customised grid Grobs ",
         "package" : "grid",
         "name" : "makeContent",
         "desc" : " These generic hook functions are called whenever a grid grob is drawn. They provide an opportunity for customising the drawing context and drawing content of a new class derived from grob (or gTree). "
      },
      {
         "aliases" : "",
         "title" : " Create a Viewport with a Standard Plot Layout ",
         "package" : "grid",
         "name" : "plotViewport",
         "desc" : " This is a convenience function for producing a viewport with the common S-style plot layout -- i.e., a central plot region surrounded by margins given in terms of a number of lines of text. "
      },
      {
         "package" : "grid",
         "desc" : " Determine the width and height of a raster grob when one or both are not given explicitly. The result depends on both the aspect ratio of the raster image and the aspect ratio of the physical drawing context, so the result is only valid for the drawing context in which this function is called. ",
         "name" : "resolveRasterSize",
         "aliases" : "",
         "title" : " Utility function to resolve the size of a raster grob "
      },
      {
         "package" : "grid",
         "name" : "showGrob",
         "desc" : " Produces a graphical display of (by default) the current grid scene, with labels showing the names of each grob in the scene. It is also possible to label only specific grobs in the scene. ",
         "aliases" : "",
         "title" : " Label grid grobs. "
      },
      {
         "name" : "showViewport",
         "desc" : " Produces a graphical display of (by default) the current grid viewport tree. It is also possible to display only specific viewports. Each viewport is drawn as a rectangle and the leaf viewports are labelled with the viewport name. ",
         "package" : "grid",
         "title" : " Display grid viewports. ",
         "aliases" : ""
      },
      {
         "aliases" : "stringHeight:stringAscent:stringDescent",
         "title" : "Create a Unit Describing the Width and Height of a String or Math Expression",
         "package" : "grid",
         "name" : "stringWidth",
         "desc" : " These functions create a unit object describing the width or height of a string. "
      },
      {
         "package" : "grid",
         "name" : "unit.c",
         "desc" : " This function produces a new unit object by combining the unit objects specified as arguments. ",
         "aliases" : "",
         "title" : "Combine Unit Objects"
      },
      {
         "name" : "unit.length",
         "desc" : " The length of a unit object is defined as the number of unit values in the unit object. This function has been deprecated in favour of a unit method for the generic length function. ",
         "package" : "grid",
         "title" : "Length of a Unit Object",
         "aliases" : ""
      },
      {
         "package" : "grid",
         "desc" : " Returns a unit object whose i'th value is the minimum (or maximum) of the i'th values of the arguments. ",
         "name" : "unit.pmin",
         "aliases" : "unit.pmax",
         "title" : " Parallel Unit Minima and Maxima "
      },
      {
         "aliases" : "",
         "title" : "Function to Create a Unit Object",
         "package" : "grid",
         "desc" : " This function creates a unit object --- a vector of unit values. A unit value is typically just a single numeric value with an associated unit. ",
         "name" : "unit"
      },
      {
         "title" : " Replicate Elements of Unit Objects ",
         "aliases" : "",
         "desc" : " Replicates the units according to the values given in times and length.out. This function has been deprecated in favour of a unit method for the generic rep function. ",
         "name" : "unit.rep",
         "package" : "grid"
      },
      {
         "package" : "grid",
         "name" : "valid.just",
         "desc" : " Utility functions for determining whether a justification specification is valid and for resolving a single justification value from a combination of character and numeric values. ",
         "aliases" : "resolveHJust:resolveVJust",
         "title" : "Validate a Justification"
      },
      {
         "package" : "grid",
         "desc" : " This generic hook function is called whenever a grid grob is created or edited via grob, gTree, grid.edit or editGrob. This provides an opportunity for customising the validation of a new class derived from grob (or gTree). ",
         "name" : "validDetails",
         "aliases" : "",
         "title" : " Customising grid grob Validation "
      },
      {
         "title" : "Create a Grid Viewport",
         "aliases" : "vpList:vpStack:vpTree",
         "desc" : " These functions create viewports, which describe rectangular regions on a graphics device and define a number of coordinate systems within those regions. ",
         "name" : "Grid Viewports",
         "package" : "grid"
      },
      {
         "title" : "Maintaining and Navigating the Grid Viewport Tree",
         "aliases" : "downViewport:seekViewport:popViewport:upViewport",
         "desc" : " Grid maintains a tree of viewports --- nested drawing contexts. These functions provide ways to add or remove viewports and to navigate amongst viewports in the tree. ",
         "name" : "Working with Viewports",
         "package" : "grid"
      },
      {
         "title" : " Concatenate Viewport Names ",
         "aliases" : "",
         "desc" : " This function can be used to generate a viewport path for use in downViewport or seekViewport. A viewport path is a list of nested viewport names. ",
         "name" : "vpPath",
         "package" : "grid"
      },
      {
         "aliases" : "heightDetails:ascentDetails:descentDetails",
         "title" : " Width and Height of a grid grob ",
         "package" : "grid",
         "desc" : " These generic functions are used to determine the size of grid grobs. ",
         "name" : "widthDetails"
      },
      {
         "aliases" : "yDetails",
         "title" : " Boundary of a grid grob ",
         "package" : "grid",
         "name" : "xDetails",
         "desc" : " These generic functions are used to determine a location on the boundary of a grid grob. "
      },
      {
         "desc" : " Rather than drawing an Xspline (or Bezier curve), this function returns the points that would be used to draw the series of line segments for the Xspline. This may be useful to post-process the Xspline curve, for example, to clip the curve. ",
         "name" : "xsplinePoints",
         "package" : "grid",
         "title" : " Return the points that would be used to draw an Xspline (or a Bezier curve). ",
         "aliases" : "bezierPoints"
      },
      {
         "title" : "Force an Object to Belong to a Class",
         "aliases" : "as<-:coerce:coerce<-:setAs:coerce-methods:coerce,ANY,array-method:coerce,ANY,call-method:coerce,ANY,character-method:coerce,ANY,complex-method:coerce,ANY,environment-method:coerce,ANY,expression-method:coerce,ANY,function-method:coerce,ANY,integer-method:coerce,ANY,list-method:coerce,ANY,logical-method:coerce,ANY,matrix-method:coerce,ANY,name-method:coerce,ANY,numeric-method:coerce,ANY,single-method:coerce,ANY,ts-method:coerce,ANY,vector-method:coerce,ANY,NULL-method",
         "desc" : " These functions manage the relations that allow coercing an object to a given class. ",
         "name" : "as",
         "package" : "methods"
      },
      {
         "title" : "Classes Corresponding to Basic Data Types ",
         "aliases" : "complex-class:double-class:expression-class:externalptr-class:integer-class:list-class:logical-class:numeric-class:raw-class:single-class:vector-class:NULL-class:builtin-class:special-class:function-class:ANY-class:VIRTUAL-class:missing-class:S4-class:namedList-class",
         "desc" : " Formal classes exist corresponding to the basic R object types, allowing these types to be used in method signatures, as slots in class definitions, and to be extended by new classes.",
         "name" : "BasicClasses",
         "package" : "methods"
      },
      {
         "package" : "methods",
         "desc" : " A call to callGeneric can only appear inside a method definition. It then results in a call to the current generic function. The value of that call is the value of callGeneric. While it can be called from any method, it is useful and typically used in methods for group generic functions. ",
         "name" : "callGeneric",
         "aliases" : "",
         "title" : "Call the Current Generic Function from a Method"
      },
      {
         "name" : "canCoerce",
         "desc" : " Test if an object can be coerced to a given S4 class. Maybe useful inside if() to ensure that calling as(object, Class) will find a method. ",
         "package" : "methods",
         "title" : "Can an Object be Coerced to a Certain S4 Class?",
         "aliases" : ""
      },
      {
         "aliases" : "rbind2:cbind2-methods:cbind2,ANY,ANY-method:cbind2,ANY,missing-method:rbind2-methods:rbind2,ANY,ANY-method:rbind2,ANY,missing-method",
         "title" : "Combine two Objects by Columns or Rows",
         "package" : "methods",
         "desc" : " Combine two matrix-like objects by columns (cbind2) or rows (rbind2). These are (S4) generic functions with default methods. ",
         "name" : "cbind2"
      },
      {
         "name" : "Classes",
         "desc" : " Class definitions are objects that contain the formal definition of a class of objects, usually referred to as an S4 class, to distinguish them from the informal S3 classes. This document gives an overview of S4 classes; for details of the class representation objects, see help for the class classRepresentation. ",
         "package" : "methods",
         "title" : "Class Definitions",
         "aliases" : "__ClassMetaData:.environment-class:.externalptr-class:.name-class:.NULL-class"
      },
      {
         "package" : "methods",
         "desc" : " Given a vector of class names or a list of class definitions, the function returns an adjacency matrix of the superclasses of these classes; that is, a matrix with class names as the row and column names and with element [i, j] being 1 if the class in column j is a direct superclass of the class in row i, and 0 otherwise. The matrix has the information implied by the contains slot of the class definitions, but in a form that is often more convenient for further analysis; for example, an adjacency matrix is used in packages and other software to construct graph representations of relationships. ",
         "name" : "classesToAM",
         "aliases" : "",
         "title" : " Compute an Adjacency Matrix for Superclasses of Class Definitions "
      },
      {
         "name" : "className",
         "desc" : " The function className() generates a valid references to a class, including the name of the package containing the class definition. The object returned, from class \"className\", is the unambiguous way to refer to a class, for example when calling setMethod, just in case multiple definitions of the class exist. Function \"multipleClasses\" returns information about multiple definitions of classes with the same name from different packages. ",
         "package" : "methods",
         "title" : " Class names including the corresponding package ",
         "aliases" : "multipleClasses:className-class"
      },
      {
         "package" : "methods",
         "desc" : " These are the objects that hold the definition of classes of objects. They are constructed and stored as meta-data by calls to the function setClass. Don't manipulate them directly, except perhaps to look at individual slots. ",
         "name" : "classRepresentation-class",
         "aliases" : "",
         "title" : "Class Objects "
      },
      {
         "package" : "methods",
         "desc" : "Special documentation can be supplied to describe the classes and methods that are created by the software in the methods package. Techniques to access this documentation and to create it in R help files are described here.",
         "name" : "Documentation",
         "aliases" : "Documentation-class:Documentation-methods",
         "title" : "Using and Creating On-line Documentation for Classes and Methods"
      },
      {
         "desc" : " The argument in functions is treated specially, in that it matches zero, one or more actual arguments (and so, objects). A mechanism has been added to to allow as the signature of a generic function. Methods defined for such functions will be selected and called when all the arguments matching are from the specified class or from some subclass of that class. ",
         "name" : "dotsMethods",
         "package" : "methods",
         "title" : "The Use of ... in Method Signatures",
         "aliases" : ""
      },
      {
         "title" : "Internal Class representing Empty Methods List ",
         "aliases" : "",
         "desc" : " Objects from class \"EmptyMethodsList\" are generated during method selection to indicate failed search (forcing backtracking). Other classes described here are used internally in method dispatch. All these are for internal use.",
         "name" : "EmptyMethodsList-class",
         "package" : "methods"
      },
      {
         "aliases" : "",
         "title" : "Class \"environment\"",
         "package" : "methods",
         "name" : "environment-class",
         "desc" : " A formal class for R environments."
      },
      {
         "aliases" : "insertSource:sourceEnvironment-class",
         "title" : " Use Function Definitions from a Source File without Reinstalling a Package ",
         "package" : "methods",
         "name" : "evalSource",
         "desc" : " Definitions of functions and/or methods from a source file are inserted into a package, using the trace mechanism. Typically, this allows testing or debugging modified versions of a few functions without reinstalling a large package. "
      },
      {
         "package" : "methods",
         "desc" : " Functions to find and manipulate class definitions. ",
         "name" : "findClass",
         "aliases" : "resetClass:isClass:getClasses:findClass:sealClass",
         "title" : "Computations with Classes"
      },
      {
         "title" : "Description of the Methods Defined for a Generic Function",
         "aliases" : "findMethodSignatures:hasMethods:getMethods:listOfMethods-class",
         "name" : "findMethods",
         "desc" : " The function findMethods converts the methods defined in a table for a generic function (as used for selection of methods) into a list, for study or display. The list is actually from the class listOfMethods (see the section describing the class, below). The list will be limited to the methods defined in environment where if that argument is supplied and limited to those including one or more of the specified classes in the method signature if that argument is supplied. To see the actual table (an environment) used for methods dispatch, call getMethodsForDispatch. The names of the list returned by findMethods are the names of the objects in the table. The function findMethodSignatures returns a character matrix whose rows are the class names from the signature of the corresponding methods; it operates either from a list returned by findMethods, or by computing such a list itself, given the same arguments as findMethods . The function hasMethods returns TRUE or FALSE according to whether there is a non-empty table of methods for function f in the environment or search position where (or for the generic function generally if where is missing). The defunct function getMethods is an older alternative to findMethods , returning information in the form of an object of class MethodsList, previously used for method dispatch. It is not recommended, since this class of objects is deprecated generally and will disappear in a future version of R. ",
         "package" : "methods"
      },
      {
         "title" : "Fix Objects Saved from R Versions Previous to 1.8",
         "aliases" : "",
         "desc" : " Beginning with R version 1.8.0, the class of an object contains the identification of the package in which the class is defined. The function fixPre1.8 fixes and re-assigns objects missing that information (typically because they were loaded from a file saved with a previous version of R.) ",
         "name" : "fixPre1.8",
         "package" : "methods"
      },
      {
         "aliases" : "groupGenericFunction-class",
         "title" : "Generic Function Objects ",
         "package" : "methods",
         "desc" : " Generic functions (objects from or extending class genericFunction) are extended function objects, containing information used in creating and dispatching methods for this function. They also identify the package associated with the function and its methods. ",
         "name" : "genericFunction-class"
      },
      {
         "package" : "methods",
         "name" : "GenericFunctions",
         "desc" : " The functions documented here manage collections of methods associated with a generic function, as well as providing information about the generic functions themselves. ",
         "aliases" : "isGeneric:isGroup:removeGeneric:getGenerics:dumpMethod:findFunction:dumpMethods:removeMethods:signature:setReplaceMethod",
         "title" : "Tools for Managing Generic Functions"
      },
      {
         "aliases" : "getClassDef",
         "title" : "Get Class Definition ",
         "package" : "methods",
         "name" : "getClass",
         "desc" : " Get the definition of a class. "
      },
      {
         "name" : "getMethod",
         "desc" : " Functions to look for a method corresponding to a given generic function and signature. The functions getMethod and selectMethod return the method; the functions existsMethod and hasMethod test for its existence. In both cases the first function only gets direct definitions and the second uses inheritance. In all cases, the search is in the generic function itself or in the package/environment specified by argument where. The function findMethod returns the package(s) in the search list (or in the packages specified by the where argument) that contain a method for this function and signature. ",
         "package" : "methods",
         "title" : " Get or Test for the Definition of a Method ",
         "aliases" : "findMethod:existsMethod:selectMethod:hasMethod"
      },
      {
         "desc" : " The functions below produce the package associated with a particular environment or position on the search list, or of the package containing a particular function. They are primarily used to support computations that need to differentiate objects on multiple packages. ",
         "name" : "getPackageName",
         "package" : "methods",
         "title" : "The Name associated with a Given Package",
         "aliases" : "setPackageName:packageSlot:packageSlot<-"
      },
      {
         "aliases" : "",
         "title" : "Look for an Argument in the Call",
         "package" : "methods",
         "desc" : " Returns TRUE if name corresponds to an argument in the call, either a formal argument to the function, or a component of ..., and FALSE otherwise. ",
         "name" : "hasArg"
      },
      {
         "package" : "methods",
         "name" : "implicitGeneric",
         "desc" : " Create or access implicit generic functions, used to enforce consistent generic versions of functions that are not currently generic. Function implicitGeneric() returns the implicit generic version, setGenericImplicit() turns a generic implicit, prohibitGeneric() prevents your function from being made generic, and registerImplicitGenerics() saves a set of implicit generic definitions in the cached table of the current session. ",
         "aliases" : "setGenericImplicit:prohibitGeneric:registerImplicitGenerics:implicit:generic",
         "title" : "Manage Implicit Versions of Generic Functions"
      },
      {
         "name" : "inheritedSlotNames",
         "desc" : " For a class (or class definition, see getClass and the description of class classRepresentation), give the names which are inherited from above, i.e., super classes, rather than by this class' definition itself. ",
         "package" : "methods",
         "title" : "Names of Slots Inherited From a Super Class",
         "aliases" : ""
      },
      {
         "package" : "methods",
         "name" : "initialize-methods",
         "desc" : " The arguments to function new to create an object from a particular class can be interpreted specially for that class, by the definition of a method for function initialize for the class. This documentation describes some existing methods, and also outlines how to write new ones. ",
         "aliases" : "initialize,ANY-method:initialize,traceable-method:initialize,signature-method:initialize,environment-method:initialize,.environment-method",
         "title" : "Methods to Initialize New Objects from a Class"
      },
      {
         "package" : "methods",
         "desc" : " Functions to test inheritance relationships between an object and a class (is) or between two classes (extends), and to establish such relationships (setIs, an explicit alternative to the contains= argument to setClass). ",
         "name" : "is",
         "aliases" : "extends:setIs",
         "title" : "Is an Object from a Class?"
      },
      {
         "title" : " Check for a Sealed Method or Class ",
         "aliases" : "isSealedClass",
         "name" : "isSealedMethod",
         "desc" : " These functions check for either a method or a class that has been sealed when it was defined, and which therefore cannot be re-defined. ",
         "package" : "methods"
      },
      {
         "aliases" : "(-class:<--class:call-class:for-class:if-class:repeat-class:while-class:name-class:{-class",
         "title" : "Classes to Represent Unevaluated Language Objects ",
         "package" : "methods",
         "desc" : " The virtual class \"language\" and the specific classes that extend it represent unevaluated objects, as produced for example by the parser or by functions such as quote. ",
         "name" : "language-class"
      },
      {
         "package" : "methods",
         "name" : "languageEl",
         "desc" : " Internal routines to support some operations on language objects. ",
         "aliases" : "languageEl<-:isGrammarSymbol",
         "title" : "Elements of Language Objects"
      },
      {
         "title" : "Class \"LinearMethodsList\"",
         "aliases" : "",
         "name" : "LinearMethodsList-class",
         "desc" : " A version of methods lists that has been linearized for producing summary information. The actual objects from class \"MethodsList\" used for method dispatch are defined recursively over the arguments involved. ",
         "package" : "methods"
      },
      {
         "name" : "LocalReferenceClasses",
         "desc" : " Local reference classes are modified ReferenceClasses that isolate the objects to the local frame. Therefore, they do not propagate changes back to the calling environment. At the same time, they use the reference field semantics locally, avoiding the automatic duplication applied to standard objects. The current implementation has no special construction. To create a local reference class, call setRefClass() with a contains= argument that includes \"localRefClass\". See the example below. Local reference classes operate essentially as do regular, functional classes in ; that is, changes are made by assignment and take place in the local frame. The essential difference is that replacement operations (like the change to the twiddle field in the example) do not cause duplication of the entire object, as would be the case for a formal class or for data with attributes or in a named list. The purpose is to allow large objects in some fields that are not changed along with potentially frequent changes to other fields, but without copying the large fields. ",
         "package" : "methods",
         "title" : "Localized Objects based on Reference Classes",
         "aliases" : "localRefClass-class:$<-,localRefClass-method"
      },
      {
         "aliases" : "",
         "title" : "Create a Skeleton File for a New Method",
         "package" : "methods",
         "name" : "method.skeleton",
         "desc" : " This function writes a source file containing a call to setMethod to define a method for the generic function and signature supplied. By default the method definition is in line in the call, but can be made an external (previously assigned) function. "
      },
      {
         "title" : "Classes to Represent Method Definitions",
         "aliases" : "SealedMethodDefinition-class",
         "name" : "MethodDefinition-class",
         "desc" : " These classes extend the basic class \"function\" when functions are to be stored and used as method definitions. ",
         "package" : "methods"
      },
      {
         "aliases" : "getAllMethods:mlistMetaName:removeMethodsObject:getAccess:getClassName:getClassPackage:getExtends:getProperties:getPrototype:getSubclasses:getVirtual:seemsS4Object:allGenerics:trySilent:traceOn:traceOff",
         "title" : "Defunct Functions in Package methods",
         "package" : "methods",
         "name" : "methods-defunct",
         "desc" : " Defunct functions in package methods. "
      },
      {
         "desc" : " These functions are provided for compatibility with older versions of only, and may be defunct as soon as the next release. ",
         "name" : "methods-deprecated",
         "package" : "methods",
         "title" : "Deprecated Functions in Package methods",
         "aliases" : ""
      },
      {
         "package" : "methods",
         "name" : "methods-package",
         "desc" : " Formally defined methods and classes for R objects, plus other programming tools, as described in the references. ",
         "aliases" : "",
         "title" : " Formal Methods and Classes "
      },
      {
         "name" : "Methods",
         "desc" : " This documentation section covers some general topics on how methods work and how the methods package interacts with the rest of . The information is usually not needed to get started with methods and classes, but may be helpful for moderately ambitious projects, or when something doesn't work as expected. The section How Methods Work describes the underlying mechanism; S3 Methods and Generic Functions gives the rules applied when S4 classes and methods interact with older S3 methods; Method Selection and Dispatch provides more details on how class definitions determine which methods are used; Generic Functions discusses generic functions as objects. For additional information specifically about class definitions, see Classes. ",
         "package" : "methods",
         "title" : "General Information on Methods",
         "aliases" : ""
      },
      {
         "package" : "methods",
         "desc" : " This class of objects was used in the original implementation of the package to control method dispatch. Its use is now defunct, but object appear as the default method slot in generic functions. This and any other remaining uses will be removed in the future. For the modern alternative, see listOfMethods. The details in this documentation are retained to allow analysis of old-style objects. ",
         "name" : "MethodsList-class",
         "aliases" : "body<-,MethodDefinition-method",
         "title" : "Class MethodsList, Defunct Representation of Methods "
      },
      {
         "name" : "MethodsList",
         "desc" : " These functions create and manipulate MethodsList objects, the objects formerly used in R to store methods for dispatch. Use of these objects is deprecated since 3.2.0, as it will rarely be a good idea. Where methods dispatch is to be studied, see selectMethod. For computations that iterate over methods or over method signatures, see findMethods, which returns a linearized methods list to hold method definitions, usually more convenient for iteration than the recursive MethodsList objects. ",
         "package" : "methods",
         "title" : "MethodsList Objects",
         "aliases" : "linearizeMlist:finalDefaultMethod:loadMethod:loadMethod-methods:loadMethod,ANY-method:loadMethod,MethodDefinition-method:loadMethod,MethodWithNext-method:MethodsList:makeMethodsList:SignatureMethod:insertMethod:inheritedSubMethodLists:showMlist:print.MethodsList:emptyMethodsList:insertMethodInEmptyList:mergeMethods:MethodsListSelect"
      },
      {
         "package" : "methods",
         "desc" : " These are support routines for computations on formal methods. ",
         "name" : "MethodSupport",
         "aliases" : "getMethodsForDispatch:cacheMethod:resetGeneric:listFromMethods",
         "title" : "Additional (Support) Functions for Methods"
      },
      {
         "aliases" : "functionBody<-:allNames:getFunction:existsFunction:el:elNamed:el<-:elNamed<-:formalArgs:Quote:showDefault:initMethodDispatch:methodSignatureMatrix",
         "title" : "Utility Functions for Methods and S-Plus Compatibility",
         "package" : "methods",
         "desc" : " These are utilities, currently in the methods package, that either provide some functionality needed by the package (e.g., element matching by name), or add compatibility with S-Plus, or both. ",
         "name" : "methodUtilities"
      },
      {
         "aliases" : "",
         "title" : "Class MethodWithNext ",
         "package" : "methods",
         "name" : "MethodWithNext-class",
         "desc" : " Class of method definitions set up for callNextMethod "
      },
      {
         "desc" : " Given the name or the definition of a class, plus optionally data to be included in the object, new returns an object from that class. ",
         "name" : "new",
         "package" : "methods",
         "title" : " Generate an Object from a Class ",
         "aliases" : "initialize"
      },
      {
         "title" : "Call an Inherited Method",
         "aliases" : "",
         "desc" : " A call to callNextMethod can only appear inside a method definition. It then results in a call to the first inherited method after the current method, with the arguments to the current method passed down to the next method. The value of that method call is the value of callNextMethod. ",
         "name" : "callNextMethod",
         "package" : "methods"
      },
      {
         "package" : "methods",
         "name" : "nonStructure-class",
         "desc" : " S4 classes that are defined to extend one of the basic vector classes should contain the class structure if they behave like structures; that is, if they should retain their class behavior under math functions or operators, so long as their length is unchanged. On the other hand, if their class depends on the values in the object, not just its structure, then they should lose that class under any such transformations. In the latter case, they should be defined to contain nonStructure. If neither of these strategies applies, the class likely needs some methods of its own for Ops, Math, and/or other generic functions. What is not usually a good idea is to allow such computations to drop down to the default, base code. This is inconsistent with most definitions of such classes.",
         "aliases" : "Math,nonStructure-method:Math2,nonStructure-method:Ops,vector,nonStructure-method:Ops,nonStructure,vector-method:Ops,nonStructure,nonStructure-method",
         "title" : "A non-structure S4 Class for basic types "
      },
      {
         "desc" : " This class of objects is used to represent ordinary character string object names, extended with a package slot naming the package associated with each object. ",
         "name" : "ObjectsWithPackage-class",
         "package" : "methods",
         "title" : "A Vector of Object Names, with associated Package Names ",
         "aliases" : ""
      },
      {
         "package" : "methods",
         "name" : "promptClass",
         "desc" : " Assembles all relevant slot and method information for a class, with minimal markup for Rd processing; no QC facilities at present. ",
         "aliases" : "",
         "title" : "Generate a Shell for Documentation of a Formal Class"
      },
      {
         "aliases" : "",
         "title" : " Generate a Shell for Documentation of Formal Methods ",
         "package" : "methods",
         "desc" : " Generates a shell of documentation for the methods of a generic function. ",
         "name" : "promptMethods"
      },
      {
         "title" : "Utilities for Managing Class Definitions",
         "aliases" : "newClassRepresentation:print.classRepresentation:setExtendsMetaData:setSubclassMetaData:subclassesMetaName:extendsMetaName:classPrototypeDef-class:.classEnv:classLabel:testVirtual:makePrototypeFromClassDef:newEmptyObject:completeClassDefinition:getAllSuperClasses:superClassDepth:isVirtualClass:assignClassDef:newBasic:makeExtends:reconcilePropertiesAndPrototype:tryNew:empty.dump:showClass:showExtends:possibleExtends:completeExtends:classMetaName:methodsPackageMetaName:metaNameUndo:requireMethods:checkAtAssignment:checkSlotAssignment:defaultPrototype:isClassDef:validSlotNames:getDataPart:setDataPart:.BasicClasses:.BasicVectorClasses:.InitBasicClasses:.InitMethodsListClass:.setCoerceGeneric:conditionalExtension-class",
         "desc" : " These are various functions to support the definition and use of formal classes. Most of them are rarely suitable to be called directly. Others are somewhat experimental and/or partially implemented only. Do refer to setClass for normal code development. ",
         "name" : "RClassUtils",
         "package" : "methods"
      },
      {
         "name" : "ReferenceClasses",
         "desc" : " The software described here supports reference classes whose objects have fields accessed by reference in the style of OOP languages such as Java and C++. Computations with these objects invoke methods on them and extract or set their fields. The field and method computations potentially modify the object. All computations referring to the objects see the modifications, in contrast to the usual functional programming model in . Reference classes can be used to program in directly or in combination with an interface to an OOP-style language, allowing -written methods to extend the interface. ",
         "package" : "methods",
         "title" : "Objects With Fields Treated by Reference (OOP-style)",
         "aliases" : "setRefClass:getRefClass:initFieldArgs:initRefFields:activeBindingFunction-class:defaultBindingFunction-class:uninitializedField-class:refClassRepresentation-class:refObjectGenerator-class:refGeneratorSlot-class:refClass-class:refObject-class:refMethodDef-class:refMethodDefWithTrace-class:SuperClassMethod-class:show,envRefClass-method:show,refMethodDef-method:show,refClassRepresentation-method"
      },
      {
         "package" : "methods",
         "desc" : " These are old utility functions to construct, respectively a list designed to represent the slots and superclasses and a list of prototype specifications. The representation() function is no longer useful, since the arguments slots and contains to setClass are now recommended. The prototype() function may still be used for the corresponding argument, but a simple list of the same arguments works as well. ",
         "name" : "representation",
         "aliases" : "prototype",
         "title" : " Construct a Representation or a Prototype for a Class Definition"
      },
      {
         "package" : "methods",
         "desc" : " Utility functions to support the definition and use of formal methods. Most of these functions will not normally be called directly by the user. ",
         "name" : "RMethodUtils",
         "aliases" : "standardGeneric-class:standardGenericWithTrace-class:nonstandardGeneric-class:nonstandardGenericFunction-class:nonstandardGroupGenericFunction-class:OptionalFunction-class:PossibleMethod-class:optionalMethod-class:derivedDefaultMethod-class:substituteFunctionArgs:makeGeneric:makeStandardGeneric:generic.skeleton:defaultDumpName:doPrimitiveMethod:conformMethod:getGeneric:getGroup:getGroupMembers:getMethodsMetaData:assignMethodsMetaData:matchSignature:findUnique:MethodAddCoerce:.saveImage:cacheMetaData:cacheGenericsMetaData:setPrimitiveMethods:missingArg:balanceMethodsList:sigToEnv:rematchDefinition:unRematchDefinition:addNextMethod,MethodDefinition-method:addNextMethod,MethodWithNext-method:addNextMethod:.valueClassTest:insertClassMethods:.ShortPrimitiveSkeletons:.EmptyPrimitiveSkeletons",
         "title" : "Method Utilities"
      },
      {
         "aliases" : "S3Part<-:S3Class:S3Class<-:isXS3Class:slotsFromS3:S4:S3:coerce,ANY,S3-method:coerce,oldClass,S3-method:coerce,ANY,S4-method:S3-class",
         "title" : " S3-style Objects and S4-class Objects",
         "package" : "methods",
         "desc" : " Old-style (S3) classes may be registered as S4 classes (by calling setOldClass, and many have been. These classes can then be contained in (that is, superclasses of) regular S4 classes, allowing formal methods and slots to be added to the S3 behavior. The function S3Part extracts or replaces the S3 part of such an object. S3Class extracts or replaces the S3-style class. S3Class also applies to object from an S4 class with S3methods=TRUE in the call to setClass. See the details below. Also discussed are S3 <-> S4 coercion; see the section S3 and S4 objects ",
         "name" : "S3Part"
      },
      {
         "title" : "S4 Group Generic Functions",
         "aliases" : "GroupGenericFunctions:Math:Ops:Summary:Arith:Logic:Compare:Complex:Math2",
         "name" : "S4groupGeneric",
         "desc" : " Methods can be defined for group generic functions. Each group generic function has a number of member generic functions associated with it. Methods defined for a group generic function cause the same method to be defined for each member of the group, but a method explicitly defined for a member of the group takes precedence over a method defined, with the same signature, for the group generic. The functions shown in this documentation page all reside in the methods package, but the mechanism is available to any programmer, by calling setGroupGeneric (provided package methods is attached). ",
         "package" : "methods"
      },
      {
         "aliases" : "",
         "title" : "Class to Represent Inheritance (Extension) Relations ",
         "package" : "methods",
         "name" : "SClassExtension-class",
         "desc" : " An object from this class represents a single is relationship; lists of these objects are used to represent all the extensions (superclasses) and subclasses for a given class. The object contains information about how the relation is defined and methods to coerce, test, and replace correspondingly. "
      },
      {
         "package" : "methods",
         "desc" : " Return superclasses of ClassDef, possibly only non-virtual or direct or simple ones. These functions are designed to be fast, and consequently only work with the contains slot of the corresponding class definitions. ",
         "name" : "selectSuperClasses",
         "aliases" : ".selectSuperClasses",
         "title" : "Super Classes (of Specific Kinds) of a Class"
      },
      {
         "desc" : " Create a class definition, specifying the representation (the slots) and/or the classes contained in this one (the superclasses), plus other optional details. As a side effect, the class definition is stored in the specified environment. A generator function is returned as the value of setClass(), suitable for creating objects from the class if the class is not virtual. Of the many arguments to the function only Class, slots= and contains= are usually needed. ",
         "name" : "setClass",
         "package" : "methods",
         "title" : "Create a Class Definition",
         "aliases" : "classGeneratorFunction-class"
      },
      {
         "title" : "Classes Defined as the Union of Other Classes",
         "aliases" : "isClassUnion:ClassUnionRepresentation-class",
         "desc" : " A class may be defined as the union of other classes; that is, as a virtual class defined as a superclass of several other classes. Class unions are useful in method signatures or as slots in other classes, when we want to allow one of several classes to be supplied. ",
         "name" : "setClassUnion",
         "package" : "methods"
      },
      {
         "package" : "methods",
         "name" : "setGeneric",
         "desc" : " Create a new generic function of the given name, that is, a function that dispatches methods according to the classes of the arguments, from among the formal methods defined for this function. ",
         "aliases" : "setGroupGeneric",
         "title" : "Define a New Generic Function"
      },
      {
         "package" : "methods",
         "desc" : " These functions provide a mechanism for packages to specify computations to be done during the loading of a package namespace. Such actions are a flexible way to provide information only available at load time (such as locations in a dynamically linked library). A call to setLoadAction() or setLoadActions() specifies one or more functions to be called when the corresponding namespace is loaded, with the argument names being used as identifying names for the actions. getLoadActions reports the currently defined load actions, given a package's namespace as its argument. hasLoadAction returns TRUE if a load action corresponding to the given name has previously been set for the where namespace. evalOnLoad() and evalqOnLoad() schedule a specific expression for evaluation at load time. ",
         "name" : "setLoadActions",
         "aliases" : "setLoadActions:getLoadActions:hasLoadAction:evalOnLoad:evalqOnLoad",
         "title" : " Set Actions For Package Loading "
      },
      {
         "desc" : " Create and save a formal method for a given function and list of classes. ",
         "name" : "setMethod",
         "package" : "methods",
         "title" : " Create and Save a Method ",
         "aliases" : "removeMethod"
      },
      {
         "aliases" : ".setOldIs:POSIXct-class:POSIXlt-class:POSIXt-class:aov-class:maov-class:anova-class:anova.glm-class:anova.glm.null-class:Date-class:data.frame-class:data.frameRowLabels-class:density-class:dump.frames-class:factor-class:formula-class:glm-class:glm.null-class:hsearch-class:integrate-class:libraryIQR-class:lm-class:logLik-class:mlm-class:mtable-class:mts-class:ordered-class:packageIQR-class:packageInfo-class:recordedplot-class:rle-class:socket-class:summaryDefault-class:summary.table-class:oldClass-class:.OldClassesList:table-class:initialize,data.frame-method:initialize,factor-method:initialize,ordered-method:initialize,table-method:initialize,summary.table-method",
         "title" : "Register Old-Style (S3) Classes and Inheritance",
         "package" : "methods",
         "name" : "setOldClass",
         "desc" : " Register an old-style (a.k.a. S3) class as a formally defined class. The Classes argument is the character vector used as the class attribute; in particular, if there is more than one string, old-style class inheritance is mimicked. Registering via setOldClass allows S3 classes to appear in method signatures, as a slot in an S4 class, or as a superclass of an S4 class. "
      },
      {
         "aliases" : "",
         "title" : "Create a Class Definition",
         "package" : "methods",
         "name" : "makeClassRepresentation",
         "desc" : " Constructs an object of class classRepresentation to describe a particular class. Mostly a utility function, but you can call it to create a class definition without assigning it, as setClass would do. "
      },
      {
         "title" : "Show an Object",
         "aliases" : "show-methods:show,ANY-method:show,traceable-method:show,ObjectsWithPackage-method:show,MethodDefinition-method:show,MethodWithNext-method:show,genericFunction-method:show,classRepresentation-method",
         "name" : "show",
         "desc" : " Display the object, by printing, plotting or whatever suits its class. This function exists to be specialized by methods. The default method calls showDefault. Formal methods for show will usually be invoked for automatic printing (see the details). ",
         "package" : "methods"
      },
      {
         "aliases" : ".S4methods",
         "title" : "Show all the methods for the specified function(s) or class",
         "package" : "methods",
         "desc" : " Show a summary of the methods for one or more generic functions, possibly restricted to those involving specified classes. ",
         "name" : "showMethods"
      },
      {
         "package" : "methods",
         "desc" : "This class represents the mapping of some of the formal arguments of a function onto the corresponding classes. It is used for two slots in the MethodDefinition class. ",
         "name" : "signature-class",
         "aliases" : "show,signature-method",
         "title" : "Class \"signature\" For Method Definitions"
      },
      {
         "desc" : " These functions return or set information about the individual slots in an object. ",
         "name" : "slot",
         "package" : "methods",
         "title" : "The Slots in an Object from a Formal Class",
         "aliases" : ".hasSlot:slot<-:slotNames:.slotNames:getSlots"
      },
      {
         "package" : "methods",
         "name" : "envRefClass-class",
         "desc" : " Support Class to Implement R Objects using Reference Semantics ",
         "aliases" : "$,envRefClass-method:$<-,envRefClass-method:initialize,envRefClass-method",
         "title" : "Class \"envRefClass\""
      },
      {
         "aliases" : "matrix-class:array-class:ts-class:Math,structure-method:Ops,structure,vector-method:Ops,structure,structure-method:Ops,structure,array-method:Ops,vector,structure-method:Ops,array,structure-method:Ops,array,array-method:initialize,array-method:initialize,matrix-method:initialize,ts-method:initialize,mts-method:show,ts-method",
         "title" : "Classes Corresponding to Basic Structures",
         "package" : "methods",
         "desc" : " The virtual class structure and classes that extend it are formal classes analogous to S language structures such as arrays and time-series. ",
         "name" : "StructureClasses"
      },
      {
         "name" : "substituteDirect",
         "desc" : " Substitute for the variables named in the second argument the corresponding objects, substituting into object. The argument frame is a named list; if omitted, the environment of the caller is used. This function differs from the ordinary substitute in that it treats its first argument in the standard S way, by evaluating it. In contrast, substitute does not evaluate its first argument. The goal is to replace this with an eval= argument to substitute. ",
         "package" : "methods",
         "title" : "SubstituteDirect",
         "aliases" : ""
      },
      {
         "title" : " Test for and Report about Selection of Inherited Methods ",
         "aliases" : "MethodSelectionReport-class:.Other-class",
         "name" : "testInheritedMethods",
         "desc" : " A set of distinct inherited signatures is generated to test inheritance for all the methods of a specified generic function. If method selection is ambiguous for some of these, a summary of the ambiguities is attached to the returned object. This test should be performed by package authors before releasing a package. ",
         "package" : "methods"
      },
      {
         "title" : "Classes Used Internally to Control Tracing ",
         "aliases" : "functionWithTrace-class:MethodDefinitionWithTrace-class:MethodWithNextWithTrace-class:genericFunctionWithTrace-class:groupGenericFunctionWithTrace-class:derivedDefaultMethodWithTrace-class:nonstandardGenericWithTrace-class:show,MethodDefinitionWithTrace-method:show,MethodWithNextWithTrace-method:show,genericFunctionWithTrace-method:show,sourceEnvironment-method:.untracedFunction:.makeTracedFunction:.doTracePrint:.InitTraceFunctions",
         "desc" : " The classes described here are used by the R function trace to create versions of functions and methods including browser calls, etc., and also to untrace the same objects.",
         "name" : "TraceClasses",
         "package" : "methods"
      },
      {
         "aliases" : "getValidity:setValidity",
         "title" : " Test the Validity of an Object ",
         "package" : "methods",
         "desc" : " The validity of object related to its class definition is tested. If the object is valid, TRUE is returned; otherwise, either a vector of strings describing validity failures is returned, or an error is generated (according to whether test is TRUE). Optionally, all slots in the object can also be validated. The function setValidity sets the validity method of a class (but more normally, this method will be supplied as the validity argument to setClass). The method should be a function of one object that returns TRUE or a description of the non-validity. ",
         "name" : "validObject"
      },
      {
         "name" : ".BasicFunsList",
         "desc" : " A named list providing instructions for turning builtin and special functions into generic functions. Functions in R that are defined as .Primitive(<name>) are not suitable for formal methods, because they lack the basic reflectance property. You can't find the argument list for these functions by examining the function object itself. Future versions of R may fix this by attaching a formal argument list to the corresponding function. While generally the names of arguments are not checked by the internal code implementing the function, the number of arguments frequently is. In any case, some definition of a formal argument list is needed if users are to define methods for these functions. In particular, if methods are to be merged from multiple packages, the different sets of methods need to agree on the formal arguments. In the absence of reflectance, this list provides the relevant information via a dummy function associated with each of the known specials for which methods are allowed. At the same, the list flags those specials for which methods are meaningless (e.g., for) or just a very bad idea (e.g., .Primitive). A generic function created via setMethod, for example, for one of these special functions will have the argument list from .BasicFunsList. If no entry exists, the argument list (x, ...) is assumed. ",
         "package" : "methods",
         "title" : "List of Builtin and Special Functions",
         "aliases" : ""
      },
      {
         "aliases" : "clusterApplyLB:clusterCall:clusterEvalQ:clusterExport:clusterMap:clusterSplit:parApply:parCapply:parLapply:parRapply:parSapply:parLapplyLB:parSapplyLB",
         "title" : "Apply Operations using Clusters",
         "package" : "parallel",
         "desc" : " These functions provide several ways to parallelize computations using a cluster. ",
         "name" : "clusterApply"
      },
      {
         "desc" : " Attempt to detect the number of CPU cores on the current host. ",
         "name" : "detectCores",
         "package" : "parallel",
         "title" : "Detect the Number of CPU Cores",
         "aliases" : ""
      },
      {
         "aliases" : "makePSOCKcluster:makeForkCluster:stopCluster:setDefaultCluster:R_PARALLEL_PORT",
         "title" : " Create a Parallel Socket Cluster ",
         "package" : "parallel",
         "desc" : " Creates a set of copies of running in parallel and communicating over sockets. ",
         "name" : "makeCluster"
      },
      {
         "desc" : " Support for parallel computation, including random-number generation. ",
         "name" : "parallel-package",
         "package" : "parallel",
         "title" : " Support for Parallel Computation ",
         "aliases" : "parallel"
      },
      {
         "package" : "parallel",
         "name" : "RNGstreams",
         "desc" : " This is an re-implementation of Pierre L'Ecuyer's RngStreams multiple streams of pseudo-random numbers. ",
         "aliases" : "nextRNGSubStream:clusterSetRNGStream:mc.reset.stream",
         "title" : "Implementation of Pierre L'Ecuyer's RngStreams"
      },
      {
         "title" : "Divide Tasks for Distribution in a Cluster",
         "aliases" : "",
         "desc" : " This divides up 1:nx into ncl lists of approximately equal size, as a way to allocate tasks to nodes in a cluster. It is mainly for internal use, but some package authors have found it useful. ",
         "name" : "splitIndices",
         "package" : "parallel"
      },
      {
         "title" : "Low-level Functions for Management of Forked Processes",
         "aliases" : "readChild:readChildren:selectChildren:sendChildStdin:sendMaster:mckill",
         "desc" : " These are low-level support functions for the forking approach. They are not available on Windows, and not exported from the namespace. ",
         "name" : "mcchildren",
         "package" : "man"
      },
      {
         "title" : "Get or Set CPU Affinity Mask of the Current Process",
         "aliases" : "",
         "name" : "mcaffinity",
         "desc" : " mcaffinity retrieves or sets the CPU affinity mask of the current process, i.e., the set of CPUs the process is allowed to be run on. (CPU here means logical CPU which can be CPU, core or hyperthread unit.) ",
         "package" : "man"
      },
      {
         "aliases" : "mcexit",
         "title" : "Fork a Copy of the Current R Process",
         "package" : "man",
         "name" : "mcfork",
         "desc" : " These are low-level functions, not available on Windows, and not exported from the namespace. mcfork creates a new child process as a copy of the current process. mcexit closes the current child process, informing the master process as necessary. "
      },
      {
         "package" : "man",
         "name" : "mclapply",
         "desc" : " mclapply is a parallelized version of lapply, it returns a list of the same length as X, each element of which is the result of applying FUN to the corresponding element of X. It relies on forking and hence is not available on Windows unless mc.cores = 1. mcmapply is a parallelized version of mapply, and mcMap corresponds to Map. ",
         "aliases" : "mcmapply:mcMap",
         "title" : "Parallel Versions of lapply and mapply using Forking"
      },
      {
         "title" : "Evaluate an Expression Asynchronously in a Separate Process",
         "aliases" : "mcparallel",
         "desc" : " These functions are based on forking and so are not available on Windows. mcparallel starts a parallel process which evaluates the given expression. mccollect collects results from one or more parallel processes. ",
         "name" : "mcparallel",
         "package" : "man"
      },
      {
         "package" : "man",
         "desc" : " pvec parellelizes the execution of a function on vector elements by splitting the vector and submitting each part to one core. The function must be a vectorized map, i.e.\\\\ifelse{latex}{\\\\out{~}}{ }latex~ it takes a vector input and creates a vector output of exactly the same length as the input which doesn't depend on the partition of the vector. It relies on forking and hence is not available on Windows unless mc.cores = 1. ",
         "name" : "pvec",
         "aliases" : "",
         "title" : "Parallelize a Vector Map Function using Forking"
      },
      {
         "package" : "man",
         "name" : "mclapply",
         "desc" : " These are simple serial versions of mclapply, mcmapply, mcMap and pvec for Windows where forking is not available. ",
         "aliases" : "pvec:mcmapply:mcMap",
         "title" : "Serial versions of mclapply, mcmapply and pvec"
      },
      {
         "title" : "Coerce an Object to a Vector",
         "aliases" : "",
         "desc" : " This is a generic function. Methods for this function coerce objects of given classes to vectors. ",
         "name" : "asVector",
         "package" : "splines"
      },
      {
         "aliases" : "",
         "title" : "Monotone Inverse Spline",
         "package" : "splines",
         "desc" : " Create a monotone inverse of a monotone natural spline. ",
         "name" : "backSpline"
      },
      {
         "package" : "splines",
         "desc" : " Generate the B-spline basis matrix for a polynomial spline. ",
         "name" : "bs",
         "aliases" : "",
         "title" : "B-Spline Basis for Polynomial Splines"
      },
      {
         "name" : "interpSpline",
         "desc" : " Create an interpolation spline, either from x and y vectors, or from a formula/data.frame combination. ",
         "package" : "splines",
         "title" : "Create an Interpolation Spline",
         "aliases" : ""
      },
      {
         "package" : "splines",
         "desc" : " Generate the B-spline basis matrix for a natural cubic spline. ",
         "name" : "ns",
         "aliases" : "",
         "title" : "Generate a Basis Matrix for Natural Cubic Splines"
      },
      {
         "name" : "periodicSpline",
         "desc" : " Create a periodic interpolation spline, either from x and y vectors, or from a formula/data.frame combination. ",
         "package" : "splines",
         "title" : "Create a Periodic Interpolation Spline",
         "aliases" : ""
      },
      {
         "aliases" : "as.polySpline",
         "title" : "Piecewise Polynomial Spline Representation",
         "package" : "splines",
         "desc" : " Create the piecewise polynomial representation of a spline object. ",
         "name" : "polySpline"
      },
      {
         "title" : "Evaluate a Spline Basis",
         "aliases" : "predict.ns",
         "desc" : " Evaluate a predefined spline basis at given values. ",
         "name" : "predict.bs",
         "package" : "splines"
      },
      {
         "aliases" : "predict.nbSpline:predict.pbSpline:predict.npolySpline:predict.ppolySpline",
         "title" : "Evaluate a Spline at New Values of x",
         "package" : "splines",
         "desc" : " The predict methods for the classes that inherit from the virtual classes bSpline and polySpline are used to evaluate the spline or its derivatives. The plot method for a spline object first evaluates predict with the x argument missing, then plots the resulting xyVector with type = \"l\".",
         "name" : "predict.bSpline"
      },
      {
         "package" : "splines",
         "desc" : " Evaluate the design matrix for the B-splines defined by knots at the values in x. ",
         "name" : "splineDesign",
         "aliases" : "spline.des",
         "title" : "Design Matrix for B-splines"
      },
      {
         "package" : "splines",
         "name" : "splineKnots",
         "desc" : " Return the knot vector corresponding to a spline object. ",
         "aliases" : "",
         "title" : "Knot Vector from a Spline"
      },
      {
         "title" : "Determine the Order of a Spline",
         "aliases" : "",
         "name" : "splineOrder",
         "desc" : " Return the order of a spline object. ",
         "package" : "splines"
      },
      {
         "package" : "splines",
         "name" : "splines-package",
         "desc" : " Regression spline functions and classes. ",
         "aliases" : "splines",
         "title" : " Regression Spline Functions and Classes "
      },
      {
         "title" : "Construct an xyVector Object",
         "aliases" : "",
         "name" : "xyVector",
         "desc" : " Create an object to represent a set of x-y pairs. The resulting object can be treated as a matrix or as a data frame or as a vector. When treated as a vector it reduces to the y component only. The result of functions such as predict.spline is returned as an xyVector object so the x-values used to generate the y-positions are retained, say for purposes of generating plots. ",
         "package" : "splines"
      },
      {
         "name" : "acf",
         "desc" : " The function acf computes (and by default plots) estimates of the autocovariance or autocorrelation function. Function pacf is the function used for the partial autocorrelations. Function ccf computes the cross-correlation or cross-covariance of two univariate series. ",
         "package" : "stats",
         "title" : "Auto- and Cross- Covariance and -Correlation Function Estimation",
         "aliases" : "ccf:pacf:pacf.default:[.acf"
      },
      {
         "desc" : " Compute an AR process exactly fitting an autocorrelation function. ",
         "name" : "acf2AR",
         "package" : "stats",
         "title" : "Compute an AR Process Exactly Fitting an ACF",
         "aliases" : ""
      },
      {
         "package" : "stats",
         "desc" : " Compute all the single terms in the scope argument that can be added to or dropped from the model, fit those models and compute a table of the changes in fit. ",
         "name" : "add1",
         "aliases" : "add1.default:add1.lm:add1.glm:drop1:drop1.default:drop1.lm:drop1.glm",
         "title" : "Add or Drop All Possible Single Terms to a Model"
      },
      {
         "name" : "addmargins",
         "desc" : " For a given table one can specify which of the classifying factors to expand by one or more levels to hold margins to be calculated. One may for example form sums and means over the first dimension and medians over the second. The resulting table will then have two extra levels for the first dimension and one extra level for the second. The default is to sum over all margins in the table. Other possibilities may give results that depend on the order in which the margins are computed. This is flagged in the printed output from the function. ",
         "package" : "stats",
         "title" : " Puts Arbitrary Margins on Multidimensional Tables or Arrays ",
         "aliases" : ""
      },
      {
         "package" : "stats",
         "desc" : " Splits the data into subsets, computes summary statistics for each, and returns the result in a convenient form. ",
         "name" : "aggregate",
         "aliases" : "aggregate.default:aggregate.data.frame:aggregate.formula:aggregate.ts",
         "title" : "Compute Summary Statistics of Data Subsets"
      },
      {
         "aliases" : "BIC",
         "title" : "Akaike's An Information Criterion",
         "package" : "stats",
         "desc" : " Generic function calculating Akaike's An Information Criterion for one or several fitted model objects for which a log-likelihood value can be obtained, according to the formula -2 \\\\mbox{log-likelihood} + k n_{par}-2*log-likelihood + k*npar, where n_{par}npar represents the number of parameters in the fitted model, and k = 2 for the usual AIC, or k = \\\\log(n)k = log(n) (n being the number of observations) for the so-called BIC or SBC (Schwarz's Bayesian criterion). ",
         "name" : "AIC"
      },
      {
         "name" : "alias",
         "desc" : " Find aliases (linearly dependent terms) in a linear model specified by a formula. ",
         "package" : "stats",
         "title" : "Find Aliases (Dependencies) in a Model",
         "aliases" : "alias.formula:alias.lm"
      },
      {
         "aliases" : "",
         "title" : "Analysis of Deviance for Generalized Linear Model Fits",
         "package" : "stats",
         "desc" : " Compute an analysis of deviance table for one or more generalized linear model fits. ",
         "name" : "anova.glm"
      },
      {
         "aliases" : "anova.lmlist",
         "title" : "ANOVA for Linear Model Fits",
         "package" : "stats",
         "name" : "anova.lm",
         "desc" : " Compute an analysis of variance table for one or more linear model fits. "
      },
      {
         "title" : "Comparisons between Multivariate Linear Models",
         "aliases" : "",
         "desc" : " Compute a (generalized) analysis of variance table for one or more multivariate linear models. ",
         "name" : "anova.mlm",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "desc" : " Compute analysis of variance (or deviance) tables for one or more fitted model objects. ",
         "name" : "anova",
         "aliases" : "",
         "title" : "Anova Tables"
      },
      {
         "package" : "stats",
         "desc" : " Performs the Ansari-Bradley two-sample test for a difference in scale parameters. ",
         "name" : "ansari.test",
         "aliases" : "ansari.test.default:ansari.test.formula",
         "title" : "Ansari-Bradley Test"
      },
      {
         "desc" : " Fit an analysis of variance model by a call to lm for each stratum. ",
         "name" : "aov",
         "package" : "stats",
         "title" : "Fit an Analysis of Variance Model",
         "aliases" : "print.aov:print.aovlist:Error"
      },
      {
         "name" : "approxfun",
         "desc" : " Return a list of points which linearly interpolate given data points, or a function performing the linear (or constant) interpolation. ",
         "package" : "stats",
         "title" : "Interpolation Functions",
         "aliases" : "approxfun"
      },
      {
         "desc" : " Fit an autoregressive time series model to the data by ordinary least squares, by default selecting the complexity by AIC. ",
         "name" : "ar.ols",
         "package" : "stats",
         "title" : "Fit Autoregressive Models to Time Series by OLS",
         "aliases" : ""
      },
      {
         "package" : "stats",
         "name" : "ar",
         "desc" : " Fit an autoregressive time series model to the data, by default selecting the complexity by AIC. ",
         "aliases" : "ar.burg:ar.burg.default:ar.burg.mts:ar.yw:ar.yw.default:ar.yw.mts:ar.mle:print.ar:predict.ar",
         "title" : "Fit Autoregressive Models to Time Series"
      },
      {
         "desc" : " Fit an ARIMA model to a univariate time series. ",
         "name" : "arima",
         "package" : "stats",
         "title" : "ARIMA Modelling of Time Series",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Simulate from an ARIMA Model",
         "package" : "stats",
         "name" : "arima.sim",
         "desc" : " Simulate from an ARIMA model. "
      },
      {
         "package" : "stats",
         "desc" : " Fit an ARIMA model to a univariate time series, and forecast from the fitted model. ",
         "name" : "arima0",
         "aliases" : "print.arima0:predict.arima0",
         "title" : "ARIMA Modelling of Time Series -- Preliminary Version"
      },
      {
         "aliases" : "",
         "title" : "Compute Theoretical ACF for an ARMA Process",
         "package" : "stats",
         "name" : "ARMAacf",
         "desc" : " Compute the theoretical autocorrelation function or partial autocorrelation function for an ARMA process. "
      },
      {
         "aliases" : "",
         "title" : "Convert ARMA Process to Infinite MA Process",
         "package" : "stats",
         "desc" : " Convert ARMA process to infinite MA process. ",
         "name" : "ARMAtoMA"
      },
      {
         "aliases" : "as.hclust.default:as.hclust.twins",
         "title" : "Convert Objects to Class hclust",
         "package" : "stats",
         "name" : "as.hclust",
         "desc" : " Converts objects from other hierarchical clustering functions to class \"hclust\". "
      },
      {
         "aliases" : "",
         "title" : "Convert to One-Sided Formula",
         "package" : "stats",
         "desc" : " Names, expressions, numeric values, and character strings are converted to one-sided formulae. If object is a formula, it must be one-sided, in which case it is returned unaltered. ",
         "name" : "asOneSidedFormula"
      },
      {
         "title" : "Group Averages Over Level Combinations of Factors",
         "aliases" : "",
         "name" : "ave",
         "desc" : " Subsets of x[] are averaged, where each subset consist of those observations with the same factor levels. ",
         "package" : "stats"
      },
      {
         "name" : "bandwidth",
         "desc" : " Bandwidth selectors for Gaussian kernels in density. ",
         "package" : "stats",
         "title" : "Bandwidth Selectors for Kernel Density Estimation",
         "aliases" : "bw.nrd:bw.ucv:bw.bcv:bw.SJ"
      },
      {
         "aliases" : "bartlett.test.default:bartlett.test.formula",
         "title" : "Bartlett Test of Homogeneity of Variances",
         "package" : "stats",
         "name" : "bartlett.test",
         "desc" : " Performs Bartlett's test of the null that the variances in each of the groups (samples) are the same. "
      },
      {
         "title" : "The Beta Distribution",
         "aliases" : "dbeta:pbeta:qbeta:rbeta",
         "desc" : " Density, distribution function, quantile function and random generation for the Beta distribution with parameters shape1 and shape2 (and optional non-centrality parameter ncp). ",
         "name" : "Beta",
         "package" : "stats"
      },
      {
         "desc" : " Performs an exact test of a simple null hypothesis about the probability of success in a Bernoulli experiment. ",
         "name" : "binom.test",
         "package" : "stats",
         "title" : "Exact Binomial Test",
         "aliases" : ""
      },
      {
         "aliases" : "dbinom:pbinom:qbinom:rbinom",
         "title" : "The Binomial Distribution",
         "package" : "stats",
         "name" : "Binomial",
         "desc" : " Density, distribution function, quantile function and random generation for the binomial distribution with parameters size and prob. This is conventionally interpreted as the number of successes in size trials. "
      },
      {
         "title" : " Biplot for Principal Components ",
         "aliases" : "biplot.prcomp",
         "name" : "biplot.princomp",
         "desc" : " Produces a biplot (in the strict sense) from the output of princomp or prcomp ",
         "package" : "stats"
      },
      {
         "desc" : " Plot a biplot on the current graphics device. ",
         "name" : "biplot",
         "package" : "stats",
         "title" : "Biplot of Multivariate Data",
         "aliases" : "biplot.default"
      },
      {
         "package" : "stats",
         "desc" : " Computes answers to a generalised birthday paradox problem. pbirthday computes the probability of a coincidence and qbirthday computes the smallest number of observations needed to have at least a specified probability of coincidence. ",
         "name" : "birthday",
         "aliases" : "pbirthday",
         "title" : "Probability of coincidences"
      },
      {
         "package" : "stats",
         "name" : "Box.test",
         "desc" : " Compute the Box--Pierce or Ljung--Box test statistic for examining the null hypothesis of independence in a given time series. These are sometimes known as portmanteau tests. ",
         "aliases" : "",
         "title" : "Box-Pierce and Ljung-Box Tests"
      },
      {
         "name" : "cancor",
         "desc" : " Compute the canonical correlations between two data matrices. ",
         "package" : "stats",
         "title" : "Canonical Correlations",
         "aliases" : ""
      },
      {
         "package" : "stats",
         "desc" : " Simple utilities returning (non-missing) case names, and (non-eliminated) variable names. ",
         "name" : "case+variable.names",
         "aliases" : "case.names.lm:variable.names:variable.names.lm",
         "title" : "Case and Variable Names of Fitted Models"
      },
      {
         "aliases" : "dcauchy:pcauchy:qcauchy:rcauchy",
         "title" : "The Cauchy Distribution",
         "package" : "stats",
         "desc" : " Density, distribution function, quantile function and random generation for the Cauchy distribution with location parameter location and scale parameter scale. ",
         "name" : "Cauchy"
      },
      {
         "desc" : " .checkMFClasses checks if the variables used in a predict method agree in type with those used for fitting. .MFclass categorizes variables for this purpose. ",
         "name" : ".checkMFClasses",
         "package" : "stats",
         "title" : "Functions to Check the Type of Variables passed to Model Frames",
         "aliases" : ".MFclass:.getXlevels"
      },
      {
         "package" : "stats",
         "desc" : " chisq.test performs chi-squared contingency table tests and goodness-of-fit tests. ",
         "name" : "chisq.test",
         "aliases" : "",
         "title" : "Pearson's Chi-squared Test for Count Data"
      },
      {
         "aliases" : "dchisq:pchisq:qchisq:rchisq",
         "title" : "The (non-central) Chi-Squared Distribution",
         "package" : "stats",
         "name" : "Chisquare",
         "desc" : " Density, distribution function, quantile function and random generation for the chi-squared (\\\\chi^2chi^2) distribution with df degrees of freedom and optional non-centrality parameter ncp. "
      },
      {
         "title" : "Classical (Metric) Multidimensional Scaling",
         "aliases" : "",
         "name" : "cmdscale",
         "desc" : " Classical multidimensional scaling of a data matrix. Also known as principal coordinates analysis (Gower, 1966). ",
         "package" : "stats"
      },
      {
         "aliases" : "coefficients",
         "title" : "Extract Model Coefficients",
         "package" : "stats",
         "desc" : " coef is a generic function which extracts model coefficients from objects returned by modeling functions. coefficients is an alias for it. ",
         "name" : "coef"
      },
      {
         "name" : "complete.cases",
         "desc" : " Return a logical vector indicating which cases are complete, i.e., have no missing values. ",
         "package" : "stats",
         "title" : "Find Complete Cases",
         "aliases" : ""
      },
      {
         "aliases" : "confint.default:confint.lm",
         "title" : "Confidence Intervals for Model Parameters",
         "package" : "stats",
         "desc" : " Computes confidence intervals for one or more parameters in a fitted model. There is a default and a method for objects inheriting from class \"lm\". ",
         "name" : "confint"
      },
      {
         "desc" : " Minimise a function subject to linear inequality constraints using an adaptive barrier algorithm. ",
         "name" : "constrOptim",
         "package" : "stats",
         "title" : "Linearly Constrained Optimization",
         "aliases" : ""
      },
      {
         "aliases" : "contr.poly:contr.sum:contr.treatment:contr.SAS",
         "title" : "(Possibly Sparse) Contrast Matrices",
         "package" : "stats",
         "desc" : " Return a matrix of contrasts. ",
         "name" : "contrast"
      },
      {
         "aliases" : "contrasts<-",
         "title" : "Get and Set Contrast Matrices",
         "package" : "stats",
         "desc" : " Set and view the contrasts associated with a factor. ",
         "name" : "contrasts"
      },
      {
         "aliases" : "",
         "title" : "Convolution of Sequences via FFT",
         "package" : "stats",
         "name" : "convolve",
         "desc" : " Use the Fast Fourier Transform to compute the several kinds of convolutions of two sequences. "
      },
      {
         "title" : "Cophenetic Distances for a Hierarchical Clustering",
         "aliases" : "cophenetic.default:cophenetic.dendrogram",
         "name" : "cophenetic",
         "desc" : " Computes the cophenetic distances for a hierarchical clustering. ",
         "package" : "stats"
      },
      {
         "name" : "cor",
         "desc" : " var, cov and cor compute the variance of x and the covariance or correlation of x and y if these are vectors. If x and y are matrices then the covariances (or correlations) between the columns of x and the columns of y are computed. cov2cor scales a covariance matrix into the corresponding correlation matrix efficiently. ",
         "package" : "stats",
         "title" : "Correlation, Variance and Covariance (Matrices)",
         "aliases" : "cov:cor:cov2cor"
      },
      {
         "title" : "Test for Association/Correlation Between Paired Samples",
         "aliases" : "cor.test.default:cor.test.formula",
         "desc" : " Test for association between paired samples, using one of Pearson's product moment correlation coefficient, Kendall's \\\\tautau or Spearman's \\\\rhorho. ",
         "name" : "cor.test",
         "package" : "stats"
      },
      {
         "desc" : " Returns a list containing estimates of the weighted covariance matrix and the mean of the data, and optionally of the (weighted) correlation matrix.",
         "name" : "cov.wt",
         "package" : "stats",
         "title" : "Weighted Covariance Matrices",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : " Plot Cumulative Periodogram ",
         "package" : "stats",
         "name" : "cpgram",
         "desc" : " Plots a cumulative periodogram. "
      },
      {
         "title" : "Cut a Tree into Groups of Data",
         "aliases" : "",
         "desc" : " Cuts a tree, e.g., as resulting from hclust, into several groups either by specifying the desired number(s) of groups or the cut height(s). ",
         "name" : "cutree",
         "package" : "stats"
      },
      {
         "aliases" : "plot.decomposed.ts",
         "title" : " Classical Seasonal Decomposition by Moving Averages ",
         "package" : "stats",
         "desc" : " Decompose a time series into seasonal, trend and irregular components using moving averages. Deals with additive or multiplicative seasonal component. ",
         "name" : "decompose"
      },
      {
         "title" : "Modify Terms Objects",
         "aliases" : "drop.terms:delete.response:[.terms",
         "name" : "delete.response",
         "desc" : " delete.response returns a terms object for the same model but with no response variable. drop.terms removes variables from the right-hand side of the model. There is also a \"[.terms\" method to perform the same function (with keep.response = TRUE). reformulate creates a formula from a character vector. ",
         "package" : "stats"
      },
      {
         "aliases" : "",
         "title" : "Apply a Function to All Nodes of a Dendrogram",
         "package" : "stats",
         "desc" : " Apply function FUN to each node of a dendrogram recursively. When y <- dendrapply(x, fn), then y is a dendrogram of the same graph structure as x and for each node, y.node[j] <- FUN( x.node[j], ...) (where y.node[j] is an (invalid!) notation for the j-th node of y. ",
         "name" : "dendrapply"
      },
      {
         "title" : "General Tree Structures",
         "aliases" : "as.dendrogram:as.dendrogram.dendrogram:as.dendrogram.hclust:as.hclust.dendrogram:cut.dendrogram:[[.dendrogram:merge.dendrogram:nobs.dendrogram:plot.dendrogram:print.dendrogram:rev.dendrogram:str.dendrogram:is.leaf",
         "name" : "dendrogram",
         "desc" : " Class \"dendrogram\" provides general functions for handling tree-like structures. It is intended as a replacement for similar functions in hierarchical clustering and classification/regression trees, such that all of these can use the same engine for plotting or cutting trees. ",
         "package" : "stats"
      },
      {
         "aliases" : "density.default",
         "title" : "Kernel Density Estimation",
         "package" : "stats",
         "desc" : " The (S3) generic function density computes kernel density estimates. Its default method does so with the given kernel and bandwidth for univariate observations. ",
         "name" : "density"
      },
      {
         "name" : "deriv",
         "desc" : " Compute derivatives of simple expressions, symbolically. ",
         "package" : "stats",
         "title" : "Symbolic and Algorithmic Derivatives of Simple Expressions",
         "aliases" : "deriv:deriv.default:deriv.formula:deriv3:deriv3.default:deriv3.formula"
      },
      {
         "package" : "stats",
         "desc" : " Returns the deviance of a fitted model object. ",
         "name" : "deviance",
         "aliases" : "",
         "title" : "Model Deviance"
      },
      {
         "aliases" : "",
         "title" : "Residual Degrees-of-Freedom",
         "package" : "stats",
         "desc" : " Returns the residual degrees-of-freedom extracted from a fitted model object. ",
         "name" : "df.residual"
      },
      {
         "title" : "Discrete Integration: Inverse of Differencing",
         "aliases" : "diffinv.default:diffinv.ts",
         "desc" : " Computes the inverse function of the lagged differences function diff. ",
         "name" : "diffinv",
         "package" : "stats"
      },
      {
         "name" : "dist",
         "desc" : " This function computes and returns the distance matrix computed by using the specified distance measure to compute the distances between the rows of a data matrix. ",
         "package" : "stats",
         "title" : "Distance Matrix Computation",
         "aliases" : "print.dist:format.dist:labels.dist:as.matrix.dist:as.dist:as.dist.default"
      },
      {
         "aliases" : "distributions:Distributions",
         "title" : "Distributions in the stats package",
         "package" : "stats",
         "desc" : " Density, cumulative distribution function, quantile function and random variate generation for many standard probability distributions are available in the stats package. ",
         "name" : "Distributions"
      },
      {
         "title" : "Extract Coefficients in Original Coding",
         "aliases" : "dummy.coef.lm:dummy.coef.aovlist",
         "desc" : " This extracts coefficients in terms of the original levels of the coefficients rather than the coded variables. ",
         "name" : "dummy.coef",
         "package" : "stats"
      },
      {
         "title" : "Empirical Cumulative Distribution Function",
         "aliases" : "plot.ecdf:print.ecdf:summary.ecdf:quantile.ecdf",
         "desc" : " Compute an empirical cumulative distribution function, with several methods for plotting, printing and computing with such an ecdf object. ",
         "name" : "ecdf",
         "package" : "stats"
      },
      {
         "title" : "Compute Efficiencies of Multistratum Analysis of Variance",
         "aliases" : "",
         "desc" : " Computes the efficiencies of fixed-effect terms in an analysis of variance model with multiple strata. ",
         "name" : "eff.aovlist",
         "package" : "stats"
      },
      {
         "desc" : " Returns (orthogonal) effects from a fitted model, usually a linear model. This is a generic function, but currently only has a methods for objects inheriting from classes \"lm\" and \"glm\". ",
         "name" : "effects",
         "package" : "stats",
         "title" : "Effects from Fitted Model",
         "aliases" : "effects.lm:effects.glm"
      },
      {
         "title" : "Embedding a Time Series",
         "aliases" : "",
         "name" : "embed",
         "desc" : " Embeds the time series x into a low-dimensional Euclidean space. ",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "desc" : " Evaluates new variables as if they had been part of the formula of the specified model. This ensures that the same na.action and subset arguments are applied and allows, for example, x to be recovered for a model using sin(x) as a predictor. ",
         "name" : "expand.model.frame",
         "aliases" : "",
         "title" : "Add new variables to a model frame"
      },
      {
         "title" : "The Exponential Distribution",
         "aliases" : "dexp:pexp:qexp:rexp",
         "desc" : " Density, distribution function, quantile function and random generation for the exponential distribution with rate rate (i.e., mean 1/rate). ",
         "name" : "Exponential",
         "package" : "stats"
      },
      {
         "title" : "Extract AIC from a Fitted Model",
         "aliases" : "",
         "desc" : " Computes the (generalized) Akaike An Information Criterion for a fitted parametric model. ",
         "name" : "extractAIC",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "desc" : " Perform maximum-likelihood factor analysis on a covariance matrix or data matrix. ",
         "name" : "factanal",
         "aliases" : "",
         "title" : "Factor Analysis"
      },
      {
         "package" : "stats",
         "desc" : " add.scope and drop.scope compute those terms that can be individually added to or dropped from a model while respecting the hierarchy of terms. ",
         "name" : "factor.scope",
         "aliases" : "drop.scope:factor.scope",
         "title" : "Compute Allowed Changes in Adding to or Dropping from a Formula"
      },
      {
         "title" : "Family Objects for Models",
         "aliases" : "binomial:gaussian:Gamma:inverse.gaussian:poisson:quasi:quasibinomial:quasipoisson",
         "desc" : " Family objects provide a convenient way to specify the details of the models used by functions such as glm. See the documentation for glm for the details on how such model fitting takes place. ",
         "name" : "family",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "name" : "FDist",
         "desc" : " Density, distribution function, quantile function and random generation for the F distribution with df1 and df2 degrees of freedom (and optional non-centrality parameter ncp). ",
         "aliases" : "df:pf:qf:rf",
         "title" : "The F Distribution"
      },
      {
         "title" : "Fast Discrete Fourier Transform (FFT)",
         "aliases" : "mvfft",
         "desc" : " Computes the Discrete Fourier Transform (DFT) of an array with a fast algorithm, the Fast Fourier Transform (FFT). ",
         "name" : "fft",
         "package" : "stats"
      },
      {
         "title" : "Linear Filtering on a Time Series",
         "aliases" : "",
         "desc" : " Applies linear filtering to a univariate time series or to each series separately of a multivariate time series. ",
         "name" : "filter",
         "package" : "stats"
      },
      {
         "desc" : " Performs Fisher's exact test for testing the null of independence of rows and columns in a contingency table with fixed marginals. ",
         "name" : "fisher.test",
         "package" : "stats",
         "title" : "Fisher's Exact Test for Count Data",
         "aliases" : ""
      },
      {
         "name" : "fitted",
         "desc" : " fitted is a generic function which extracts fitted values from objects returned by modeling functions. fitted.values is an alias for it. All object classes which are returned by model fitting functions should provide a fitted method. (Note that the generic is fitted and not fitted.values.) Methods can make use of napredict methods to compensate for the omission of missing values. The default and nls methods do. ",
         "package" : "stats",
         "title" : "Extract Model Fitted Values",
         "aliases" : "fitted:fitted.default"
      },
      {
         "name" : "fivenum",
         "desc" : " Returns Tukey's five number summary (minimum, lower-hinge, median, upper-hinge, maximum) for the input data. ",
         "package" : "stats",
         "title" : "Tukey Five-Number Summaries",
         "aliases" : ""
      },
      {
         "title" : "Fligner-Killeen Test of Homogeneity of Variances",
         "aliases" : "fligner.test.default:fligner.test.formula",
         "name" : "fligner.test",
         "desc" : " Performs a Fligner-Killeen (median) test of the null that the variances in each of the groups (samples) are the same. ",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "name" : "formula.nls",
         "desc" : " Returns the model used to fit object. ",
         "aliases" : "",
         "title" : "Extract Model Formula from nls Object"
      },
      {
         "title" : "Model Formulae",
         "aliases" : "formula.default:formula.formula:formula.terms:formula.data.frame:as.formula:print.formula:[.formula",
         "desc" : " The generic function formula and its specific methods provide a way of extracting formulae which have been included in other objects. as.formula is almost identical, additionally preserving attributes when object already inherits from \"formula\". ",
         "name" : "formula",
         "package" : "stats"
      },
      {
         "desc" : " Performs a Friedman rank sum test with unreplicated blocked data. ",
         "name" : "friedman.test",
         "package" : "stats",
         "title" : "Friedman Rank Sum Test",
         "aliases" : "friedman.test.default:friedman.test.formula"
      },
      {
         "aliases" : "",
         "title" : "Formula Notation for Flat Contingency Tables",
         "package" : "stats",
         "desc" : "Produce or manipulate a flat contingency table using formula notation.",
         "name" : "ftable.formula"
      },
      {
         "package" : "stats",
         "name" : "ftable",
         "desc" : "Create flat contingency tables.",
         "aliases" : "ftable.default",
         "title" : "Flat Contingency Tables"
      },
      {
         "name" : "GammaDist",
         "desc" : " Density, distribution function, quantile function and random generation for the Gamma distribution with parameters shape and scale. ",
         "package" : "stats",
         "title" : "The Gamma Distribution",
         "aliases" : "dgamma:pgamma:qgamma:rgamma"
      },
      {
         "package" : "stats",
         "desc" : " Density, distribution function, quantile function and random generation for the geometric distribution with parameter prob. ",
         "name" : "Geometric",
         "aliases" : "dgeom:pgeom:qgeom:rgeom",
         "title" : "The Geometric Distribution"
      },
      {
         "aliases" : "getInitial.default:getInitial.formula:getInitial.selfStart",
         "title" : "Get Initial Parameter Estimates",
         "package" : "stats",
         "desc" : " This function evaluates initial parameter estimates for a nonlinear regression model. If data is a parameterized data frame or pframe object, its parameters attribute is returned. Otherwise the object is examined to see if it contains a call to a selfStart object whose initial attribute can be evaluated. ",
         "name" : "getInitial"
      },
      {
         "title" : "Auxiliary for Controlling GLM Fitting",
         "aliases" : "",
         "name" : "glm.control",
         "desc" : " Auxiliary function for glm fitting. Typically only used internally by glm.fit, but may be used to construct a control argument to either function. ",
         "package" : "stats"
      },
      {
         "aliases" : "glm.fit:weights.glm",
         "title" : "Fitting Generalized Linear Models",
         "package" : "stats",
         "name" : "glm",
         "desc" : " glm is used to fit generalized linear models, specified by giving a symbolic description of the linear predictor and a description of the error distribution. "
      },
      {
         "desc" : " These functions are all methods for class glm or summary.glm objects. ",
         "name" : "glm.summaries",
         "package" : "stats",
         "title" : "Accessing Generalized Linear Model Fits",
         "aliases" : "residuals.glm"
      },
      {
         "name" : "hclust",
         "desc" : " Hierarchical cluster analysis on a set of dissimilarities and methods for analyzing it. ",
         "package" : "stats",
         "title" : "Hierarchical Clustering",
         "aliases" : "plot.hclust:print.hclust"
      },
      {
         "aliases" : "",
         "title" : " Draw a Heat Map ",
         "package" : "stats",
         "name" : "heatmap",
         "desc" : " A heat map is a false color image (basically image(t(x))) with a dendrogram added to the left side and to the top. Typically, reordering of the rows and columns according to some set of values (row or column means) within the restrictions imposed by the dendrogram is carried out. "
      },
      {
         "desc" : " Computes Holt-Winters Filtering of a given time series. Unknown parameters are determined by minimizing the squared prediction error. ",
         "name" : "HoltWinters",
         "package" : "stats",
         "title" : "Holt-Winters Filtering",
         "aliases" : "print.HoltWinters:residuals.HoltWinters"
      },
      {
         "aliases" : "dhyper:phyper:qhyper:rhyper",
         "title" : "The Hypergeometric Distribution",
         "package" : "stats",
         "name" : "Hypergeometric",
         "desc" : " Density, distribution function, quantile function and random generation for the hypergeometric distribution. "
      },
      {
         "name" : "identify.hclust",
         "desc" : " identify.hclust reads the position of the graphics pointer when the (first) mouse button is pressed. It then cuts the tree at the vertical position of the pointer and highlights the cluster containing the horizontal position of the pointer. Optionally a function is applied to the index of data points contained in the cluster. ",
         "package" : "stats",
         "title" : "Identify Clusters in a Dendrogram",
         "aliases" : ""
      },
      {
         "name" : "influence.measures",
         "desc" : " This suite of functions can be used to compute some of the regression (leave-one-out deletion) diagnostics for linear and generalized linear models discussed in Belsley, Kuh and Welsch (1980), Cook and Weisberg (1982), etc. ",
         "package" : "stats",
         "title" : "Regression Deletion Diagnostics",
         "aliases" : "hat:hatvalues:hatvalues.lm:rstandard:rstandard.lm:rstandard.glm:rstudent:rstudent.lm:rstudent.glm:dfbeta:dfbeta.lm:dfbetas:dfbetas.lm:dffits:covratio:cooks.distance:cooks.distance.lm:cooks.distance.glm"
      },
      {
         "name" : "integrate",
         "desc" : " Adaptive quadrature of functions of one variable over a finite or infinite interval. ",
         "package" : "stats",
         "title" : "Integration of One-Dimensional Functions",
         "aliases" : "print.integrate"
      },
      {
         "title" : "Two-way Interaction Plot",
         "aliases" : "",
         "desc" : " Plots the mean (or other summary) of the response for two-way combinations of factors, thereby illustrating possible interactions. ",
         "name" : "interaction.plot",
         "package" : "stats"
      },
      {
         "aliases" : "",
         "title" : "The Interquartile Range",
         "package" : "stats",
         "name" : "IQR",
         "desc" : "computes interquartile range of the x values."
      },
      {
         "aliases" : "",
         "title" : "Test if a Model's Formula is Empty",
         "package" : "stats",
         "desc" : " 's formula notation allows models with no intercept and no predictors. These require special handling internally. is.empty.model() checks whether an object describes an empty model. ",
         "name" : "is.empty.model"
      },
      {
         "title" : "Isotonic / Monotone Regression",
         "aliases" : "",
         "desc" : " Compute the isotonic (monotonely increasing nonparametric) least squares regression which is piecewise constant. ",
         "name" : "isoreg",
         "package" : "stats"
      },
      {
         "name" : "KalmanLike",
         "desc" : " Use Kalman Filtering to find the (Gaussian) log-likelihood, or for forecasting or smoothing. ",
         "package" : "stats",
         "title" : "Kalman Filtering",
         "aliases" : "KalmanRun:KalmanSmooth:KalmanForecast:makeARIMA"
      },
      {
         "package" : "stats",
         "name" : "kernapply",
         "desc" : " kernapply computes the convolution between an input sequence and a specific kernel. ",
         "aliases" : "kernapply.default:kernapply.ts:kernapply.tskernel:kernapply.vector",
         "title" : "Apply Smoothing Kernel"
      },
      {
         "aliases" : "bandwidth.kernel:df.kernel:is.tskernel:plot.tskernel",
         "title" : "Smoothing Kernel Objects",
         "package" : "stats",
         "name" : "kernel",
         "desc" : " The \"tskernel\" class is designed to represent discrete symmetric normalized smoothing kernels. These kernels can be used to smooth vectors, matrices, or time series objects. There are print, plot and [ methods for these kernel objects. "
      },
      {
         "aliases" : "print.kmeans:fitted.kmeans",
         "title" : " K-Means Clustering ",
         "package" : "stats",
         "name" : "kmeans",
         "desc" : " Perform k-means clustering on a data matrix. "
      },
      {
         "aliases" : "kruskal.test.default:kruskal.test.formula",
         "title" : "Kruskal-Wallis Rank Sum Test",
         "package" : "stats",
         "name" : "kruskal.test",
         "desc" : " Performs a Kruskal-Wallis rank sum test. "
      },
      {
         "title" : "Kolmogorov-Smirnov Tests",
         "aliases" : "",
         "name" : "ks.test",
         "desc" : " Perform a one- or two-sample Kolmogorov-Smirnov test. ",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "desc" : " The Nadaraya--Watson kernel regression estimate. ",
         "name" : "ksmooth",
         "aliases" : "",
         "title" : "Kernel Regression Smoother"
      },
      {
         "title" : "Time Series Lag Plots",
         "aliases" : "",
         "name" : "lag.plot",
         "desc" : " Plot time series against lagged versions of themselves. Helps visualizing auto-dependence even when auto-correlations vanish. ",
         "package" : "stats"
      },
      {
         "aliases" : "lag.default",
         "title" : "Lag a Time Series",
         "package" : "stats",
         "desc" : " Compute a lagged version of a time series, shifting the time base back by a given number of observations. lag is a generic function; this page documents its default method. ",
         "name" : "lag"
      },
      {
         "package" : "stats",
         "desc" : " Fit a line robustly as recommended in Exploratory Data Analysis. ",
         "name" : "line",
         "aliases" : "residuals.tukeyline",
         "title" : "Robust Line Fitting"
      },
      {
         "desc" : " Class \"listof\" is used by aov and the \"lm\" method of alias for lists of model fits or parts thereof. It is simply a list with an assigned class to control the way methods, especially printing, act on it. It has a coef method in this package (which returns an object of this class), and [ and print methods in package base. ",
         "name" : "listof",
         "package" : "stats",
         "title" : "A Class for Lists of (Parts of) Model Fits",
         "aliases" : ""
      },
      {
         "name" : "lm.influence",
         "desc" : " This function provides the basic quantities which are used in forming a wide variety of diagnostics for checking the quality of regression fits. ",
         "package" : "stats",
         "title" : "Regression Diagnostics",
         "aliases" : "influence:influence.lm:influence.glm"
      },
      {
         "title" : "Fitting Linear Models",
         "aliases" : "",
         "desc" : " lm is used to fit linear models. It can be used to carry out regression, single stratum analysis of variance and analysis of covariance (although aov may provide a more convenient interface for these). ",
         "name" : "lm",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "name" : "lm.summaries",
         "desc" : " All these functions are methods for class \"lm\" objects. ",
         "aliases" : "formula.lm:residuals.lm:labels.lm",
         "title" : "Accessing Linear Model Fits"
      },
      {
         "desc" : " These are the basic computing engines called by lm used to fit linear models. These should usually not be used directly unless by experienced users. .lm.fit() is bare bone wrapper to the innermost QR-based C code, on which glm.fit and lsfit are based as well, for even more experienced users. ",
         "name" : "lm.fit",
         "package" : "stats",
         "title" : "Fitter Functions for Linear Models",
         "aliases" : "lm.wfit:.lm.fit"
      },
      {
         "package" : "stats",
         "name" : "loadings",
         "desc" : " Extract or print loadings in factor analysis (or principal components analysis). ",
         "aliases" : "print.loadings:print.factanal",
         "title" : "Print Loadings in Factor Analysis"
      },
      {
         "desc" : " Set control parameters for loess fits. ",
         "name" : "loess.control",
         "package" : "stats",
         "title" : "Set Parameters for Loess",
         "aliases" : ""
      },
      {
         "desc" : " Fit a polynomial surface determined by one or more numerical predictors, using local fitting. ",
         "name" : "loess",
         "package" : "stats",
         "title" : "Local Polynomial Regression Fitting",
         "aliases" : ""
      },
      {
         "title" : "The Logistic Distribution",
         "aliases" : "dlogis:plogis:qlogis:rlogis",
         "name" : "Logistic",
         "desc" : " Density, distribution function, quantile function and random generation for the logistic distribution with parameters location and scale. ",
         "package" : "stats"
      },
      {
         "title" : "Extract Log-Likelihood",
         "aliases" : "logLik.lm",
         "name" : "logLik",
         "desc" : " This function is generic; method functions can be written to handle specific classes of objects. Classes which have methods for this function include: \"glm\", \"lm\", \"nls\" and \"Arima\". Packages contain methods for other classes, such as \"fitdistr\", \"negbin\" and \"polr\" in package \\\\href{https://CRAN.R-project.org/package=#1}{\\\\pkg{#1}}MASShttps://CRAN.R-project.org/package=MASSMASS, \"multinom\" in package \\\\href{https://CRAN.R-project.org/package=#1}{\\\\pkg{#1}}nnethttps://CRAN.R-project.org/package=nnetnnet and \"gls\", \"gnls\" \"lme\" and others in package \\\\href{https://CRAN.R-project.org/package=#1}{\\\\pkg{#1}}nlmehttps://CRAN.R-project.org/package=nlmenlme. ",
         "package" : "stats"
      },
      {
         "title" : "Fitting Log-Linear Models",
         "aliases" : "",
         "name" : "loglin",
         "desc" : " loglin is used to fit log-linear models to multidimensional contingency tables by Iterative Proportional Fitting. ",
         "package" : "stats"
      },
      {
         "title" : "The Log Normal Distribution",
         "aliases" : "dlnorm:plnorm:qlnorm:rlnorm",
         "desc" : " Density, distribution function, quantile function and random generation for the log normal distribution whose logarithm has mean equal to meanlog and standard deviation equal to sdlog. ",
         "name" : "Lognormal",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "desc" : " This function performs the computations for the LOWESS smoother which uses locally-weighted polynomial regression (see the references). ",
         "name" : "lowess",
         "aliases" : "",
         "title" : "Scatter Plot Smoothing"
      },
      {
         "aliases" : "",
         "title" : "Compute Diagnostics for lsfit Regression Results",
         "package" : "stats",
         "desc" : " Computes basic statistics, including standard errors, t- and p-values for the regression coefficients. ",
         "name" : "ls.diag"
      },
      {
         "package" : "stats",
         "desc" : " Computes basic statistics, including standard errors, t- and p-values for the regression coefficients and prints them if print.it is TRUE. ",
         "name" : "ls.print",
         "aliases" : "",
         "title" : "Print lsfit Regression Results"
      },
      {
         "title" : "Find the Least Squares Fit",
         "aliases" : "",
         "name" : "lsfit",
         "desc" : " The least squares estimate of \\\\betab in the model \\\\bold{Y} = \\\\bold{X \\\\beta} + \\\\bold{\\\\epsilon}y = X b + e is found. ",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "name" : "mad",
         "desc" : " Compute the median absolute deviation, i.e., the (lo-/hi-) median of the absolute deviations from the median, and (by default) adjust by a factor for asymptotically normal consistency. ",
         "aliases" : "",
         "title" : "Median Absolute Deviation"
      },
      {
         "title" : "Mahalanobis Distance",
         "aliases" : "",
         "name" : "mahalanobis",
         "desc" : " Returns the squared Mahalanobis distance of all rows in x and the vector \\\\mumu = center with respect to \\\\SigmaSigma = cov. This is (for vector x) defined as D^2 = (x - \\\\mu)' \\\\Sigma^{-1} (x - \\\\mu)D^2 = (x - \\\\mu)' \\\\Sigma^-1 (x - \\\\mu) ",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "name" : "make.link",
         "desc" : " This function is used with the family functions in glm(). Given the name of a link, it returns a link function, an inverse link function, the derivative d\\\\mu / d\\\\etadmu/deta and a function for domain checking. ",
         "aliases" : "",
         "title" : "Create a Link for GLM Families"
      },
      {
         "aliases" : "makepredictcall.default:SafePrediction",
         "title" : "Utility Function for Safe Prediction",
         "package" : "stats",
         "name" : "makepredictcall",
         "desc" : " A utility to help model.frame.default create the right matrices when predicting from models with terms like (univariate) poly or ns. "
      },
      {
         "aliases" : "",
         "title" : "Multivariate Analysis of Variance",
         "package" : "stats",
         "desc" : " A class for the multivariate analysis of variance. ",
         "name" : "manova"
      },
      {
         "aliases" : "",
         "title" : "Cochran-Mantel-Haenszel Chi-Squared Test for Count Data",
         "package" : "stats",
         "desc" : " Performs a Cochran-Mantel-Haenszel chi-squared test of the null that two nominal variables are conditionally independent in each stratum, assuming that there is no three-way interaction. ",
         "name" : "mantelhaen.test"
      },
      {
         "package" : "stats",
         "desc" : " Tests whether a Wishart-distributed covariance matrix (or transformation thereof) is proportional to a given matrix. ",
         "name" : "mauchly.test",
         "aliases" : "mauchly.test.SSD:mauchly.test.mlm",
         "title" : "Mauchly's Test of Sphericity"
      },
      {
         "title" : "McNemar's Chi-squared Test for Count Data",
         "aliases" : "",
         "desc" : " Performs McNemar's chi-squared test for symmetry of rows and columns in a two-dimensional contingency table. ",
         "name" : "mcnemar.test",
         "package" : "stats"
      },
      {
         "name" : "median",
         "desc" : " Compute the sample median. ",
         "package" : "stats",
         "title" : "Median Value",
         "aliases" : "median.default"
      },
      {
         "name" : "medpolish",
         "desc" : " Fits an additive model using Tukey's median polish procedure. ",
         "package" : "stats",
         "title" : "Median Polish of a Matrix",
         "aliases" : ""
      },
      {
         "package" : "stats",
         "desc" : "Returns the response, offset, subset, weights or other special components of a model frame passed as optional arguments to model.frame. ",
         "name" : "model.extract",
         "aliases" : "model.offset:model.response:model.weights",
         "title" : "Extract Components from a Model Frame"
      },
      {
         "package" : "stats",
         "desc" : " model.frame (a generic function) and its methods return a data.frame with the variables needed to use formula and any arguments. ",
         "name" : "model.frame",
         "aliases" : "model.frame.default:model.frame.lm:model.frame.glm:model.frame.aovlist:get_all_vars",
         "title" : "Extracting the Model Frame from a Formula or Fit"
      },
      {
         "name" : "model.matrix",
         "desc" : " model.matrix creates a design (or model) matrix. ",
         "package" : "stats",
         "title" : "Construct Design Matrices",
         "aliases" : "model.matrix.default:model.matrix.lm"
      },
      {
         "title" : "Compute Tables of Results from an Aov Model Fit",
         "aliases" : "model.tables.aov:model.tables.aovlist",
         "desc" : " Computes summary tables for model fits, especially complex aov fits. ",
         "name" : "model.tables",
         "package" : "stats"
      },
      {
         "name" : "monthplot",
         "desc" : " These functions plot seasonal (or other) subseries of a time series. For each season (or other category), a time series is plotted. ",
         "package" : "stats",
         "title" : " Plot a Seasonal or other Subseries from a Time Series ",
         "aliases" : "monthplot.default:monthplot.ts:monthplot.stl:monthplot.StructTS"
      },
      {
         "aliases" : "mood.test.default:mood.test.formula",
         "title" : "Mood Two-Sample Test of Scale",
         "package" : "stats",
         "name" : "mood.test",
         "desc" : " Performs Mood's two-sample test for a difference in scale parameters. "
      },
      {
         "title" : "The Multinomial Distribution",
         "aliases" : "rmultinom:dmultinom",
         "desc" : " Generate multinomially distributed random number vectors and compute multinomial probabilities. ",
         "name" : "Multinom",
         "package" : "stats"
      },
      {
         "aliases" : "na.action.default",
         "title" : "NA Action",
         "package" : "stats",
         "desc" : " Extract information on the NA action used to create an object. ",
         "name" : "na.action"
      },
      {
         "name" : "na.contiguous",
         "desc" : " Find the longest consecutive stretch of non-missing values in a time series object. (In the event of a tie, the first such stretch.) ",
         "package" : "stats",
         "title" : "Find Longest Contiguous Stretch of non-NAs",
         "aliases" : "na.contiguous.default"
      },
      {
         "aliases" : "na.fail.default:na.omit:na.omit.data.frame:na.omit.default:na.exclude:na.exclude.data.frame:na.exclude.default:na.pass",
         "title" : "Handle Missing Values in Objects",
         "package" : "stats",
         "desc" : " These generic functions are useful for dealing with NAs in e.g., data frames. na.fail returns the object if it does not contain any missing values, and signals an error otherwise. na.omit returns the object with incomplete cases removed. na.pass returns the object unchanged. ",
         "name" : "na.fail"
      },
      {
         "aliases" : "naresid.default:naresid.exclude:napredict:napredict.default:napredict.exclude",
         "title" : " Adjust for Missing Values ",
         "package" : "stats",
         "name" : "naresid",
         "desc" : " Use missing value information to adjust residuals and predictions. "
      },
      {
         "package" : "stats",
         "name" : "naprint",
         "desc" : " Use missing value information to report the effects of an na.action. ",
         "aliases" : "naprint.default:naprint.exclude:naprint.omit",
         "title" : " Adjust for Missing Values "
      },
      {
         "aliases" : "dnbinom:pnbinom:qnbinom:rnbinom",
         "title" : "The Negative Binomial Distribution",
         "package" : "stats",
         "desc" : " Density, distribution function, quantile function and random generation for the negative binomial distribution with parameters size and prob. ",
         "name" : "NegBinomial"
      },
      {
         "package" : "stats",
         "name" : "nextn",
         "desc" : " nextn returns the smallest integer, greater than or equal to n, which can be obtained as a product of powers of the values contained in factors. nextn is intended to be used to find a suitable length to zero-pad the argument of fft to so that the transform is computed quickly. The default value for factors ensures this. ",
         "aliases" : "",
         "title" : "Highly Composite Numbers"
      },
      {
         "title" : "Non-Linear Minimization",
         "aliases" : "",
         "desc" : " This function carries out a minimization of the function f using a Newton-type algorithm. See the references for details. ",
         "name" : "nlm",
         "package" : "stats"
      },
      {
         "aliases" : "",
         "title" : "Optimization using PORT routines ",
         "package" : "stats",
         "desc" : " Unconstrained and box-constrained optimization using PORT routines. For historical compatibility. ",
         "name" : "nlminb"
      },
      {
         "aliases" : "",
         "title" : "Control the Iterations in nls",
         "package" : "stats",
         "name" : "nls.control",
         "desc" : " Allow the user to set some characteristics of the nls nonlinear least squares algorithm. "
      },
      {
         "title" : "Nonlinear Least Squares",
         "aliases" : "",
         "desc" : " Determine the nonlinear (weighted) least-squares estimates of the parameters of a nonlinear model. ",
         "name" : "nls",
         "package" : "stats"
      },
      {
         "name" : "NLSstAsymptotic",
         "desc" : " Fits the asymptotic regression model, in the form b0 + b1*(1-exp(-exp(lrc) * x) to the xy data. This can be used as a building block in determining starting estimates for more complicated models. ",
         "package" : "stats",
         "title" : "Fit the Asymptotic Regression Model",
         "aliases" : "NLSstAsymptotic.sortedXyData"
      },
      {
         "title" : "Inverse Interpolation",
         "aliases" : "NLSstClosestX.sortedXyData",
         "name" : "NLSstClosestX",
         "desc" : " Use inverse linear interpolation to approximate the x value at which the function represented by xy is equal to yval. ",
         "package" : "stats"
      },
      {
         "aliases" : "NLSstLfAsymptote.sortedXyData",
         "title" : "Horizontal Asymptote on the Left Side",
         "package" : "stats",
         "name" : "NLSstLfAsymptote",
         "desc" : " Provide an initial guess at the horizontal asymptote on the left side (i.e., small values of x) of the graph of y versus x from the xy object. Primarily used within initial functions for self-starting nonlinear regression models. "
      },
      {
         "aliases" : "NLSstRtAsymptote.sortedXyData",
         "title" : "Horizontal Asymptote on the Right Side",
         "package" : "stats",
         "desc" : " Provide an initial guess at the horizontal asymptote on the right side (i.e., large values of x) of the graph of y versus x from the xy object. Primarily used within initial functions for self-starting nonlinear regression models. ",
         "name" : "NLSstRtAsymptote"
      },
      {
         "title" : " Extract the Number of Observations from a Fit. ",
         "aliases" : "nobs.default",
         "desc" : " Extract the number of observations from a model fit. This is principally intended to be used in computing BIC (see AIC). ",
         "name" : "nobs",
         "package" : "stats"
      },
      {
         "title" : "The Normal Distribution",
         "aliases" : "dnorm:pnorm:qnorm:rnorm",
         "desc" : " Density, distribution function, quantile function and random generation for the normal distribution with mean equal to mean and standard deviation equal to sd. ",
         "name" : "Normal",
         "package" : "stats"
      },
      {
         "desc" : " numericDeriv numerically evaluates the gradient of an expression. ",
         "name" : "numericDeriv",
         "package" : "stats",
         "title" : "Evaluate Derivatives Numerically",
         "aliases" : ""
      },
      {
         "package" : "stats",
         "desc" : " An offset is a term to be added to a linear predictor, such as in a generalised linear model, with known coefficient 1 rather than an estimated coefficient. ",
         "name" : "offset",
         "aliases" : "",
         "title" : "Include an Offset in a Model Formula"
      },
      {
         "package" : "stats",
         "name" : "oneway.test",
         "desc" : " Test whether two or more samples from normal distributions have the same means. The variances are not necessarily assumed to be equal. ",
         "aliases" : "",
         "title" : "Test for Equal Means in a One-Way Layout"
      },
      {
         "title" : "General-purpose Optimization",
         "aliases" : "optimHess",
         "name" : "optim",
         "desc" : " General-purpose optimization based on Nelder--Mead, quasi-Newton and conjugate-gradient algorithms. It includes an option for box-constrained optimization and simulated annealing. ",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "desc" : " The function optimize searches the interval from lower to upper for a minimum or maximum of the function f with respect to its first argument. optimise is an alias for optimize. ",
         "name" : "optimize",
         "aliases" : "optimise",
         "title" : "One Dimensional Optimization"
      },
      {
         "package" : "stats",
         "name" : "order.dendrogram",
         "desc" : " Theses functions return the order (index) or the \"label\" attribute for the leaves in a dendrogram. These indices can then be used to access the appropriate components of any additional data. ",
         "aliases" : "labels.dendrogram",
         "title" : "Ordering or Labels of the Leaves in a Dendrogram"
      },
      {
         "desc" : "Given a set of p-values, returns p-values adjusted using one of several methods.",
         "name" : "p.adjust",
         "package" : "stats",
         "title" : "Adjust P-values for Multiple Comparisons",
         "aliases" : "p.adjust.methods"
      },
      {
         "package" : "stats",
         "name" : "pairwise.prop.test",
         "desc" : " Calculate pairwise comparisons between pairs of proportions with correction for multiple testing ",
         "aliases" : "",
         "title" : " Pairwise comparisons for proportions"
      },
      {
         "title" : " Pairwise t tests",
         "aliases" : "",
         "desc" : " Calculate pairwise comparisons between group levels with corrections for multiple testing ",
         "name" : "pairwise.t.test",
         "package" : "stats"
      },
      {
         "title" : "Tabulate p values for pairwise comparisons",
         "aliases" : "",
         "name" : "pairwise.table",
         "desc" : " Creates table of p values for pairwise comparisons with corrections for multiple testing. ",
         "package" : "stats"
      },
      {
         "title" : "Pairwise Wilcoxon Rank Sum Tests",
         "aliases" : "",
         "desc" : " Calculate pairwise comparisons between group levels with corrections for multiple testing. ",
         "name" : "pairwise.wilcox.test",
         "package" : "stats"
      },
      {
         "aliases" : "",
         "title" : "Plot Autocovariance and Autocorrelation Functions",
         "package" : "stats",
         "desc" : " Plot method for objects of class \"acf\". ",
         "name" : "plot.acf"
      },
      {
         "aliases" : "",
         "title" : "Plot Method for Kernel Density Estimation",
         "package" : "stats",
         "desc" : " The plot method for density objects. ",
         "name" : "plot.density"
      },
      {
         "package" : "stats",
         "desc" : " Produces a chart of the original time series along with the fitted values. Optionally, predicted values (and their confidence bounds) can also be plotted. ",
         "name" : "plot.HoltWinters",
         "aliases" : "",
         "title" : "Plot function for HoltWinters objects"
      },
      {
         "name" : "plot.isoreg",
         "desc" : " The plot and lines method for objects of class isoreg. ",
         "package" : "stats",
         "title" : "Plot Method for isoreg Objects",
         "aliases" : "lines.isoreg"
      },
      {
         "desc" : " Six plots (selectable by which) are currently available: a plot of residuals against fitted values, a Scale-Location plot of \\\\sqrt{| residuals |}sqrt(| residuals |) against fitted values, a Normal Q-Q plot, a plot of Cook's distances versus row labels, a plot of residuals against leverages, and a plot of Cook's distances against leverage/(1-leverage). By default, the first three and 5 are provided. ",
         "name" : "plot.lm",
         "package" : "stats",
         "title" : "Plot Diagnostics for an lm Object",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : " Plot Ridge Functions for Projection Pursuit Regression Fit ",
         "package" : "stats",
         "desc" : " Plot ridge functions for projection pursuit regression fit. ",
         "name" : "plot.ppr"
      },
      {
         "aliases" : "",
         "title" : "Plot a profile.nls Object",
         "package" : "stats",
         "name" : "plot.profile.nls",
         "desc" : " Displays a series of plots of the profile t function and interpolated confidence intervals for the parameters in a nonlinear regression model that has been fit with nls and profiled with profile.nls. "
      },
      {
         "title" : "Plotting Spectral Densities",
         "aliases" : "plot.spec.coherency:plot.spec.phase",
         "desc" : " Plotting method for objects of class \"spec\". For multivariate time series it plots the marginal spectra of the series or pairs plots of the coherency and phase of the cross-spectra. ",
         "name" : "plot.spec",
         "package" : "stats"
      },
      {
         "aliases" : "lines.stepfun",
         "title" : "Plot Step Functions",
         "package" : "stats",
         "desc" : " Method of the generic plot for stepfun objects and utility for plotting piecewise constant functions. ",
         "name" : "plot.stepfun"
      },
      {
         "aliases" : "lines.ts",
         "title" : "Plotting Time-Series Objects",
         "package" : "stats",
         "name" : "plot.ts",
         "desc" : " Plotting method for objects inheriting from class \"ts\". "
      },
      {
         "aliases" : "dpois:ppois:qpois:rpois",
         "title" : "The Poisson Distribution",
         "package" : "stats",
         "name" : "Poisson",
         "desc" : " Density, distribution function, quantile function and random generation for the Poisson distribution with parameter lambda. "
      },
      {
         "desc" : " Performs an exact test of a simple null hypothesis about the rate parameter in Poisson distribution, or for the ratio between two rate parameters. ",
         "name" : "poisson.test",
         "package" : "stats",
         "title" : "Exact Poisson tests",
         "aliases" : ""
      },
      {
         "package" : "stats",
         "name" : "poly",
         "desc" : " Returns or evaluates orthogonal polynomials of degree 1 to degree over the specified set of points x: these are all orthogonal to the constant polynomial of degree 0. Alternatively, evaluate raw polynomials. ",
         "aliases" : "polym:predict.poly:makepredictcall.poly",
         "title" : "Compute Orthogonal Polynomials"
      },
      {
         "title" : "Power Calculations for Balanced One-Way Analysis of Variance Tests",
         "aliases" : "",
         "name" : "power.anova.test",
         "desc" : " Compute power of test or determine parameters to obtain target power. ",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "desc" : " Compute the power of the two-sample test for proportions, or determine parameters to obtain a target power. ",
         "name" : "power.prop.test",
         "aliases" : "",
         "title" : "Power Calculations for Two-Sample Test for Proportions"
      },
      {
         "aliases" : "",
         "title" : "Create a Power Link Object",
         "package" : "stats",
         "name" : "power",
         "desc" : " Creates a link object based on the link function \\\\eta = \\\\mu ^ \\\\lambda. "
      },
      {
         "aliases" : "",
         "title" : "Power calculations for one and two sample t tests",
         "package" : "stats",
         "name" : "power.t.test",
         "desc" : " Compute the power of the one- or two- sample t test, or determine parameters to obtain a target power. "
      },
      {
         "aliases" : "",
         "title" : "Phillips-Perron Test for Unit Roots",
         "package" : "stats",
         "name" : "PP.test",
         "desc" : " Computes the Phillips-Perron test for the null hypothesis that x has a unit root against a stationary alternative. "
      },
      {
         "desc" : " Generates the sequence of probability points (1:m - a)/(m + (1-a)-a) where m is either n, if length(n)==1, or length(n). ",
         "name" : "ppoints",
         "package" : "stats",
         "title" : "Ordinates for Probability Plotting",
         "aliases" : ""
      },
      {
         "aliases" : "ppr.default:ppr.formula",
         "title" : "Projection Pursuit Regression",
         "package" : "stats",
         "name" : "ppr",
         "desc" : " Fit a projection pursuit regression model. "
      },
      {
         "package" : "stats",
         "desc" : " Performs a principal components analysis on the given data matrix and returns the results as an object of class prcomp.",
         "name" : "prcomp",
         "aliases" : "prcomp.formula:prcomp.default:plot.prcomp:predict.prcomp:print.prcomp:summary.prcomp:print.summary.prcomp",
         "title" : "Principal Components Analysis"
      },
      {
         "aliases" : "",
         "title" : "Forecast from ARIMA fits",
         "package" : "stats",
         "name" : "predict.Arima",
         "desc" : " Forecast from models fitted by arima. "
      },
      {
         "aliases" : "",
         "title" : "Predict Method for GLM Fits",
         "package" : "stats",
         "desc" : " Obtains predictions and optionally estimates standard errors of those predictions from a fitted generalized linear model object. ",
         "name" : "predict.glm"
      },
      {
         "name" : "predict.HoltWinters",
         "desc" : " Computes predictions and prediction intervals for models fitted by the Holt-Winters method. ",
         "package" : "stats",
         "title" : "Prediction Function for Fitted Holt-Winters Models",
         "aliases" : ""
      },
      {
         "title" : "Predict method for Linear Model Fits",
         "aliases" : "",
         "desc" : " Predicted values based on linear model object. ",
         "name" : "predict.lm",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "desc" : " Predictions from a loess fit, optionally with standard errors. ",
         "name" : "predict.loess",
         "aliases" : "",
         "title" : "Predict Loess Curve or Surface"
      },
      {
         "name" : "predict.nls",
         "desc" : " predict.nls produces predicted values, obtained by evaluating the regression function in the frame newdata. If the logical se.fit is TRUE, standard errors of the predictions are calculated. If the numeric argument scale is set (with optional df), it is used as the residual standard deviation in the computation of the standard errors, otherwise this is extracted from the model fit. Setting intervals specifies computation of confidence or prediction (tolerance) intervals at the specified level. At present se.fit and interval are ignored. ",
         "package" : "stats",
         "title" : "Predicting from Nonlinear Least Squares Fits",
         "aliases" : ""
      },
      {
         "title" : "Model Predictions",
         "aliases" : "",
         "desc" : " predict is a generic function for predictions from the results of various model fitting functions. The function invokes particular methods which depend on the class of the first argument. ",
         "name" : "predict",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "name" : "predict.smooth.spline",
         "desc" : " Predict a smoothing spline fit at new points, return the derivative if desired. The predicted fit is linear beyond the original data. ",
         "aliases" : "",
         "title" : "Predict from Smoothing Spline Fit"
      },
      {
         "name" : "preplot",
         "desc" : " Compute an object to be used for plots relating to the given model object. ",
         "package" : "stats",
         "title" : "Pre-computations for a Plotting Object",
         "aliases" : ""
      },
      {
         "package" : "stats",
         "desc" : " princomp performs a principal components analysis on the given numeric data matrix and returns the results as an object of class princomp. ",
         "name" : "princomp",
         "aliases" : "princomp.formula:princomp.default:plot.princomp:print.princomp:predict.princomp",
         "title" : "Principal Components Analysis"
      },
      {
         "desc" : " Printing objects of class \"htest\" or \"power.htest\", respectively, by simple print methods. ",
         "name" : "print.power.htest",
         "package" : "stats",
         "title" : "Print Methods for Hypothesis Tests and Power Calculation Objects",
         "aliases" : "print.power.htest"
      },
      {
         "package" : "stats",
         "desc" : " Notably for calendar related time series objects, format and print methods showing years, months and or quarters respectively. ",
         "name" : "print.ts",
         "aliases" : "print.ts",
         "title" : "Printing and Formatting of Time-Series Objects"
      },
      {
         "aliases" : "",
         "title" : "Print Coefficient Matrices",
         "package" : "stats",
         "name" : "printCoefmat",
         "desc" : " Utility function to be used in higher-level print methods, such as those for summary.lm, summary.glm and anova. The goal is to provide a flexible interface with smart defaults such that often, only x needs to be specified. "
      },
      {
         "title" : "Method for Profiling nls Objects",
         "aliases" : "",
         "desc" : " Investigates the profile log-likelihood function for a fitted model of class \"nls\". ",
         "name" : "profile.nls",
         "package" : "stats"
      },
      {
         "aliases" : "",
         "title" : "Generic Function for Profiling Models",
         "package" : "stats",
         "name" : "profile",
         "desc" : " Investigates behavior of objective function near the solution represented by fitted. See documentation on method functions for further details. "
      },
      {
         "desc" : " proj returns a matrix or list of matrices giving the projections of the data onto the terms of a linear model. It is most frequently used for aov models. ",
         "name" : "proj",
         "package" : "stats",
         "title" : "Projections of Models",
         "aliases" : "proj.default:proj.lm:proj.aov:proj.aovlist"
      },
      {
         "title" : "Test of Equal or Given Proportions",
         "aliases" : "",
         "name" : "prop.test",
         "desc" : " prop.test can be used for testing the null that the proportions (probabilities of success) in several groups are the same, or that they equal certain given values. ",
         "package" : "stats"
      },
      {
         "name" : "prop.trend.test",
         "desc" : " Performs chi-squared test for trend in proportions, i.e., a test asymptotically optimal for local alternatives where the log odds vary in proportion with score. By default, score is chosen as the group numbers. ",
         "package" : "stats",
         "title" : "Test for trend in proportions",
         "aliases" : ""
      },
      {
         "desc" : " qqnorm is a generic function the default method of which produces a normal QQ plot of the values in y. qqline adds a line to a theoretical, by default normal, quantile-quantile plot which passes through the probs quantiles, by default the first and third quartiles. qqplot produces a QQ plot of two datasets. Graphical parameters may be given as arguments to qqnorm, qqplot and qqline. ",
         "name" : "qqnorm",
         "package" : "stats",
         "title" : "Quantile-Quantile Plots",
         "aliases" : "qqnorm.default:qqplot:qqline"
      },
      {
         "title" : "Quade Test",
         "aliases" : "quade.test.default:quade.test.formula",
         "desc" : " Performs a Quade test with unreplicated blocked data. ",
         "name" : "quade.test",
         "package" : "stats"
      },
      {
         "aliases" : "quantile.default",
         "title" : "Sample Quantiles",
         "package" : "stats",
         "name" : "quantile",
         "desc" : " The generic function quantile produces sample quantiles corresponding to the given probabilities. The smallest observation corresponds to a probability of 0 and the largest to a probability of 1. "
      },
      {
         "title" : "Random 2-way Tables with Given Marginals",
         "aliases" : "",
         "name" : "r2dtable",
         "desc" : " Generate random 2-way tables with given marginals using Patefield's algorithm. ",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "name" : "read.ftable",
         "desc" : "Read, write and coerce flat contingency tables.",
         "aliases" : "write.ftable:format.ftable:print.ftable",
         "title" : "Manipulate Flat Contingency Tables"
      },
      {
         "package" : "stats",
         "name" : "rect.hclust",
         "desc" : " Draws rectangles around the branches of a dendrogram highlighting the corresponding clusters. First the dendrogram is cut at a certain level, then a rectangle is drawn around selected branches. ",
         "aliases" : "",
         "title" : "Draw Rectangles Around Hierarchical Clusters"
      },
      {
         "name" : "relevel",
         "desc" : " The levels of a factor are re-ordered so that the level specified by ref is first and the others are moved down. This is useful for contr.treatment contrasts which take the first level as the reference. ",
         "package" : "stats",
         "title" : "Reorder Levels of Factor",
         "aliases" : "relevel.default:relevel.factor:relevel.ordered"
      },
      {
         "title" : "Reorder a Dendrogram",
         "aliases" : "",
         "name" : "reorder.dendrogram",
         "desc" : " A method for the generic function reorder. There are many different orderings of a dendrogram that are consistent with the structure imposed. This function takes a dendrogram and a vector of values and reorders the dendrogram in the order of the supplied vector, maintaining the constraints on the dendrogram. ",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "desc" : " reorder is a generic function. The \"default\" method treats its first argument as a categorical variable, and reorders its levels based on the values of a second variable, usually numeric. ",
         "name" : "reorder.default",
         "aliases" : "reorder.default",
         "title" : "Reorder Levels of a Factor"
      },
      {
         "title" : "Number of Replications of Terms",
         "aliases" : "",
         "desc" : " Returns a vector or a list of the number of replicates for each term in the formula. ",
         "name" : "replications",
         "package" : "stats"
      },
      {
         "title" : "Reshape Grouped Data",
         "aliases" : "",
         "name" : "reshape",
         "desc" : " This function reshapes a data frame between wide format with repeated measurements in separate columns of the same record and long format with the repeated measurements in separate records. ",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "name" : "residuals",
         "desc" : " residuals is a generic function which extracts model residuals from objects returned by modeling functions. The abbreviated form resid is an alias for residuals. It is intended to encourage users to access object components through an accessor function rather than by directly referencing an object slot. All object classes which are returned by model fitting functions should provide a residuals method. (Note that the method is for residuals and not resid.) Methods can make use of naresid methods to compensate for the omission of missing values. The default, nls and smooth.spline methods do. ",
         "aliases" : "resid",
         "title" : "Extract Model Residuals"
      },
      {
         "desc" : " Compute running medians of odd span. This is the most robust scatter plot smoothing possible. For efficiency (and historical reason), you can use one of two different algorithms giving identical results. ",
         "name" : "runmed",
         "package" : "stats",
         "title" : "Running Medians -- Robust Scatter Plot Smoothing",
         "aliases" : ""
      },
      {
         "title" : "Random Wishart Distributed Matrices",
         "aliases" : "",
         "name" : "rWishart",
         "desc" : " Generate n random matrices, distributed according to the Wishart distribution with parameters Sigma and df, W_p(\\\\Sigma, m),\\\\ m=\\\\code{df},\\\\ \\\\Sigma=\\\\code{Sigma}W_p(Sigma, df). ",
         "package" : "stats"
      },
      {
         "title" : "Scatter Plot with Smooth Curve Fitted by Loess",
         "aliases" : "loess.smooth",
         "name" : "scatter.smooth",
         "desc" : " Plot and add a smooth curve computed by loess to a scatter plot. ",
         "package" : "stats"
      },
      {
         "title" : "Screeplots",
         "aliases" : "screeplot.default",
         "name" : "screeplot",
         "desc" : " screeplot.default plots the variances against the number of the principal component. This is also the plot method for classes \"princomp\" and \"prcomp\". ",
         "package" : "stats"
      },
      {
         "title" : "Standard Deviation",
         "aliases" : "",
         "name" : "sd",
         "desc" : " This function computes the standard deviation of the values in x. If na.rm is TRUE then missing values are removed before computation proceeds. ",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "name" : "se.contrast",
         "desc" : " Returns the standard errors for one or more contrasts in an aov object. ",
         "aliases" : "se.contrast.aov:se.contrast.aovlist",
         "title" : "Standard Errors for Contrasts in Model Terms"
      },
      {
         "name" : "selfStart",
         "desc" : " Construct self-starting nonlinear models. ",
         "package" : "stats",
         "title" : "Construct Self-starting Nonlinear Models",
         "aliases" : "selfStart.default:selfStart.formula"
      },
      {
         "aliases" : "",
         "title" : "Set the Names in an Object",
         "package" : "stats",
         "name" : "setNames",
         "desc" : " This is a convenience function that sets the names on an object and returns the object. It is most useful at the end of a function definition where one is creating the object to be returned and would prefer not to store it under a name just so the names can be assigned. "
      },
      {
         "name" : "shapiro.test",
         "desc" : " Performs the Shapiro-Wilk test of normality. ",
         "package" : "stats",
         "title" : "Shapiro-Wilk Normality Test",
         "aliases" : ""
      },
      {
         "title" : "Distribution of the Wilcoxon Signed Rank Statistic",
         "aliases" : "dsignrank:psignrank:qsignrank:rsignrank",
         "name" : "SignRank",
         "desc" : " Density, distribution function, quantile function and random generation for the distribution of the Wilcoxon Signed Rank statistic obtained from a sample with size n. ",
         "package" : "stats"
      },
      {
         "title" : "Simulate Responses",
         "aliases" : "",
         "desc" : " Simulate one or more responses from the distribution corresponding to a fitted model object. ",
         "name" : "simulate",
         "package" : "stats"
      },
      {
         "name" : "smooth",
         "desc" : " Tukey's smoothers, 3RS3R, 3RSS, 3R, etc. ",
         "package" : "stats",
         "title" : "Tukey's (Running Median) Smoothing",
         "aliases" : ""
      },
      {
         "title" : "Fit a Smoothing Spline",
         "aliases" : ".nknots.smspl",
         "name" : "smooth.spline",
         "desc" : " Fits a cubic smoothing spline to the supplied data. ",
         "package" : "stats"
      },
      {
         "title" : "End Points Smoothing (for Running Medians)",
         "aliases" : "",
         "desc" : " Smooth end points of a vector y using subsequently smaller medians and Tukey's end point rule at the very end. (of odd span), ",
         "name" : "smoothEnds",
         "package" : "stats"
      },
      {
         "name" : "sortedXyData",
         "desc" : " This is a constructor function for the class of sortedXyData objects. These objects are mostly used in the initial function for a self-starting nonlinear regression model, which will be of the selfStart class. ",
         "package" : "stats",
         "title" : "Create a sortedXyData Object",
         "aliases" : "sortedXyData.default"
      },
      {
         "title" : "Estimate Spectral Density of a Time Series from AR Fit",
         "aliases" : "",
         "desc" : " Fits an AR model to x (or uses the existing fit) and computes (and by default plots) the spectral density of the fitted model. ",
         "name" : "spec.ar",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "name" : "spec.pgram",
         "desc" : " spec.pgram calculates the periodogram using a fast Fourier transform, and optionally smooths the result with a series of modified Daniell smoothers (moving averages giving half weight to the end values). ",
         "aliases" : "",
         "title" : "Estimate Spectral Density of a Time Series by a Smoothed Periodogram"
      },
      {
         "aliases" : "",
         "title" : "Taper a Time Series by a Cosine Bell",
         "package" : "stats",
         "desc" : " Apply a cosine-bell taper to a time series. ",
         "name" : "spec.taper"
      },
      {
         "title" : "Spectral Density Estimation",
         "aliases" : "spec",
         "name" : "spectrum",
         "desc" : " The spectrum function estimates the spectral density of a time series. ",
         "package" : "stats"
      },
      {
         "title" : "Interpolating Splines",
         "aliases" : "splinefun:splinefunH",
         "name" : "splinefun",
         "desc" : " Perform cubic (or Hermite) spline interpolation of given data points, returning either a list of points obtained by the interpolation or a function performing the interpolation. ",
         "package" : "stats"
      },
      {
         "name" : "SSasymp",
         "desc" : " This selfStart model evaluates the asymptotic regression function and its gradient. It has an initial attribute that will evaluate initial estimates of the parameters Asym, R0, and lrc for a given set of data. ",
         "package" : "stats",
         "title" : "Self-Starting Nls Asymptotic Regression Model",
         "aliases" : ""
      },
      {
         "desc" : " This selfStart model evaluates an alternative parametrization of the asymptotic regression function and the gradient with respect to those parameters. It has an initial attribute that creates initial estimates of the parameters Asym, lrc, and c0. ",
         "name" : "SSasympOff",
         "package" : "stats",
         "title" : "Self-Starting Nls Asymptotic Regression Model with an Offset",
         "aliases" : ""
      },
      {
         "title" : "Self-Starting Nls Asymptotic Regression Model through the Origin",
         "aliases" : "",
         "desc" : " This selfStart model evaluates the asymptotic regression function through the origin and its gradient. It has an initial attribute that will evaluate initial estimates of the parameters Asym and lrc for a given set of data. ",
         "name" : "SSasympOrig",
         "package" : "stats"
      },
      {
         "desc" : " This selfStart model evaluates the biexponential model function and its gradient. It has an initial attribute that creates initial estimates of the parameters A1, lrc1, A2, and lrc2. ",
         "name" : "SSbiexp",
         "package" : "stats",
         "title" : "Self-Starting Nls Biexponential model",
         "aliases" : ""
      },
      {
         "aliases" : "estVar",
         "title" : "SSD Matrix and Estimated Variance Matrix in Multivariate Models",
         "package" : "stats",
         "desc" : " Functions to compute matrix of residual sums of squares and products, or the estimated variance matrix for multivariate linear models. ",
         "name" : "SSD"
      },
      {
         "aliases" : "",
         "title" : "Self-Starting Nls First-order Compartment Model",
         "package" : "stats",
         "name" : "SSfol",
         "desc" : " This selfStart model evaluates the first-order compartment function and its gradient. It has an initial attribute that creates initial estimates of the parameters lKe, lKa, and lCl. "
      },
      {
         "package" : "stats",
         "desc" : " This selfStart model evaluates the four-parameter logistic function and its gradient. It has an initial attribute that will evaluate initial estimates of the parameters A, B, xmid, and scal for a given set of data. ",
         "name" : "SSfpl",
         "aliases" : "",
         "title" : "Self-Starting Nls Four-Parameter Logistic Model"
      },
      {
         "title" : "Self-Starting Nls Gompertz Growth Model",
         "aliases" : "",
         "desc" : " This selfStart model evaluates the Gompertz growth model and its gradient. It has an initial attribute that creates initial estimates of the parameters Asym, b2, and b3. ",
         "name" : "SSgompertz",
         "package" : "stats"
      },
      {
         "title" : "Self-Starting Nls Logistic Model",
         "aliases" : "",
         "name" : "SSlogis",
         "desc" : " This selfStart model evaluates the logistic function and its gradient. It has an initial attribute that creates initial estimates of the parameters Asym, xmid, and scal. ",
         "package" : "stats"
      },
      {
         "title" : "Self-Starting Nls Michaelis-Menten Model",
         "aliases" : "",
         "desc" : " This selfStart model evaluates the Michaelis-Menten model and its gradient. It has an initial attribute that will evaluate initial estimates of the parameters Vm and K ",
         "name" : "SSmicmen",
         "package" : "stats"
      },
      {
         "name" : "SSweibull",
         "desc" : " This selfStart model evaluates the Weibull model for growth curve data and its gradient. It has an initial attribute that will evaluate initial estimates of the parameters Asym, Drop, lrc, and pwr for a given set of data. ",
         "package" : "stats",
         "title" : "Self-Starting Nls Weibull Growth Curve Model",
         "aliases" : ""
      },
      {
         "name" : "start",
         "desc" : " Extract and encode the times the first and last observations were taken. Provided only for compatibility with S version 2. ",
         "package" : "stats",
         "title" : "Encode the Terminal Times of Time Series",
         "aliases" : "end"
      },
      {
         "title" : "GLM Anova Statistics",
         "aliases" : "",
         "desc" : "This is a utility function, used in lm and glm methods for anova(, test != NULL) and should not be used by the average user. ",
         "name" : "stat.anova",
         "package" : "stats"
      },
      {
         "package" : "stats",
         "desc" : " The functions or variables listed here are no longer part of as they are not needed (any more). ",
         "name" : "stats-defunct",
         "aliases" : "arima0.diag:dnchisq:pnchisq:qnchisq:rnchisq:reshapeLong:reshapeWide:plot.mts:print.coefmat:anovalist.lm:lm.fit.null:lm.wfit.null:glm.fit.null:mauchley.test:clearNames",
         "title" : "Defunct Functions in Package stats"
      },
      {
         "name" : "stats-deprecated",
         "desc" : " These functions are provided for compatibility with older versions of only, and may be defunct as soon as the next release. ",
         "package" : "stats",
         "title" : "Deprecated Functions in Package stats",
         "aliases" : "plclust"
      },
      {
         "aliases" : "stats",
         "title" : " The R Stats Package ",
         "package" : "stats",
         "name" : "stats-package",
         "desc" : " R statistical functions "
      },
      {
         "desc" : " Select a formula-based model by AIC. ",
         "name" : "step",
         "package" : "stats",
         "title" : " Choose a model by AIC in a Stepwise Algorithm ",
         "aliases" : ""
      },
      {
         "title" : "Step Functions - Creation and Class",
         "aliases" : "is.stepfun:as.stepfun:print.stepfun:summary.stepfun:knots",
         "name" : "stepfun",
         "desc" : " Given the vectors (x_1, \\\\ldots, x_n)(x[1], \\\\dots, x[n]) and (y_0,y_1,\\\\ldots, y_n)(y[0], y[1], \\\\dots, y[n]) (one value more!), stepfun(x, y, ) returns an interpolating step function, say fn. I.e., fn(t) = c_i[i] (constant) for t \\\\in (x_i, x_{i+1})t in ( x[i], x[i+1]) and at the abscissa values, if (by default) right = FALSE, fn(x_i) = y_ifn(x[i]) = y[i] and for right = TRUE, fn(x_i) = y_{i-1}fn(x[i]) = y[i-1], for i=1,\\\\ldots,ni=1, \\\\dots, n. The value of the constant c_ic[i] above depends on the continuity parameter f. For the default, right = FALSE, f = 0, fn is a cadlag function, i.e., continuous from the right, limits from the left, so that the function is piecewise constant on intervals that include their left endpoint. In general, c_ic[i] is interpolated in between the neighbouring y values, c_i= (1-f) y_i + f\\\\cdot y_{i+1}c[i] = (1-f)*y[i] + f*y[i+1]. Therefore, for non-0 values of f, fn may no longer be a proper step function, since it can be discontinuous from both sides, unless right = TRUE, f = 1 which is left-continuous (i.e., constant pieces contain their right endpoint). ",
         "package" : "stats"
      },
      {
         "desc" : " Decompose a time series into seasonal, trend and irregular components using loess, acronym STL. ",
         "name" : "stl",
         "package" : "stats",
         "title" : "Seasonal Decomposition of Time Series by Loess",
         "aliases" : ""
      },
      {
         "name" : "stlmethods",
         "desc" : " Methods for objects of class stl, typically the result of stl. The plot method does a multiple figure plot with some flexibility. There are also (non-visible) print and summary methods. ",
         "package" : "stats",
         "title" : "Methods for STL Objects",
         "aliases" : ""
      },
      {
         "aliases" : "print.StructTS:predict.StructTS",
         "title" : "Fit Structural Time Series",
         "package" : "stats",
         "name" : "StructTS",
         "desc" : " Fit a structural model for a time series by maximum likelihood. "
      },
      {
         "aliases" : "summary.aovlist:print.summary.aov:print.summary.aovlist",
         "title" : "Summarize an Analysis of Variance Model",
         "package" : "stats",
         "name" : "summary.aov",
         "desc" : " Summarize an analysis of variance model. "
      },
      {
         "aliases" : "print.summary.glm",
         "title" : "Summarizing Generalized Linear Model Fits",
         "package" : "stats",
         "desc" : " These functions are all methods for class glm or summary.glm objects. ",
         "name" : "summary.glm"
      },
      {
         "name" : "summary.lm",
         "desc" : " summary method for class \"lm\". ",
         "package" : "stats",
         "title" : "Summarizing Linear Model Fits",
         "aliases" : "summary.mlm:print.summary.lm"
      },
      {
         "aliases" : "print.summary.manova",
         "title" : "Summary Method for Multivariate Analysis of Variance",
         "package" : "stats",
         "name" : "summary.manova",
         "desc" : " A summary method for class \"manova\". "
      },
      {
         "aliases" : "print.summary.nls",
         "title" : "Summarizing Non-Linear Least-Squares Model Fits",
         "package" : "stats",
         "desc" : " summary method for class \"nls\". ",
         "name" : "summary.nls"
      },
      {
         "title" : "Summary method for Principal Components Analysis",
         "aliases" : "print.summary.princomp",
         "desc" : " The summary method for class \"princomp\". ",
         "name" : "summary.princomp",
         "package" : "stats"
      },
      {
         "title" : "Friedman's SuperSmoother",
         "aliases" : "",
         "desc" : " Smooth the (x, y) values by Friedman's super smoother. ",
         "name" : "supsmu",
         "package" : "stats"
      },
      {
         "name" : "symnum",
         "desc" : " Symbolically encode a given numeric or logical vector or array. Particularly useful for visualization of structured matrices, e.g., correlation, sparse, or logical ones. ",
         "package" : "stats",
         "title" : "Symbolic Number Coding",
         "aliases" : ""
      },
      {
         "package" : "stats",
         "name" : "t.test",
         "desc" : " Performs one and two sample t-tests on vectors of data. ",
         "aliases" : "t.test.default:t.test.formula",
         "title" : "Student's t-Test"
      },
      {
         "package" : "stats",
         "desc" : " Density, distribution function, quantile function and random generation for the t distribution with df degrees of freedom (and optional non-centrality parameter ncp). ",
         "name" : "TDist",
         "aliases" : "dt:pt:qt:rt",
         "title" : "The Student t Distribution"
      },
      {
         "aliases" : "",
         "title" : "Plot Regression Terms",
         "package" : "stats",
         "desc" : " Plots regression terms against their predictors, optionally with standard errors and partial residuals added. ",
         "name" : "termplot"
      },
      {
         "desc" : " This function takes a formula and some optional arguments and constructs a terms object. The terms object can then be used to construct a model.matrix. ",
         "name" : "terms.formula",
         "package" : "stats",
         "title" : "Construct a terms Object from a Formula",
         "aliases" : ""
      },
      {
         "package" : "stats",
         "name" : "terms.object",
         "desc" : " An object of class terms holds information about a model. Usually the model was specified in terms of a formula and that formula was used to determine the terms object. ",
         "aliases" : "",
         "title" : "Description of Terms Objects"
      },
      {
         "title" : "Model Terms",
         "aliases" : "labels.terms",
         "desc" : " The function terms is a generic function which can be used to extract terms objects from various kinds of data objects. ",
         "name" : "terms",
         "package" : "stats"
      },
      {
         "title" : "Sampling Times of Time Series",
         "aliases" : "cycle:frequency:deltat:time.default",
         "name" : "time",
         "desc" : " time creates the vector of times at which a time series was sampled. cycle gives the positions in the cycle of each observation. frequency returns the number of samples per unit time and deltat the time interval between observations (see ts). ",
         "package" : "stats"
      },
      {
         "desc" : " Forms a symmetric Toeplitz matrix given its first row. ",
         "name" : "toeplitz",
         "package" : "stats",
         "title" : "Form Symmetric Toeplitz Matrix",
         "aliases" : ""
      },
      {
         "name" : "ts-methods",
         "desc" : " Methods for objects of class \"ts\", typically the result of ts. ",
         "package" : "stats",
         "title" : "Methods for Time Series Objects",
         "aliases" : "na.omit.ts"
      },
      {
         "title" : "Plot Multiple Time Series",
         "aliases" : "",
         "desc" : " Plot several time series on a common plot. Unlike plot.ts the series can have a different time bases, but they should have the same frequency. ",
         "name" : "ts.plot",
         "package" : "stats"
      },
      {
         "desc" : " The function ts is used to create time-series objects. as.ts and is.ts coerce an object to a time-series and test whether an object is a time series. ",
         "name" : "ts",
         "package" : "stats",
         "title" : "Time-Series Objects",
         "aliases" : "as.ts:as.ts.default:is.ts:Ops.ts:cbind.ts:is.mts:[.ts:t.ts"
      },
      {
         "desc" : " Bind time series which have a common frequency. ts.union pads with NAs to the total time coverage, ts.intersect restricts to the time covered by all the series. ",
         "name" : "ts.union",
         "package" : "stats",
         "title" : "Bind Two or More Time Series",
         "aliases" : "ts.intersect"
      },
      {
         "desc" : " A generic function to plot time-series diagnostics. ",
         "name" : "tsdiag",
         "package" : "stats",
         "title" : "Diagnostic Plots for Time-Series Fits",
         "aliases" : "tsdiag.arima0:tsdiag.Arima:tsdiag.StructTS"
      },
      {
         "aliases" : "tsp<-:hasTsp",
         "title" : "Tsp Attribute of Time-Series-like Objects",
         "package" : "stats",
         "desc" : " tsp returns the tsp attribute (or NULL). It is included for compatibility with S version 2. tsp<- sets the tsp attribute. hasTsp ensures x has a tsp attribute, by adding one if needed. ",
         "name" : "tsp"
      },
      {
         "title" : "Use Fixed-Interval Smoothing on Time Series",
         "aliases" : "tsSmooth.StructTS",
         "desc" : " Performs fixed-interval smoothing on a univariate time series via a state-space model. Fixed-interval smoothing gives the best estimate of the state at each time point based on the whole observed series. ",
         "name" : "tsSmooth",
         "package" : "stats"
      },
      {
         "desc" : " Functions of the distribution of the studentized range, R/s, where R is the range of a standard normal sample and df \\\\times s^2df*s^2 is independently distributed as chi-squared with df degrees of freedom, see pchisq. ",
         "name" : "Tukey",
         "package" : "stats",
         "title" : "The Studentized Range Distribution",
         "aliases" : "ptukey:qtukey"
      },
      {
         "title" : "Compute Tukey Honest Significant Differences",
         "aliases" : "",
         "desc" : " Create a set of confidence intervals on the differences between the means of the levels of a factor with the specified family-wise probability of coverage. The intervals are based on the Studentized range statistic, Tukey's Honest Significant Difference method. ",
         "name" : "TukeyHSD",
         "package" : "stats"
      },
      {
         "aliases" : "dunif:punif:qunif:runif",
         "title" : "The Uniform Distribution",
         "package" : "stats",
         "name" : "Uniform",
         "desc" : " These functions provide information about the uniform distribution on the interval from min to max. dunif gives the density, punif gives the distribution function qunif gives the quantile function and runif generates random deviates. "
      },
      {
         "package" : "stats",
         "desc" : " The function uniroot searches the interval from lower to upper for a root (i.e., zero) of the function f with respect to its first argument. Setting extendInt to a non-\"no\" string, means searching for the correct interval = c(lower,upper) if sign(f(x)) does not satisfy the requirements at the interval end points; see the Details section. ",
         "name" : "uniroot",
         "aliases" : "",
         "title" : "One Dimensional Root (Zero) Finding"
      },
      {
         "package" : "stats",
         "desc" : " update.formula is used to update model formulae. This typically involves adding or dropping terms, but updates can be more general. ",
         "name" : "update.formula",
         "aliases" : "",
         "title" : "Model Updating"
      },
      {
         "desc" : " update will update and (by default) re-fit a model. It does this by extracting the call stored in the object, updating the call and (by default) evaluating that call. Sometimes it is useful to call update with only one argument, for example if the data frame has been corrected. Extracting the call in update() and similar functions uses getCall() which itself is a (S3) generic function with a default method that simply gets x$call. Because of this, update() will often work (via its default method) on new model classes, either automatically, or by providing a simple getCall() method for that class. ",
         "name" : "update",
         "package" : "stats",
         "title" : "Update and Re-fit a Model Call",
         "aliases" : "update.default:getCall:getCall.default"
      },
      {
         "name" : "var.test",
         "desc" : " Performs an F test to compare the variances of two samples from normal populations. ",
         "package" : "stats",
         "title" : "F Test to Compare Two Variances",
         "aliases" : "var.test.default:var.test.formula"
      },
      {
         "name" : "varimax",
         "desc" : " These functions rotate loading matrices in factor analysis. ",
         "package" : "stats",
         "title" : "Rotation Methods for Factor Analysis",
         "aliases" : "varimax"
      },
      {
         "aliases" : "vcov.lm:vcov.glm:vcov.summary.lm:vcov.summary.glm:vcov.lme:vcov.gls",
         "title" : " Calculate Variance-Covariance Matrix for a Fitted Model Object ",
         "package" : "stats",
         "name" : "vcov",
         "desc" : " Returns the variance-covariance matrix of the main parameters of a fitted model object. "
      },
      {
         "aliases" : "dweibull:pweibull:qweibull:rweibull",
         "title" : "The Weibull Distribution",
         "package" : "stats",
         "desc" : " Density, distribution function, quantile function and random generation for the Weibull distribution with parameters shape and scale. ",
         "name" : "Weibull"
      },
      {
         "aliases" : "weighted.mean.default",
         "title" : "Weighted Arithmetic Mean",
         "package" : "stats",
         "desc" : " Compute a weighted mean. ",
         "name" : "weighted.mean"
      },
      {
         "package" : "stats",
         "name" : "weighted.residuals",
         "desc" : " Computed weighted residuals from a linear model fit. ",
         "aliases" : "",
         "title" : "Compute Weighted Residuals"
      },
      {
         "aliases" : "weights.default",
         "title" : "Extract Model Weights",
         "package" : "stats",
         "name" : "weights",
         "desc" : " weights is a generic function which extracts fitting weights from objects returned by modeling functions. Methods can make use of napredict methods to compensate for the omission of missing values. The default methods does so. "
      },
      {
         "desc" : " Performs one- and two-sample Wilcoxon tests on vectors of data; the latter is also known as Mann-Whitney test. ",
         "name" : "wilcox.test",
         "package" : "stats",
         "title" : "Wilcoxon Rank Sum and Signed Rank Tests",
         "aliases" : "wilcox.test.default:wilcox.test.formula"
      },
      {
         "package" : "stats",
         "desc" : " Density, distribution function, quantile function and random generation for the distribution of the Wilcoxon rank sum statistic obtained from samples with size m and n, respectively. ",
         "name" : "Wilcoxon",
         "aliases" : "dwilcox:pwilcox:qwilcox:rwilcox",
         "title" : "Distribution of the Wilcoxon Rank Sum Statistic"
      },
      {
         "name" : "window",
         "desc" : " window is a generic function which extracts the subset of the object x observed between the times start and end. If a frequency is specified, the series is then re-sampled at the new frequency. ",
         "package" : "stats",
         "title" : "Time Windows",
         "aliases" : "window.default:window.ts:window<-:window<-.ts"
      },
      {
         "aliases" : "print.xtabs",
         "title" : "Cross Tabulation",
         "package" : "stats",
         "name" : "xtabs",
         "desc" : " Create a contingency table (optionally a sparse matrix) from cross-classifying factors, usually contained in a data frame, using a formula interface. "
      },
      {
         "package" : "stats",
         "desc" : " Sets the \"contrasts\" attribute for the factor. ",
         "name" : "C",
         "aliases" : "",
         "title" : "Sets Contrasts for a Factor"
      },
      {
         "title" : "Methods for Function coef in Package stats4",
         "aliases" : "coef,ANY-method:coef,mle-method:coef,summary.mle-method",
         "desc" : " Extract the coefficient vector from \"mle\" objects. ",
         "name" : "coef-methods",
         "package" : "stats4"
      },
      {
         "title" : "Methods for Function confint in Package stats4",
         "aliases" : "confint,ANY-method:confint,profile.mle-method:confint,mle-method",
         "name" : "confint-methods",
         "desc" : "Generate confidence intervals",
         "package" : "stats4"
      },
      {
         "aliases" : "logLik,ANY-method:logLik,mle-method",
         "title" : "Methods for Function logLik in Package stats4",
         "package" : "stats4",
         "desc" : " Extract the maximized log-likelihood from \"mle\" objects. ",
         "name" : "logLik-methods"
      },
      {
         "aliases" : "nobs,mle-method",
         "title" : "Class \"mle\" for Results of Maximum Likelihood Estimation",
         "package" : "stats4",
         "name" : "mle-class",
         "desc" : "This class encapsulates results of a generic maximum likelihood procedure."
      },
      {
         "title" : "Maximum Likelihood Estimation",
         "aliases" : "",
         "desc" : " Estimate parameters by the method of maximum likelihood. ",
         "name" : "mle",
         "package" : "stats4"
      },
      {
         "aliases" : "plot,ANY,ANY-method:plot,profile.mle,missing-method",
         "title" : "Methods for Function plot in Package stats4",
         "package" : "stats4",
         "desc" : " Plot profile likelihoods for \"mle\" objects. ",
         "name" : "plot-methods"
      },
      {
         "aliases" : "profile,ANY-method:profile,mle-method",
         "title" : "Methods for Function profile in Package stats4",
         "package" : "stats4",
         "name" : "profile-methods",
         "desc" : "Profile likelihood for \"mle\" objects."
      },
      {
         "package" : "stats4",
         "desc" : "Likelihood profiles along each parameter of likelihood function",
         "name" : "profile.mle-class",
         "aliases" : "",
         "title" : " Class \"profile.mle\"; Profiling information for \"mle\" object "
      },
      {
         "desc" : "Show objects of classes mle and summary.mle",
         "name" : "show-methods",
         "package" : "stats4",
         "title" : "Methods for Function show in Package stats4",
         "aliases" : "show,mle-method:show,summary.mle-method"
      },
      {
         "package" : "stats4",
         "desc" : "Statistical Functions using S4 classes. ",
         "name" : "stats4-package",
         "aliases" : "stats4",
         "title" : "Statistical Functions using S4 Classes"
      },
      {
         "desc" : "Summarize objects",
         "name" : "summary-methods",
         "package" : "stats4",
         "title" : "Methods for Function summary in Package stats4",
         "aliases" : "summary,ANY-method:summary,mle-method"
      },
      {
         "title" : "Class \"summary.mle\", Summary of \"mle\" Objects",
         "aliases" : "",
         "desc" : "Extract of \"mle\" object",
         "name" : "summary.mle-class",
         "package" : "stats4"
      },
      {
         "title" : "Methods for Function update in Package stats4",
         "aliases" : "update,ANY-method:update,mle-method",
         "name" : "update-methods",
         "desc" : " Update \"mle\" objects. ",
         "package" : "stats4"
      },
      {
         "aliases" : "vcov,ANY-method:vcov,mle-method",
         "title" : "Methods for Function vcov in Package stats4",
         "package" : "stats4",
         "name" : "vcov-methods",
         "desc" : " Extract the approximate variance-covariance matrix from \"mle\" objects. "
      },
      {
         "package" : "tcltk",
         "desc" : " These functions and variables provide the basic glue between and the Tcl interpreter and Tk GUI toolkit. Tk windows may be represented via objects. Tcl variables can be accessed via objects of class tclVar and the C level interface to Tcl objects is accessed via objects of class tclObj. ",
         "name" : "TclInterface",
         "aliases" : ".Tcl:.Tcl.objv:.Tcl.callback:.Tcl.args:.Tcl.args.objv:tclvar:tclVar:as.character.tclVar:tclArray:[[.tclArray:[[<-.tclArray:$.tclArray:$<-.tclArray:names.tclArray:length.tclArray:names<-.tclArray:length<-.tclArray:tclvalue:tclvalue<-:tclvalue.default:tclvalue<-.default:tclvalue.tclVar:tclvalue<-.tclVar:tclvalue.tclObj:as.character.tclObj:as.integer.tclObj:as.double.tclObj:as.logical.tclObj:as.raw.tclObj:as.tclObj:is.tclObj:tclObj:print.tclObj:tclObj<-:tclObj.tclVar:tclObj<-.tclVar:.Tk.ID:.Tk.newwin:.Tk.subwin:is.tkwin:tkdestroy:.TkRoot:addTclPath:tclRequire:tclVersion",
         "title" : "Low-level Tcl/Tk Interface"
      },
      {
         "aliases" : "",
         "title" : " Allow Tcl events to be serviced or not ",
         "package" : "tcltk",
         "name" : "tclServiceMode",
         "desc" : " This function controls or reports on the Tcl service mode, i.e., whether Tcl will respond to events. "
      },
      {
         "aliases" : "$.tclvar:$<-.tclvar:tkcmd:tkfile.tail:tkfile.dir:tkopen:tkclose:tkputs:tkread",
         "title" : "Defunct Functions in Package tcltk",
         "package" : "tcltk",
         "desc" : " The functions or variables listed here are no longer part of as they are not needed (any more). ",
         "name" : "tcltk-defunct"
      },
      {
         "aliases" : "tcltk",
         "title" : " Tcl/Tk Interface ",
         "package" : "tcltk",
         "name" : "tcltk-package",
         "desc" : " Interface and language bindings to Tcl/Tk GUI elements. "
      },
      {
         "name" : "tk_choose.dir",
         "desc" : " Use a Tk widget to choose a directory interactively. ",
         "package" : "tcltk",
         "title" : "Choose a Folder Interactively",
         "aliases" : ""
      },
      {
         "name" : "tk_choose.files",
         "desc" : " Use a Tk file dialog to choose a list of zero or more files interactively. ",
         "package" : "tcltk",
         "title" : "Choose a List of Files Interactively",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Tk Message Box",
         "package" : "tcltk",
         "desc" : " An implementation of a generic message box using Tk ",
         "name" : "tk_messageBox"
      },
      {
         "title" : "Select Items from a List",
         "aliases" : "",
         "name" : "tk_select.list",
         "desc" : " Select item(s) from a character vector using a Tk listbox. ",
         "package" : "tcltk"
      },
      {
         "name" : "TkCommands",
         "desc" : " These functions interface to Tk non-widget commands, such as the window manager interface commands and the geometry managers. ",
         "package" : "tcltk",
         "title" : "Tk non-widget commands",
         "aliases" : "tcl:tktitle:tktitle<-:tkbell:tkbind:tkbindtags:tkfocus:tklower:tkraise:tkclipboard.append:tkclipboard.clear:tkevent.add:tkevent.delete:tkevent.generate:tkevent.info:tkfont.actual:tkfont.configure:tkfont.create:tkfont.delete:tkfont.families:tkfont.measure:tkfont.metrics:tkfont.names:tkgrab:tkgrab.current:tkgrab.release:tkgrab.set:tkgrab.status:tkimage.cget:tkimage.configure:tkimage.create:tkimage.names:tkXselection.clear:tkXselection.get:tkXselection.handle:tkXselection.own:tkwait.variable:tkwait.visibility:tkwait.window:tkwinfo:tkwm.aspect:tkwm.client:tkwm.colormapwindows:tkwm.command:tkwm.deiconify:tkwm.focusmodel:tkwm.frame:tkwm.geometry:tkwm.grid:tkwm.group:tkwm.iconbitmap:tkwm.iconify:tkwm.iconmask:tkwm.iconname:tkwm.iconposition:tkwm.iconwindow:tkwm.maxsize:tkwm.minsize:tkwm.overrideredirect:tkwm.positionfrom:tkwm.protocol:tkwm.resizable:tkwm.sizefrom:tkwm.state:tkwm.title:tkwm.transient:tkwm.withdraw:tkgrid:tkgrid.bbox:tkgrid.columnconfigure:tkgrid.configure:tkgrid.forget:tkgrid.info:tkgrid.location:tkgrid.propagate:tkgrid.rowconfigure:tkgrid.remove:tkgrid.size:tkgrid.slaves:tkpack:tkpack.configure:tkpack.forget:tkpack.info:tkpack.propagate:tkpack.slaves:tkplace:tkplace.configure:tkplace.forget:tkplace.info:tkplace.slaves:tkgetOpenFile:tkgetSaveFile:tkchooseDirectory:tkmessageBox:tkdialog:tkpopup:tclfile.tail:tclfile.dir:tclopen:tclclose:tclputs:tclread"
      },
      {
         "aliases" : "",
         "title" : "Page file using Tk text widget",
         "package" : "tcltk",
         "name" : "tkpager",
         "desc" : " This plugs into file.show, showing files in separate windows. "
      },
      {
         "title" : "Progress Bars via Tk",
         "aliases" : "getTkProgressBar:setTkProgressBar:close.tkProgressBar",
         "name" : "tkProgressBar",
         "desc" : " Put up a Tk progress bar widget. ",
         "package" : "tcltk"
      },
      {
         "aliases" : "",
         "title" : "Tcl/Tk GUI startup",
         "package" : "tcltk",
         "name" : "tkStartGUI",
         "desc" : " Starts up the Tcl/Tk GUI "
      },
      {
         "aliases" : "tkactivate:tkadd:tkaddtag:tkbbox:tkcanvasx:tkcanvasy:tkcget:tkcompare:tkconfigure:tkcoords:tkcreate:tkcurselection:tkdchars:tkdebug:tkdelete:tkdelta:tkdeselect:tkdlineinfo:tkdtag:tkdump:tkentrycget:tkentryconfigure:tkfind:tkflash:tkfraction:tkget:tkgettags:tkicursor:tkidentify:tkindex:tkinsert:tkinvoke:tkitembind:tkitemcget:tkitemconfigure:tkitemfocus:tkitemlower:tkitemraise:tkitemscale:tkmark.gravity:tkmark.names:tkmark.next:tkmark.previous:tkmark.set:tkmark.unset:tkmove:tknearest:tkpost:tkpostcascade:tkpostscript:tkscan.mark:tkscan.dragto:tksearch:tksee:tkselect:tkselection.adjust:tkselection.anchor:tkselection.clear:tkselection.from:tkselection.includes:tkselection.present:tkselection.range:tkselection.set:tkselection.to:tkset:tksize:tktoggle:tktag.add:tktag.bind:tktag.cget:tktag.configure:tktag.delete:tktag.lower:tktag.names:tktag.nextrange:tktag.prevrange:tktag.raise:tktag.ranges:tktag.remove:tktype:tkunpost:tkwindow.cget:tkwindow.configure:tkwindow.create:tkwindow.names:tkxview:tkxview.moveto:tkxview.scroll:tkyposition:tkyview:tkyview.moveto:tkyview.scroll",
         "title" : "Tk widget commands",
         "package" : "tcltk",
         "desc" : " These functions interface to Tk widget commands. ",
         "name" : "TkWidgetcmds"
      },
      {
         "name" : "TkWidgets",
         "desc" : " Create Tk widgets and associated objects. ",
         "package" : "tcltk",
         "title" : "Tk widgets",
         "aliases" : "tkwidget:tkbutton:tkcanvas:tkcheckbutton:tkentry:tkframe:tklabel:tklistbox:tkmenu:tkmenubutton:tkmessage:tkradiobutton:tkscale:tkscrollbar:tktext:tktoplevel:ttkbutton:ttkcheckbutton:ttkcombobox:ttkentry:ttkframe:ttkimage:ttklabel:ttklabelframe:ttkmenubutton:ttknotebook:ttkpanedwindow:ttkprogressbar:ttkradiobutton:ttkscrollbar:ttkseparator:ttksizegrip:ttktreeview"
      },
      {
         "package" : "tools",
         "name" : "add_datalist",
         "desc" : " The data() command with no arguments lists all the datasets available via data in attached packages, and to do so a per-package list is installed. Creating that list at install time can be slow for packages with huge datasets, and can be expedited by a supplying data/datalist file. ",
         "aliases" : "",
         "title" : " Add a datalist File to a Package "
      },
      {
         "title" : "Asserting Error Conditions",
         "aliases" : "assertWarning:assertError",
         "desc" : " When testing code, it is not sufficient to check that results are correct, but also that errors or warnings are signalled in appropriate situations. The functions described here provide a convenient facility for doing so. The three functions check that evaluating the supplied expression produces an error, a warning or one of a specified list of conditions, respectively. If the assertion fails, an error is signalled. ",
         "name" : "assertCondition",
         "package" : "tools"
      },
      {
         "aliases" : "getBibstyle",
         "title" : " Select or define a bibliography style. ",
         "package" : "tools",
         "name" : "bibstyle",
         "desc" : " This function defines and registers styles for rendering bibentry objects into Rd format, for later conversion to text, HTML, etc. "
      },
      {
         "title" : "Build one vignette",
         "aliases" : "",
         "name" : "buildVignette",
         "desc" : " Run Sweave (or other custom weave function) texi2dvi, and/or Stangle (or other custom tangle function) on one vignette. This is the workhorse of R CMD Sweave. ",
         "package" : "tools"
      },
      {
         "title" : "List and Build Package Vignettes",
         "aliases" : "pkgVignettes",
         "name" : "buildVignettes",
         "desc" : " Run Sweave (or other custom weave function) and texi2dvi on all vignettes of a package. ",
         "package" : "tools"
      },
      {
         "aliases" : "charset_to_Unicode",
         "title" : "Conversion Tables between Character Sets",
         "package" : "tools",
         "desc" : " charset_to_Unicode is a matrix of Unicode code points with columns for the common 8-bit encodings. Adobe_glyphs is a data frame which gives Adobe glyph names for Unicode code points. It has two character columns, \"adobe\" and \"unicode\" (a 4-digit hex representation). ",
         "name" : "charsets"
      },
      {
         "title" : "Check Source Packages and Their Reverse Dependencies",
         "aliases" : "summarize_check_packages_in_dir_depends:summarize_check_packages_in_dir_results:summarize_check_packages_in_dir_timings:check_packages_in_dir_changes",
         "desc" : " Check source packages in a given directory, optionally with their reverse dependencies. ",
         "name" : "check_packages_in_dir",
         "package" : "tools"
      },
      {
         "package" : "tools",
         "name" : "checkFF",
         "desc" : " Performs checks on calls to compiled code from R code. Currently only checks whether the interface functions such as .C and .Fortran are called with a \"NativeSymbolInfo\" first argument or with argument PACKAGE specified, which is highly recommended to avoid name clashes in foreign function calls. ",
         "aliases" : "print.checkFF",
         "title" : "Check Foreign Function Calls"
      },
      {
         "desc" : " checkMD5sums checks the files against a file MD5. ",
         "name" : "checkMD5sums",
         "package" : "tools",
         "title" : "Check and Create MD5 Checksum Files",
         "aliases" : ""
      },
      {
         "aliases" : "checkPoFiles",
         "title" : " Check translation files for inconsistent format strings. ",
         "package" : "tools",
         "name" : "checkPoFiles",
         "desc" : " These functions compare formats embedded in English messages with translated strings to check for consistency. checkPoFile checks one file, while checkPoFiles checks all files for a specified language. "
      },
      {
         "name" : "checkRd",
         "desc" : " Check an help file or the output of the parse_Rd function. ",
         "package" : "tools",
         "title" : " Check an Rd Object ",
         "aliases" : ""
      },
      {
         "package" : "tools",
         "name" : "checkRdaFiles",
         "desc" : " This reports for each of the files produced by save the size, if it was saved in ASCII or XDR binary format, and if it was compressed (and if so in what format). Usually such files have extension .rda or .RData, hence the name of the function. ",
         "aliases" : "resaveRdaFiles",
         "title" : " Report on Details of Saved Images or Re-saves them "
      },
      {
         "aliases" : "print.checkTnF",
         "title" : "Check R Packages or Code for T/F",
         "package" : "tools",
         "desc" : " Checks the specified R package or code file for occurrences of T or F, and gathers the expression containing these. This is useful as in R T and F are just variables which are set to the logicals TRUE and FALSE by default, but are not reserved words and hence can be overwritten by the user. Hence, one should always use TRUE and FALSE for the logicals. ",
         "name" : "checkTnF"
      },
      {
         "package" : "tools",
         "name" : "checkVignettes",
         "desc" : " Check all Sweave files of a package by running Sweave and/or Stangle on them. All R source code files found after the tangling step are sourceed to check whether all code can be executed without errors. ",
         "aliases" : "print.checkVignettes",
         "title" : "Check Package Vignettes"
      },
      {
         "title" : "Check Code/Documentation Consistency",
         "aliases" : "codocClasses:codocData:print.codoc:print.codocClasses:print.codocData",
         "name" : "codoc",
         "desc" : " Find inconsistencies between actual and documented structure of objects in a package. codoc compares names and optionally also corresponding positions and default values of the arguments of functions. codocClasses and codocData compare slot names of S4 classes and variable names of data sets, respectively. ",
         "package" : "tools"
      },
      {
         "package" : "tools",
         "desc" : " Re-save PDF files (especially vignettes) more compactly. Support function for R CMD build --compact-vignettes. ",
         "name" : "compactPDF",
         "aliases" : "format.compactPDF",
         "title" : " Compact PDF Files "
      },
      {
         "title" : "Delimited Pattern Matching",
         "aliases" : "",
         "desc" : " Match delimited substrings in a character vector, with proper nesting. ",
         "name" : "delimMatch",
         "package" : "tools"
      },
      {
         "package" : "tools",
         "name" : "dependsOnPkgs",
         "desc" : " Find reverse dependencies of packages, that is those packages which depend on this one, and (optionally) so on recursively. ",
         "aliases" : "",
         "title" : "Find Reverse Dependencies"
      },
      {
         "package" : "tools",
         "desc" : " Translate non-ASCII characters in text to LaTeX escape sequences. ",
         "name" : "encoded_text_to_latex",
         "aliases" : "",
         "title" : "Translate non-ASCII Text to LaTeX Escapes"
      },
      {
         "title" : "File Utilities",
         "aliases" : "file_path_as_absolute:file_path_sans_ext:list_files_with_exts:list_files_with_type",
         "name" : "fileutils",
         "desc" : " Utilities for listing files, and manipulating file paths. ",
         "package" : "tools"
      },
      {
         "title" : " Find a GhostScript Executable ",
         "aliases" : "R_GSCMD:GSC",
         "desc" : " Find a GhostScript executable in a cross-platform way. ",
         "name" : "find_gs_cmd",
         "package" : "tools"
      },
      {
         "package" : "tools",
         "desc" : " Given a dependency matrix, will create a DependsList object for that package which will include the dependencies for that matrix, which ones are installed, which unresolved dependencies were found online, which unresolved dependencies were not found online, and any R dependencies. ",
         "name" : "getDepList",
         "aliases" : "pkgDepends",
         "title" : "Functions to Retrieve Dependency Information"
      },
      {
         "title" : " Get information on installed vignettes. ",
         "aliases" : "",
         "desc" : " This function gets information on installed vignettes. ",
         "name" : "getVignetteInfo",
         "package" : "tools"
      },
      {
         "aliases" : "",
         "title" : " Generate a standard HTML header for R help ",
         "package" : "tools",
         "desc" : " This function generates the standard HTML header used on R help pages. ",
         "name" : "HTMLheader"
      },
      {
         "name" : "HTMLlinks",
         "desc" : " Compute relative file paths for URLs to other package's installed HTML documentation. ",
         "package" : "tools",
         "title" : "Collect HTML Links from Package Documentation",
         "aliases" : ""
      },
      {
         "package" : "tools",
         "name" : "installFoundDepends",
         "desc" : " This function will take the Found element of a pkgDependsList object and attempt to install all of the listed packages from the specified repositories. ",
         "aliases" : "",
         "title" : "A function to install unresolved dependencies"
      },
      {
         "package" : "tools",
         "name" : "loadRdMacros",
         "desc" : " Loads macros from an .Rd file, or from several .Rd files contained in a package. ",
         "aliases" : "loadPkgRdMacros",
         "title" : " Load user-defined Rd help system macros. "
      },
      {
         "name" : "make_translations_pkg",
         "desc" : " A utility for R Core members to prepare a package of updated translations. ",
         "package" : "tools",
         "title" : " Package the Current Translations in the sources ",
         "aliases" : ""
      },
      {
         "package" : "tools",
         "desc" : " Tools for lazy loading of packages from a database. ",
         "name" : "makeLazyLoading",
         "aliases" : "",
         "title" : "Lazy Loading of Packages"
      },
      {
         "name" : "md5sum",
         "desc" : " Compute the 32-byte MD5 hashes of one or more files. ",
         "package" : "tools",
         "title" : "Compute MD5 Checksums",
         "aliases" : ""
      },
      {
         "desc" : " Parses and checks the dependencies of a package against the currently installed version of R (and other packages). ",
         "name" : "package.dependencies",
         "package" : "tools",
         "title" : "Check Package Dependencies",
         "aliases" : ""
      },
      {
         "desc" : " Find (recursively) dependencies or reverse dependencies of packages. ",
         "name" : "package_dependencies",
         "package" : "tools",
         "title" : "Computations on the Dependency Hierarchy of Packages",
         "aliases" : ""
      },
      {
         "title" : " Parse an Rd file ",
         "aliases" : "print.Rd:as.character.Rd",
         "name" : "parse_Rd",
         "desc" : " This function reads an R documentation (Rd) file and parses it, for processing by other functions. ",
         "package" : "tools"
      },
      {
         "package" : "tools",
         "desc" : " The parseLatex function parses LaTeX source, producing a structured object; deparseLatex reverses the process. The latexToUtf8 function takes a LaTeX object, and processes a number of different macros to convert them into the corresponding UTF-8 characters. ",
         "name" : "parseLatex",
         "aliases" : "deparseLatex:latexToUtf8",
         "title" : " These experimental functions work with a subset of LaTeX code. "
      },
      {
         "aliases" : "",
         "title" : "Printing Utilities",
         "package" : "tools",
         "desc" : " .print.via.format is a prototype print() method, useful, at least as a start, by a simple print.<myS3class> <- .print.via.format ",
         "name" : ".print.via.format"
      },
      {
         "name" : "pskill",
         "desc" : " pskill sends a signal to a process, usually to terminate it. ",
         "package" : "tools",
         "title" : "Kill a Process",
         "aliases" : "SIGHUP:SIGINT:SIGQUIT:SIGKILL:SIGTERM:SIGSTOP:SIGTSTP:SIGCONT:SIGCHLD:SIGUSR1:SIGUSR2"
      },
      {
         "package" : "tools",
         "desc" : " Get or set the niceness of the current process, or one or more other processes. ",
         "name" : "psnice",
         "aliases" : "",
         "title" : "Get or Set the Priority (Niceness) of a Process"
      },
      {
         "desc" : " Functions for performing various quality checks. ",
         "name" : "QC",
         "package" : "tools",
         "title" : "QC Checks for R Code and/or Documentation",
         "aliases" : "checkDocFiles:checkDocStyle:checkReplaceFuns:checkS3methods:print.checkDocFiles:print.checkDocStyle:print.checkReplaceFuns:print.checkS3methods"
      },
      {
         "title" : " Rd Converters ",
         "aliases" : "Rd2HTML:Rd2ex:Rd2latex",
         "desc" : " These functions take the output of the parse_Rd function and produce a help page from it. As they are mainly intended for internal use, their interfaces are subject to change. ",
         "name" : "Rd2HTML",
         "package" : "tools"
      },
      {
         "aliases" : "",
         "title" : " Set formatting options for text help ",
         "package" : "tools",
         "desc" : " This function sets various options for displaying text help. ",
         "name" : "Rd2txt_options"
      },
      {
         "name" : "Rdiff",
         "desc" : " Given two output files, compute differences ignoring headers, footers and some other differences. ",
         "package" : "tools",
         "title" : "Difference R Output Files",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Generate Index from Rd Files",
         "package" : "tools",
         "name" : "Rdindex",
         "desc" : " Print a 2-column index table with names and titles from given R documentation files to a given output file or connection. The titles are nicely formatted between two column positions (typically 25 and 72, respectively). "
      },
      {
         "package" : "tools",
         "name" : "RdTextFilter",
         "desc" : " This function blanks out all non-text in an Rd file, for spell checking or other uses. ",
         "aliases" : "",
         "title" : " Select text in an Rd file. "
      },
      {
         "aliases" : "",
         "title" : "Rd Utilities",
         "package" : "tools",
         "desc" : "Utilities for computing on the information in Rd objects.",
         "name" : "Rdutils"
      },
      {
         "desc" : " Read item/description information from 00Index-like files. Such files are description lists rendered in tabular form, and currently used for the INDEX and demo/00Index files of add-on packages. ",
         "name" : "read.00Index",
         "package" : "tools",
         "title" : "Read 00Index-style Files",
         "aliases" : ""
      },
      {
         "package" : "tools",
         "name" : "showNonASCII",
         "desc" : " This function prints elements of a character vector which contain non-ASCII bytes, printing such bytes as a escape like <fc>. ",
         "aliases" : "showNonASCIIfile",
         "title" : "Pick Out Non-ASCII Characters"
      },
      {
         "title" : "Start the Dynamic HTML Help System",
         "aliases" : "help.ports:R_DISABLE_HTTPD",
         "desc" : " This function starts the internal help server, so that HTML help pages are rendered when requested. ",
         "name" : "startDynamicHelp",
         "package" : "tools"
      },
      {
         "title" : " Strip R code out of Sweave file ",
         "aliases" : "",
         "name" : "SweaveTeXFilter",
         "desc" : " This function blanks out code chunks and Noweb markup in an Sweave input file, for spell checking or other uses. ",
         "package" : "tools"
      },
      {
         "title" : "Test Installed Packages",
         "aliases" : "testInstalledPackages:testInstalledBasic:TEST_MC_CORES",
         "desc" : " These functions allow an installed package to be tested, or all base and recommended packages. ",
         "name" : "testInstalledPackage",
         "package" : "tools"
      },
      {
         "name" : "texi2dvi",
         "desc" : " Run latex and bibtex until all cross-references are resolved and create either a dvi or a PDF file. ",
         "package" : "tools",
         "title" : "Compile LaTeX Files",
         "aliases" : "texi2pdf"
      },
      {
         "aliases" : "toHTML.packageIQR:toHTML.news_db",
         "title" : " Display an object in HTML. ",
         "package" : "tools",
         "name" : "toHTML",
         "desc" : " This generic function generates a complete HTML page from an object. "
      },
      {
         "package" : "tools",
         "desc" : " The functions or variables listed here are no longer part of as they are not needed (any more). ",
         "name" : "tools-defunct",
         "aliases" : "Rd_parse:readNEWS:checkNEWS",
         "title" : "Defunct Objects in Package tools"
      },
      {
         "package" : "tools",
         "name" : "tools-deprecated",
         "desc" : " The functions or variables listed here are provided for compatibility with older versions of only, and may be defunct as soon as of the next release. ",
         "aliases" : "",
         "title" : "Deprecated Objects in Package tools"
      },
      {
         "package" : "tools",
         "name" : "tools-package",
         "desc" : " Tools for package development, administration and documentation. ",
         "aliases" : "tools",
         "title" : "Tools for Package Development"
      },
      {
         "package" : "tools",
         "desc" : " Methods for this function render their associated classes as a fragment of Rd code, which can then be rendered into text, HTML, or LaTeX. ",
         "name" : "toRd",
         "aliases" : "toRd.default:toRd.bibentry",
         "title" : " Generic function to convert object to a fragment of Rd code. "
      },
      {
         "package" : "tools",
         "desc" : " Convert a character vector to title case, especially package titles. ",
         "name" : "toTitleCase",
         "aliases" : "",
         "title" : "Convert Titles to Title Case"
      },
      {
         "desc" : " Finds the objects in a package which are undocumented, in the sense that they are visible to the user (or data objects or S4 classes provided by the package), but no documentation entry exists. ",
         "name" : "undoc",
         "package" : "tools",
         "title" : "Find Undocumented Objects",
         "aliases" : "print.undoc"
      },
      {
         "title" : " Prepare Translations for a Package ",
         "aliases" : "",
         "desc" : " Prepare the po directory of a package and compile and install the translations. ",
         "name" : "update_pkg_po",
         "package" : "tools"
      },
      {
         "desc" : " Given a vignette name, will create a DependsList object that reports information about the packages the vignette depends on. ",
         "name" : "vignetteDepends",
         "package" : "tools",
         "title" : " Retrieve Dependency Information for a Vignette",
         "aliases" : ""
      },
      {
         "title" : "Set or Get a Vignette Processing Engine",
         "aliases" : "",
         "name" : "vignetteEngine",
         "desc" : " Vignettes are normally processed by Sweave, but package writers may choose to use a different engine (e.g., one provided by the \\\\href{https://CRAN.R-project.org/package=#1}{\\\\pkg{#1}}knitrhttps://CRAN.R-project.org/package=knitrknitr, \\\\href{https://CRAN.R-project.org/package=#1}{\\\\pkg{#1}}nowebhttps://CRAN.R-project.org/package=nowebnoweb or \\\\href{https://CRAN.R-project.org/package=#1}{\\\\pkg{#1}}R.rsphttps://CRAN.R-project.org/package=R.rspR.rsp packages). This function is used by those packages to register their engines, and internally by to retrieve them. ",
         "package" : "tools"
      },
      {
         "aliases" : "",
         "title" : "Generate PACKAGES files",
         "package" : "tools",
         "name" : "write_PACKAGES",
         "desc" : " Generate PACKAGES and PACKAGES.gz files for a repository of source or Mac/Windows binary packages. "
      },
      {
         "title" : "Extract Translatable Messages from R Files in a Package",
         "aliases" : "xngettext:xgettext2pot",
         "name" : "xgettext",
         "desc" : " For each file in the R directory (including system-specific subdirectories) of a package, extract the unique arguments passed to stop, warning, message, gettext and gettextf, or to ngettext. ",
         "package" : "tools"
      },
      {
         "name" : "adist",
         "desc" : " Compute the approximate string distance between character vectors. The distance is a generalized Levenshtein (edit) distance, giving the minimal possibly weighted number of insertions, deletions and substitutions needed to transform one string into another. ",
         "package" : "utils",
         "title" : "Approximate String Distances",
         "aliases" : ""
      },
      {
         "name" : "alarm",
         "desc" : " Gives an audible or visual signal to the user. ",
         "package" : "utils",
         "title" : "Alert the User",
         "aliases" : ""
      },
      {
         "package" : "utils",
         "desc" : " apropos() returns a character vector giving the names of all objects in the search list matching what. find() is a different user interface to the same task. ",
         "name" : "apropos",
         "aliases" : "find",
         "title" : "Find Objects by (Partial) Name"
      },
      {
         "name" : "aregexec",
         "desc" : " Determine positions of approximate string matches. ",
         "package" : "utils",
         "title" : "Approximate String Match Positions",
         "aliases" : ""
      },
      {
         "package" : "utils",
         "desc" : " Utilities for spell checking packages via Aspell, Hunspell or Ispell. ",
         "name" : "aspell-utils",
         "aliases" : "aspell_package_Rd_files:aspell_package_vignettes:aspell_package_R_files:aspell_package_C_files:aspell_write_personal_dictionary_file",
         "title" : "Spell Check Utilities"
      },
      {
         "package" : "utils",
         "desc" : " Spell check given files via Aspell, Hunspell or Ispell. ",
         "name" : "aspell",
         "aliases" : "",
         "title" : "Spell Check Interface"
      },
      {
         "name" : "available.packages",
         "desc" : " available.packages returns a matrix of details corresponding to packages currently available at one or more repositories. The current list of packages is downloaded over the internet (or copied from a local mirror). ",
         "package" : "utils",
         "title" : "List Available Packages at CRAN-like Repositories",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Batch Execution of R",
         "package" : "utils",
         "desc" : "Run non-interactively with input from infile and send output (stdout/stderr) to another file.",
         "name" : "BATCH"
      },
      {
         "name" : "bibentry",
         "desc" : " Functionality for representing and manipulating bibliographic information in enhanced BibTeX style. ",
         "package" : "utils",
         "title" : "Bibliography Entries",
         "aliases" : "print.bibentry"
      },
      {
         "aliases" : "wsbrowser",
         "title" : "Browse Objects in Environment",
         "package" : "utils",
         "desc" : " The browseEnv function opens a browser with list of objects currently in sys.frame() environment. ",
         "name" : "browseEnv"
      },
      {
         "name" : "browseURL",
         "desc" : " Load a given URL into an HTML browser. ",
         "package" : "utils",
         "title" : "Load URL into an HTML Browser",
         "aliases" : ""
      },
      {
         "title" : "List Vignettes in an HTML Browser",
         "aliases" : "print.browseVignettes",
         "name" : "browseVignettes",
         "desc" : " List available vignettes in an HTML browser with links to PDF, LaTeX/noweb source, and (tangled) R code (if available). ",
         "package" : "utils"
      },
      {
         "desc" : " Invokes an editor or email program to write a bug report or opens a web page for bug submission. Some standard information on the current version and configuration of are included automatically. ",
         "name" : "bug.report",
         "package" : "utils",
         "title" : "Send a Bug Report",
         "aliases" : ""
      },
      {
         "package" : "utils",
         "desc" : " Evaluates its arguments with the output being returned as a character string or sent to a file. Related to sink in the same way that with is related to attach. ",
         "name" : "capture.output",
         "aliases" : "",
         "title" : "Send Output to a Character String or File"
      },
      {
         "title" : " Detect which files have changed ",
         "aliases" : "changedFiles:print.changedFiles:print.fileSnapshot",
         "name" : "changedFiles",
         "desc" : " fileSnapshot takes a snapshot of a selection of files, recording summary information about each. changedFiles compares two snapshots, or compares one snapshot to the current state of the file system. The snapshots need not be the same directory; this could be used to compare two directories. ",
         "package" : "utils"
      },
      {
         "name" : "chooseBioCmirror",
         "desc" : " Interact with the user to choose a Bioconductor mirror. ",
         "package" : "utils",
         "title" : "Select a Bioconductor Mirror",
         "aliases" : "getBioCmirrors"
      },
      {
         "title" : "Select a CRAN Mirror",
         "aliases" : "getCRANmirrors",
         "desc" : " Interact with the user to choose a CRAN mirror. ",
         "name" : "chooseCRANmirror",
         "package" : "utils"
      },
      {
         "aliases" : "citation:readCitationFile",
         "title" : "Citing R and R Packages in Publications",
         "package" : "utils",
         "desc" : " How to cite and packages in publications. ",
         "name" : "citation"
      },
      {
         "package" : "utils",
         "name" : "cite",
         "desc" : " Cite a bibentry object in text. The cite() function uses the cite() function from the default bibstyle if present, or citeNatbib() if not. citeNatbib() uses a style similar to that used by the LaTeX package natbib. ",
         "aliases" : "citeNatbib",
         "title" : " Cite a bibliography entry. "
      },
      {
         "aliases" : "citHeader:citFooter",
         "title" : "Bibliography Entries (Older Interface)",
         "package" : "utils",
         "name" : "citEntry",
         "desc" : " Functionality for specifying bibliographic information in enhanced BibTeX style. "
      },
      {
         "title" : "Close a Socket",
         "aliases" : "",
         "desc" : " Closes the socket and frees the space in the file descriptor table. The port may not be freed immediately. ",
         "name" : "close.socket",
         "package" : "utils"
      },
      {
         "desc" : " Generate all combinations of the elements of x taken m at a time. If x is a positive integer, returns all combinations of the elements of seq(x) taken m at a time. If argument FUN is not NULL, applies a function given by the argument to each point. If simplify is FALSE, returns a list; otherwise returns an array, typically a matrix. ... are passed unchanged to the FUN function, if specified. ",
         "name" : "combn",
         "package" : "utils",
         "title" : "Generate All Combinations of n Elements, Taken m at a Time",
         "aliases" : ""
      },
      {
         "title" : "Compare Two Package Version Numbers",
         "aliases" : "",
         "desc" : " Compare two package version numbers to see which is later. ",
         "name" : "compareVersion",
         "package" : "utils"
      },
      {
         "title" : "Find Appropriate Paths in CRAN-like Repositories",
         "aliases" : "",
         "desc" : " contrib.url adds the appropriate type-specific path within a repository to each URL in repos. ",
         "name" : "contrib.url",
         "package" : "utils"
      },
      {
         "package" : "utils",
         "desc" : " count.fields counts the number of fields, as separated by sep, in each of the lines of file read. ",
         "name" : "count.fields",
         "aliases" : "",
         "title" : "Count the Number of Fields per Line"
      },
      {
         "package" : "utils",
         "name" : "create.post",
         "desc" : " An ancillary function used by bug.report and help.request to prepare emails for submission to package maintainers or to mailing lists. ",
         "aliases" : "",
         "title" : " Ancillary Function for Preparing Emails and Postings "
      },
      {
         "title" : "Data Sets",
         "aliases" : "print.packageIQR",
         "desc" : " Loads specified data sets, or list the available data sets. ",
         "name" : "data",
         "package" : "utils"
      },
      {
         "title" : "Spreadsheet Interface for Entering Data",
         "aliases" : "dataentry:de:de.ncols:de.restore:de.setup",
         "desc" : " A spreadsheet-like editor for entering or editing data. ",
         "name" : "dataentry",
         "package" : "utils"
      },
      {
         "desc" : " Functions to dump the evaluation environments (frames) and to examine dumped frames. ",
         "name" : "debugger",
         "package" : "utils",
         "title" : "Post-Mortem Debugging",
         "aliases" : "dump.frames"
      },
      {
         "aliases" : "",
         "title" : "Demonstrations of R Functionality",
         "package" : "utils",
         "desc" : " demo is a user-friendly interface to running some demonstration scripts. demo() gives the list of available topics. ",
         "name" : "demo"
      },
      {
         "name" : "download.file",
         "desc" : " This function can be used to download a file from the Internet. ",
         "package" : "utils",
         "title" : "Download File from the Internet",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Download Packages from CRAN-like Repositories",
         "package" : "utils",
         "desc" : " These functions can be used to automatically compare the version numbers of installed packages with the newest available version on the repositories and update outdated packages on the fly. ",
         "name" : "download.packages"
      },
      {
         "package" : "utils",
         "name" : "edit.data.frame",
         "desc" : " Use data editor on data frame or matrix contents. ",
         "aliases" : "edit.matrix",
         "title" : "Edit Data Frames and Matrices"
      },
      {
         "title" : "Invoke a Text Editor",
         "aliases" : "edit.default:vi:emacs:pico:xemacs:xedit",
         "desc" : " Invoke a text editor on an object. ",
         "name" : "edit",
         "package" : "utils"
      },
      {
         "title" : "Run an Examples Section from the Online Help",
         "aliases" : "",
         "desc" : " Run all the code from the Examples part of 's online help topic topic with possible exceptions dontrun, dontshow, and donttest, see Details below. ",
         "name" : "example",
         "package" : "utils"
      },
      {
         "title" : "Edit One or More Files",
         "aliases" : "",
         "desc" : "Edit one or more files in a text editor.",
         "name" : "file.edit",
         "package" : "utils"
      },
      {
         "title" : " Shell-style Tests on Files ",
         "aliases" : "",
         "name" : "file_test",
         "desc" : " Utility for shell-style file tests. ",
         "package" : "utils"
      },
      {
         "desc" : " These functions locate objects containing particular lines of source code, using the information saved when the code was parsed with keep.source = TRUE. ",
         "name" : "findLineNum",
         "package" : "utils",
         "title" : " Find the Location of a Line of Source Code, or Set a Breakpoint There. ",
         "aliases" : "setBreakpoint"
      },
      {
         "package" : "utils",
         "name" : "fix",
         "desc" : " fix invokes edit on x and then assigns the new (edited) version of x in the user's workspace. ",
         "aliases" : "",
         "title" : "Fix an Object"
      },
      {
         "package" : "utils",
         "name" : "flush.console",
         "desc" : " This does nothing except on console-based versions of . On the OS X and Windows GUIs, it ensures that the display of output in the console is current, even if output buffering is on. ",
         "aliases" : "",
         "title" : "Flush Output to A Console"
      },
      {
         "name" : "format",
         "desc" : " Format unordered (itemize) and ordered (enumerate) lists. ",
         "package" : "utils",
         "title" : "Format Unordered and Ordered Lists",
         "aliases" : "formatOL"
      },
      {
         "title" : "Retrieve an R Object, Including from a Namespace",
         "aliases" : "argsAnywhere:[.getAnywhere:print.getAnywhere",
         "desc" : " These functions locate all objects with name matching their argument, whether visible on the search path, registered as an S3 method or in a namespace but not exported. getAnywhere() returns the objects and argsAnywhere() returns the arguments of any objects that are functions. ",
         "name" : "getAnywhere",
         "package" : "utils"
      },
      {
         "aliases" : "assignInMyNamespace:getFromNamespace:fixInNamespace",
         "title" : "Utility functions for Developing Namespaces",
         "package" : "utils",
         "desc" : " Utility functions to access and replace the non-exported functions in a namespace, for use in developing packages with namespaces. They should not be used in production code (except perhaps assignInMyNamespace, but see the Note). ",
         "name" : "getFromNamespace"
      },
      {
         "desc" : " If the \"keep.source\" option is TRUE, 's parser will attach detailed information on the object it has parsed. These functions retrieve that information. ",
         "name" : "getParseData",
         "package" : "utils",
         "title" : " Get detailed parse information from object. ",
         "aliases" : "getParseText"
      },
      {
         "title" : "Get An S3 Method",
         "aliases" : "",
         "name" : "getS3method",
         "desc" : " Get a method for an S3 generic, possibly from a namespace or the generic's registry. ",
         "package" : "utils"
      },
      {
         "desc" : " Change wildcard aka globbing patterns into the corresponding regular expressions (regexp). ",
         "name" : "glob2rx",
         "package" : "utils",
         "title" : "Change Wildcard or Globbing Pattern into Regular Expression",
         "aliases" : ""
      },
      {
         "package" : "utils",
         "desc" : " For globalVariables, the names supplied are of functions or other objects that should be regarded as defined globally when the check tool is applied to this package. The call to globalVariables will be included in the package's source. Repeated calls in the same package accumulate the names of the global variables. Typical examples are the fields and methods in reference classes, which appear to be global objects to codetools. (This case is handled automatically by setRefClass() and friends, using the supplied field and method names.) For suppressForeignCheck, the names supplied are of variables used as .NAME in foreign function calls which should not be checked by checkFF(registration = TRUE). Without this declaration, expressions other than simple character strings are assumed to evaluate to registered native symbol objects. The type of call (.Call, .External, etc.) and argument counts will be checked. With this declaration, checks on those names will usually be suppressed. (If the code uses an expression that should only be evaluated at runtime, the message can be suppressed by wrapping it in a dontCheck function call, or by saving it to a local variable, and suppressing messages about that variable. See the example below.) ",
         "name" : "globalVariables",
         "aliases" : "suppressForeignCheck",
         "title" : " Declarations Used in Checking a Package "
      },
      {
         "aliases" : "head.default:head.data.frame:head.function:head.ftable:head.table:head.matrix:tail:tail.default:tail.data.frame:tail.function:tail.ftable:tail.table:tail.matrix",
         "title" : " Return the First or Last Part of an Object ",
         "package" : "utils",
         "desc" : " Returns the first or last parts of a vector, matrix, table, data frame or function. Since head() and tail() are generic functions, they may also have been extended to other classes. ",
         "name" : "head"
      },
      {
         "desc" : " help is the primary interface to the help systems. ",
         "name" : "help",
         "package" : "utils",
         "title" : "Documentation",
         "aliases" : ""
      },
      {
         "title" : "Send a Post to R-help",
         "aliases" : "",
         "name" : "help.request",
         "desc" : " Prompts the user to check they have done all that is expected of them before sending a post to the R-help mailing list, provides a template for the post with session information included and optionally sends the email (on Unix systems). ",
         "package" : "utils"
      },
      {
         "package" : "utils",
         "name" : "help.search",
         "desc" : " Allows for searching the help system for documentation matching a given character string in the (file) name, alias, title, concept or keyword entries (or any combination thereof), using either fuzzy matching or regular expression matching. Names and titles of the matched help entries are displayed nicely formatted. Vignette names, titles and keywords and demo names and titles may also be searched. ",
         "aliases" : "??:print.hsearch",
         "title" : "Search the Help System"
      },
      {
         "aliases" : "",
         "title" : "Hypertext Documentation",
         "package" : "utils",
         "desc" : " Start the hypertext (currently HTML) version of 's online documentation. ",
         "name" : "help.start"
      },
      {
         "title" : "Help Search Utilities",
         "aliases" : "hsearch_db_concepts:hsearch_db_keywords",
         "desc" : " Utilities for searching the help system. ",
         "name" : "hsearch-utils",
         "package" : "utils"
      },
      {
         "aliases" : "",
         "title" : "Install Packages from Repositories or Local Files",
         "package" : "utils",
         "desc" : " Download and install packages from CRAN-like repositories or from local files. ",
         "name" : "install.packages"
      },
      {
         "aliases" : "R_INSTALL_TAR",
         "title" : "Install Add-on Packages",
         "package" : "utils",
         "desc" : "Utility for installing add-on packages.",
         "name" : "INSTALL"
      },
      {
         "aliases" : "",
         "title" : "Find Installed Packages",
         "package" : "utils",
         "desc" : " Find (or retrieve) details of all packages installed in the specified libraries. ",
         "name" : "installed.packages"
      },
      {
         "package" : "utils",
         "desc" : " This functions aims to find a suitable coding for the locale named, by default the current locale, and if it is a UTF-8 locale a suitable single-byte encoding. ",
         "name" : "localeToCharset",
         "aliases" : "",
         "title" : " Select a Suitable Encoding Name from a Locale Name "
      },
      {
         "desc" : " ls.str and lsf.str are variations of ls applying str() to each matched name: see section Value. ",
         "name" : "ls.str",
         "package" : "utils",
         "title" : "List Objects and their Structure",
         "aliases" : "lsf.str:print.ls_str"
      },
      {
         "package" : "utils",
         "desc" : " Show the name and email address of the maintainer of a package. ",
         "name" : "maintainer",
         "aliases" : "",
         "title" : " Show Package Maintainer "
      },
      {
         "aliases" : "",
         "title" : "Update HTML Package List",
         "package" : "utils",
         "name" : "make.packages.html",
         "desc" : " Re-create the HTML list of packages. "
      },
      {
         "title" : "Create a Socket Connection",
         "aliases" : "print.socket",
         "desc" : " With server = FALSE attempts to open a client socket to the specified port and host. With server = TRUE the process listens on the specified port for a connection and then returns a server socket. It is a good idea to use on.exit to ensure that a socket is closed, as you only get 64 of them. ",
         "name" : "make.socket",
         "package" : "utils"
      },
      {
         "name" : "menu",
         "desc" : " menu presents the user with a menu of choices labelled from 1 to the number of choices. To exit without choosing an item one can select 0. ",
         "package" : "utils",
         "title" : "Menu Interaction Function",
         "aliases" : ""
      },
      {
         "package" : "utils",
         "name" : "methods",
         "desc" : " List all available methods for a S3 and S4 generic function, or all methods for an S3 or S4 class. ",
         "aliases" : "methods:print.MethodsFunction",
         "title" : "List Methods for S3 Generic Functions or Classes"
      },
      {
         "title" : "Managing Repository Mirrors",
         "aliases" : "mirror2html:checkCRAN",
         "desc" : " Functions helping to maintain CRAN, some of them may also be useful for administrators of other repository networks. ",
         "name" : "mirrorAdmin",
         "package" : "utils"
      },
      {
         "name" : "modifyList",
         "desc" : " Modifies a possibly nested list recursively by changing a subset of elements at each level to match a second list. ",
         "package" : "utils",
         "title" : "Recursively Modify Elements of a List",
         "aliases" : ""
      },
      {
         "title" : "Build and Query R or Package News Information",
         "aliases" : "",
         "desc" : " Build and query the news for R or add-on packages. ",
         "name" : "news",
         "package" : "utils"
      },
      {
         "desc" : " Provides an estimate of the memory that is being used to store an object. ",
         "name" : "object.size",
         "package" : "utils",
         "title" : "Report the Space Allocated for an Object",
         "aliases" : "format.object_size:print.object_size"
      },
      {
         "title" : "Create a Skeleton for a New Source Package",
         "aliases" : "",
         "name" : "package.skeleton",
         "desc" : " package.skeleton automates some of the setup for a new source package. It creates directories, saves functions, data, and R code files to appropriate places, and creates skeleton help files and a Read-and-delete-me file describing further steps in packaging. ",
         "package" : "utils"
      },
      {
         "package" : "utils",
         "desc" : " Parses and returns the DESCRIPTION file of a package. ",
         "name" : "packageDescription",
         "aliases" : "packageVersion:print.packageDescription",
         "title" : "Package Description"
      },
      {
         "package" : "utils",
         "name" : "packageName",
         "desc" : " Many environments are associated with a package; this function attempts to determine that package. ",
         "aliases" : "",
         "title" : " Find package associated with an environment. "
      },
      {
         "name" : "packageStatus",
         "desc" : " Summarize information about installed packages and packages available at various repositories, and automatically upgrade outdated packages. ",
         "package" : "utils",
         "title" : "Package Management Tools",
         "aliases" : "print.packageStatus:summary.packageStatus:update.packageStatus:upgrade.packageStatus:upgrade"
      },
      {
         "package" : "utils",
         "name" : "page",
         "desc" : " Displays a representation of the object named by x in a pager via file.show. ",
         "aliases" : "",
         "title" : "Invoke a Pager on an R Object"
      },
      {
         "aliases" : "as.person:as.person.default:[.person:$.person:as.character.person:c.person:format.person:print.person:toBibtex.person:personList:as.personList:as.personList.person:as.personList.default",
         "title" : "Persons",
         "package" : "utils",
         "name" : "person",
         "desc" : " A class and utility methods for holding information about persons like name and email address. "
      },
      {
         "name" : "PkgUtils",
         "desc" : " Utilities for checking whether the sources of an add-on package work correctly, and for building a source package from them. ",
         "package" : "utils",
         "title" : "Utilities for Building and Checking Add-on Packages",
         "aliases" : "check"
      },
      {
         "title" : " Trigger event handling ",
         "aliases" : "",
         "name" : "process.events",
         "desc" : " R front ends like the Windows GUI handle key presses and mouse clicks through events generated by the OS. These are processed automatically by R at intervals during computations, but in some cases it may be desirable to trigger immediate event handling. The process.events function does that. ",
         "package" : "utils"
      },
      {
         "name" : "prompt",
         "desc" : " Facilitate the constructing of files documenting objects. ",
         "package" : "utils",
         "title" : "Produce Prototype of an R Documentation File",
         "aliases" : "prompt.default:prompt.data.frame:promptImport"
      },
      {
         "name" : "promptData",
         "desc" : " Generates a shell of documentation for a data set. ",
         "package" : "utils",
         "title" : "Generate Outline Documentation for a Data Set",
         "aliases" : ""
      },
      {
         "name" : "promptPackage",
         "desc" : " Generates a shell of documentation for an installed or source package. ",
         "package" : "utils",
         "title" : "Generate a Shell for Documentation of a Package",
         "aliases" : ""
      },
      {
         "name" : "Question",
         "desc" : " These functions provide access to documentation. Documentation on a topic with name name (typically, an object or a data set) can be displayed by either help(\"name\") or ?name. ",
         "package" : "utils",
         "title" : "Documentation Shortcuts",
         "aliases" : "?"
      },
      {
         "name" : "rcompgen",
         "desc" : " This page documents a mechanism to generate relevant completions from a partially completed command line. It is not intended to be useful by itself, but rather in conjunction with other mechanisms that use it as a backend. The functions listed in the usage section provide a simple control and query mechanism. The actual interface consists of a few unexported functions described further down. ",
         "package" : "utils",
         "title" : "A Completion Generator for R",
         "aliases" : "rc.settings:rc.status:rc.getOption:rc.options:.DollarNames:.DollarNames.default:.DollarNames.list:.DollarNames.environment:completion"
      },
      {
         "package" : "utils",
         "desc" : " Reads a file in Data Interchange Format (DIF) and creates a data frame from it. DIF is a format for data matrices such as single spreadsheets. ",
         "name" : "read.DIF",
         "aliases" : "",
         "title" : "Data Input from Spreadsheet"
      },
      {
         "desc" : " Read fixed-format data files using Fortran-style format specifications. ",
         "name" : "read.fortran",
         "package" : "utils",
         "title" : "Read Fixed-Format Data in a Fortran-like Style",
         "aliases" : ""
      },
      {
         "desc" : " Read a table of fixed width formatted data into a data.frame. ",
         "name" : "read.fwf",
         "package" : "utils",
         "title" : "Read Fixed Width Format Files",
         "aliases" : ""
      },
      {
         "aliases" : "write.socket",
         "title" : " Read from or Write to a Socket",
         "package" : "utils",
         "desc" : " read.socket reads a string from the specified socket, write.socket writes to the specified socket. There is very little error checking done by either. ",
         "name" : "read.socket"
      },
      {
         "name" : "read.table",
         "desc" : " Reads a file in table format and creates a data frame from it, with cases corresponding to lines and variables to fields in the file. ",
         "package" : "utils",
         "title" : "Data Input",
         "aliases" : "read.csv:read.csv2:read.delim:read.delim2"
      },
      {
         "desc" : " This function allows the user to browse directly on any of the currently active function calls, and is suitable as an error option. The expression options(error = recover) will make this the error option. ",
         "name" : "recover",
         "package" : "utils",
         "title" : "Browsing after an Error",
         "aliases" : "limitedLabels"
      },
      {
         "package" : "utils",
         "desc" : " relist() is an S3 generic function with a few methods in order to allow easy inversion of unlist(obj) when that is used with an object obj of (S3) class \"relistable\". ",
         "name" : "relist",
         "aliases" : "relist.default:relist.list:relist.factor:relist.matrix:as.relistable:is.relistable:unlist.relistable",
         "title" : "Allow Re-Listing an unlist()ed Object"
      },
      {
         "aliases" : "",
         "title" : "Remove Installed Packages",
         "package" : "utils",
         "name" : "remove.packages",
         "desc" : " Removes installed packages/bundles and updates index information as necessary. "
      },
      {
         "title" : "Remove Add-on Packages",
         "aliases" : "",
         "name" : "REMOVE",
         "desc" : "Utility for removing add-on packages.",
         "package" : "utils"
      },
      {
         "title" : " Remove Stored Source from a Function. ",
         "aliases" : "",
         "desc" : " When options(\"keep.source\") is TRUE, a copy of the original source code to a function is stored with it. This function removes that copy. ",
         "name" : "removeSource",
         "package" : "utils"
      },
      {
         "title" : "R Home Directory",
         "aliases" : "",
         "desc" : " Returns the location of the home directory, which is the root of the installed tree. ",
         "name" : "RHOME",
         "package" : "utils"
      },
      {
         "aliases" : "",
         "title" : "Roman Numerals",
         "package" : "utils",
         "desc" : " Manipulate integers as roman numerals. ",
         "name" : "roman"
      },
      {
         "aliases" : "",
         "title" : "Enable Profiling of R's Execution",
         "package" : "utils",
         "name" : "Rprof",
         "desc" : " Enable or disable profiling of the execution of expressions. "
      },
      {
         "title" : "Enable Profiling of R's Memory Use",
         "aliases" : "",
         "desc" : " Enable or disable reporting of memory allocation in R. ",
         "name" : "Rprofmem",
         "package" : "utils"
      },
      {
         "package" : "utils",
         "desc" : " This is an alternative front end for use in #! scripts and other scripting applications. ",
         "name" : "Rscript",
         "aliases" : "",
         "title" : "Scripting Front-End for R"
      },
      {
         "aliases" : "",
         "title" : "Show R Manuals and Other Documentation",
         "package" : "utils",
         "desc" : " Utility function to find and display documentation. ",
         "name" : "RShowDoc"
      },
      {
         "package" : "utils",
         "name" : "RSiteSearch",
         "desc" : " Search for key words or phrases in help pages, vignettes or task views, using the search engine at http://search.r-project.org and view them in a web browser. ",
         "aliases" : "",
         "title" : " Search for Key Words or Phrases in Documentation "
      },
      {
         "desc" : " rtags provides etags-like indexing capabilities for R code, using R's own parser. ",
         "name" : "rtags",
         "package" : "utils",
         "title" : " An Etags-like Tagging Utility for R ",
         "aliases" : ""
      },
      {
         "name" : "Rtangle",
         "desc" : " A driver for Stangle that extracts code chunks. ",
         "package" : "utils",
         "title" : "R Driver for Stangle",
         "aliases" : "RtangleSetup"
      },
      {
         "aliases" : "RweaveLatexSetup",
         "title" : "R/LaTeX Driver for Sweave",
         "package" : "utils",
         "name" : "RweaveLatex",
         "desc" : " A driver for Sweave that translates R code chunks in LaTeX files. "
      },
      {
         "title" : "Load or Save or Display the Commands History",
         "aliases" : "savehistory:history:timestamp",
         "desc" : " Load or save or display the commands history. ",
         "name" : "savehistory",
         "package" : "utils"
      },
      {
         "title" : "Select Items from a List",
         "aliases" : "",
         "desc" : " Select item(s) from a character vector. ",
         "name" : "select.list",
         "package" : "utils"
      },
      {
         "name" : "sessionInfo",
         "desc" : " Print version information about , the OS and attached or loaded packages. ",
         "package" : "utils",
         "title" : "Collect Information About the Current R Session",
         "aliases" : "toLatex.sessionInfo:print.sessionInfo"
      },
      {
         "desc" : " Interact with the user to choose the package repositories to be used. ",
         "name" : "setRepositories",
         "package" : "utils",
         "title" : "Select Package Repositories",
         "aliases" : ""
      },
      {
         "aliases" : "",
         "title" : "Build Shared Object/DLL for Dynamic Loading",
         "package" : "utils",
         "name" : "SHLIB",
         "desc" : " Compile the given source files and then link all specified object files into a shared object aka DLL which can be loaded into using dyn.load or library.dynam. "
      },
      {
         "title" : " Source Reference Utilities ",
         "aliases" : "getSrcDirectory:getSrcref:getSrcLocation",
         "desc" : " These functions extract information from source references. ",
         "name" : "sourceutils",
         "package" : "utils"
      },
      {
         "desc" : " Stacking vectors concatenates multiple vectors into a single vector along with a factor indicating where each observation originated. Unstacking reverses this operation. ",
         "name" : "stack",
         "package" : "utils",
         "title" : "Stack or Unstack Vectors from a Data Frame or List",
         "aliases" : "stack.default:stack.data.frame:unstack:unstack.default:unstack.data.frame"
      },
      {
         "aliases" : "str.default:str.data.frame:strOptions",
         "title" : "Compactly Display the Structure of an Arbitrary R Object",
         "package" : "utils",
         "desc" : " Compactly display the internal structure of an object, a diagnostic function and an alternative to summary (and to some extent, dput). Ideally, only one line for each basic structure is displayed. It is especially well suited to compactly display the (abbreviated) contents of (possibly nested) lists. The idea is to give reasonable output for any object. It calls args for (non-primitive) function objects. strOptions() is a convenience function for setting options(str = .), see the examples. ",
         "name" : "str"
      },
      {
         "package" : "utils",
         "desc" : " Summarise the output of the Rprof function to show the amount of time used by different functions. ",
         "name" : "summaryRprof",
         "aliases" : "",
         "title" : "Summarise Output of R Sampling Profiler"
      },
      {
         "aliases" : "Stangle:SweaveSyntaxLatex:SweaveSyntaxNoweb",
         "title" : "Automatic Generation of Reports",
         "package" : "utils",
         "name" : "Sweave",
         "desc" : " Sweave provides a flexible framework for mixing text and R/S code for automatic report generation. The basic idea is to replace the code with its output, such that the final document only contains the text and the output of the statistical analysis: however, the source code can also be included. "
      },
      {
         "package" : "utils",
         "desc" : " This function converts the syntax of files in Sweave format to another Sweave syntax definition. ",
         "name" : "SweaveSyntConv",
         "aliases" : "",
         "title" : "Convert Sweave Syntax"
      },
      {
         "name" : "SweaveUtils",
         "desc" : " These functions are handy for writing Sweave drivers and currently not documented. Look at the source code of the Sweave Latex driver (in this package) or the HTML driver (in the R2HTML package from CRAN) to see how they can be used. ",
         "package" : "utils",
         "title" : "Sweave Driver Utilities",
         "aliases" : "RweaveChunkPrefix:RweaveEvalWithOpt:RweaveLatexFinish:RweaveLatexOptions:RweaveLatexWritedoc:RweaveTryStop:SweaveHooks:SweaveUtils:makeRweaveLatexCodeRunner"
      },
      {
         "aliases" : "",
         "title" : " Create a Tar Archive ",
         "package" : "utils",
         "name" : "tar",
         "desc" : " Create a tar archive. "
      },
      {
         "package" : "utils",
         "desc" : " These methods convert objects to character vectors with BibTeX or LaTeX markup. ",
         "name" : "toLatex",
         "aliases" : "print.Latex:toBibtex:print.Bibtex",
         "title" : "Converting R Objects to BibTeX or LaTeX"
      },
      {
         "package" : "utils",
         "name" : "txtProgressBar",
         "desc" : " Text progress bar in the console. ",
         "aliases" : "getTxtProgressBar:setTxtProgressBar:close.txtProgressBar",
         "title" : "Text Progress Bar"
      },
      {
         "package" : "utils",
         "desc" : " Convert a character vector to logical, integer, numeric, complex or factor as appropriate. ",
         "name" : "type.convert",
         "aliases" : "",
         "title" : "Type Conversion on Character Variables"
      },
      {
         "aliases" : "",
         "title" : " Extract or List Tar Archives ",
         "package" : "utils",
         "name" : "untar",
         "desc" : " Extract files from or list a tar archive. "
      },
      {
         "title" : " Extract or List Zip Archives ",
         "aliases" : "",
         "desc" : " Extract files from or list a zip archive. ",
         "name" : "unzip",
         "package" : "utils"
      },
      {
         "desc" : " old.packages indicates packages which have a (suitable) later version on the repositories whereas update.packages offers to download and install such packages. new.packages looks for (suitable) packages on the repositories that are not already installed, and optionally offers them for installation. ",
         "name" : "update.packages",
         "package" : "utils",
         "title" : "Compare Installed Packages with CRAN-like Repositories",
         "aliases" : "old.packages:new.packages"
      },
      {
         "title" : "Display a text URL",
         "aliases" : "",
         "desc" : " Extension of file.show to display text files from a remote server. ",
         "name" : "url.show",
         "package" : "utils"
      },
      {
         "aliases" : "URLdecode",
         "title" : "Encode or Decode a (partial) URL",
         "package" : "utils",
         "desc" : " Functions to encode or decode characters in URLs. ",
         "name" : "URLencode"
      },
      {
         "desc" : " The functions or variables listed here are no longer part of as they are not needed (any more). ",
         "name" : "utils-defunct",
         "package" : "utils",
         "title" : "Defunct Functions in Package utils",
         "aliases" : "package.contents:zip.file.extract:CRAN.packages"
      },
      {
         "package" : "utils",
         "name" : "utils-deprecated",
         "desc" : " These functions are provided for compatibility with older versions of only, and may be defunct as soon as of the next release. ",
         "aliases" : "",
         "title" : "Deprecated Functions in Package utils"
      },
      {
         "title" : " The R Utils Package ",
         "aliases" : "utils",
         "name" : "utils-package",
         "desc" : " R utility functions ",
         "package" : "utils"
      },
      {
         "aliases" : "",
         "title" : "Invoke a Data Viewer",
         "package" : "utils",
         "name" : "View",
         "desc" : " Invoke a spreadsheet-style data viewer on a matrix-like object. "
      },
      {
         "title" : "View or List Package Vignettes",
         "aliases" : "edit.vignette:print.vignette:vignettes",
         "name" : "vignette",
         "desc" : " View a specified package vignette, or list the available ones. ",
         "package" : "utils"
      },
      {
         "aliases" : "write.csv:write.csv2",
         "title" : "Data Output",
         "package" : "utils",
         "name" : "write.table",
         "desc" : " write.table prints its required argument x (after converting it to a data frame if it is not one nor a matrix) to a file or connection. "
      },
      {
         "package" : "utils",
         "name" : "zip",
         "desc" : " A wrapper for an external zip command to create zip archives. ",
         "aliases" : "",
         "title" : " Create Zip archives "
      },
      {
         "name" : "COMPILE",
         "desc" : " Compile given source files so that they can subsequently be collected into a shared object using R CMD SHLIB or an executable program using R CMD LINK. ",
         "package" : "man",
         "title" : "Compile Files for Use with R",
         "aliases" : ""
      },
      {
         "name" : "LINK",
         "desc" : " Front-end for creating executable programs. ",
         "package" : "man",
         "title" : "Create Executable Programs",
         "aliases" : ""
      },
      {
         "title" : "Report on Memory Allocation",
         "aliases" : "memory.limit",
         "desc" : " memory.size and memory.limit are used to manage the total memory allocation on Windows. On other platforms these are stubs which report infinity with a warning. ",
         "name" : "memory.size",
         "package" : "man"
      },
      {
         "title" : "Look up the IP Address by Hostname",
         "aliases" : "",
         "name" : "nsl",
         "desc" : " Interface to gethostbyname. ",
         "package" : "man"
      },
      {
         "package" : "man",
         "desc" : " This function allows you to tile or cascade windows, or to minimize or restore them. ",
         "name" : "arrangeWindows",
         "aliases" : "",
         "title" : " Rearrange windows in the R GUI. "
      },
      {
         "title" : "Choose a Folder Interactively",
         "aliases" : "",
         "name" : "choose.dir",
         "desc" : " Use a Windows shell folder widget to choose a folder interactively. ",
         "package" : "man"
      },
      {
         "desc" : " Use a Windows file dialog to choose a list of zero or more files interactively. ",
         "name" : "choose.files",
         "package" : "man",
         "title" : "Choose a List of Files Interactively",
         "aliases" : "Filters"
      },
      {
         "title" : "Read/Write to/from the Windows Clipboard",
         "aliases" : "readClipboard:writeClipboard:clipboard",
         "name" : "clipboard",
         "desc" : " Transfer text between a character vector and the Windows clipboard. ",
         "package" : "man"
      },
      {
         "name" : "DLL.version",
         "desc" : " Return the version of the package and the version of used to build the DLL, if available. ",
         "package" : "man",
         "title" : "DLL Version Information",
         "aliases" : ""
      },
      {
         "desc" : " Get the Windows handle of a window or of the process. ",
         "name" : "getWindowsHandle",
         "package" : "man",
         "title" : "Get a Windows Handle",
         "aliases" : ""
      },
      {
         "desc" : " This function gets the Windows handles of visible top level windows or windows within the MDI frame. ",
         "name" : "getWindowsHandles",
         "package" : "man",
         "title" : " Get handles of windows. ",
         "aliases" : ""
      },
      {
         "title" : "Report on Memory Allocation",
         "aliases" : "memory.limit",
         "desc" : " memory.size reports the current or maximum memory allocation of the malloc function used in this version of . memory.limit reports or increases the limit in force on the total allocation. ",
         "name" : "memory.size",
         "package" : "man"
      },
      {
         "desc" : " The file Rconsole configures the R GUI console in this Windows port. The loadRconsole function loads a new configuration. The file Rdevga configures the graphics devices windows, win.graph, win.metafile and win.print, as well as the bitmap devices bmp, jpeg, png and tiff (which use for type = \"windows\" use windows internally). ",
         "name" : "Rwin configuration",
         "package" : "man",
         "title" : "R for Windows Configuration",
         "aliases" : "Rdevga:loadRconsole"
      },
      {
         "aliases" : "",
         "title" : "Read a Windows Registy Hive",
         "package" : "man",
         "name" : "readRegistry",
         "desc" : " Read values of keys in the Windows Registry, and optionally whole hives. "
      },
      {
         "aliases" : "R_WIN_INTERNET2",
         "title" : " Set or disable the use of Windows internal functions for Internet access. ",
         "package" : "man",
         "name" : "setInternet2",
         "desc" : " With the --internet2 startup option, or via environment variable R_WIN_INTERNET2 or by calling this function, R will make use of the Windows functions underlying Internet Explorer. This allows specification of proxies, etc., in the Internet Options applet in Control Panel. Unlike the standard internal functions it will allow the use of https:// URLs and follow HTTP redirections. "
      },
      {
         "package" : "man",
         "desc" : " Set the title of the R window which will appear in the task bar, or of the statusbar (if in use). ",
         "name" : "setWindowTitle",
         "aliases" : "getWindowTitle:getIdentification:setStatusBar",
         "title" : "Set or get the Window Title, or Set the Statusbar"
      },
      {
         "package" : "man",
         "desc" : " Convert file paths to the short form. This is an interface to the Windows API call GetShortPathName. ",
         "name" : "shortPathName",
         "aliases" : "",
         "title" : "Express File Paths in Short Form"
      },
      {
         "name" : "winDialog",
         "desc" : " Put up a Windows dialog box to communicate with the user. There are various types, either for the user to select from a set of buttons or to edit a string. ",
         "package" : "man",
         "title" : "Dialog Boxes under Windows",
         "aliases" : "winDialogString"
      },
      {
         "package" : "man",
         "desc" : " Get the self-reported Windows version number. ",
         "name" : "winextras",
         "aliases" : "",
         "title" : "Get Windows Version"
      },
      {
         "desc" : " Enables users to add, delete and program menus under Windows. ",
         "name" : "winMenus",
         "package" : "man",
         "title" : "User Menus under Windows",
         "aliases" : "winMenuAddItem:winMenuDel:winMenuDelItem:winMenuNames:winMenuItems"
      },
      {
         "aliases" : "getWinProgressBar:setWinProgressBar:close.winProgressBar",
         "title" : "Progress Bars under Windows",
         "package" : "man",
         "name" : "winProgressBar",
         "desc" : " Put up a Windows progress bar widget. "
      }
   ]
}

